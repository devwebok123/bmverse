{"version":3,"file":"static/js/8081.f73a91a5.chunk.js","mappings":"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","sources":["../node_modules/@ethersproject/abi/src.ts/_version.ts","../node_modules/@ethersproject/abi/src.ts/coders/address.ts","../node_modules/@ethersproject/abi/src.ts/coders/anonymous.ts","../node_modules/@ethersproject/abi/src.ts/coders/array.ts","../node_modules/@ethersproject/abi/src.ts/coders/boolean.ts","../node_modules/@ethersproject/abi/src.ts/coders/bytes.ts","../node_modules/@ethersproject/abi/src.ts/coders/fixed-bytes.ts","../node_modules/@ethersproject/abi/src.ts/coders/null.ts","../node_modules/@ethersproject/abi/src.ts/coders/number.ts","../node_modules/@ethersproject/abi/src.ts/coders/string.ts","../node_modules/@ethersproject/abi/src.ts/coders/tuple.ts","../node_modules/@ethersproject/abi/src.ts/abi-coder.ts","../node_modules/@ethersproject/abi/src.ts/coders/abstract-coder.ts","../node_modules/@ethersproject/abi/src.ts/fragments.ts","../node_modules/@ethersproject/abi/src.ts/interface.ts","../node_modules/@ethersproject/address/src.ts/index.ts","../node_modules/@ethersproject/address/src.ts/_version.ts","../node_modules/@ethersproject/bignumber/src.ts/_version.ts","../node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../node_modules/@ethersproject/bignumber/node_modules/bn.js/lib/bn.js","../node_modules/@ethersproject/bytes/src.ts/index.ts","../node_modules/@ethersproject/bytes/src.ts/_version.ts","../node_modules/@ethersproject/constants/src.ts/bignumbers.ts","../node_modules/@ethersproject/hash/src.ts/id.ts","../node_modules/@ethersproject/keccak256/src.ts/index.ts","../node_modules/@ethersproject/logger/src.ts/index.ts","../node_modules/@ethersproject/logger/src.ts/_version.ts","../node_modules/@ethersproject/properties/src.ts/index.ts","../node_modules/@ethersproject/properties/src.ts/_version.ts","../node_modules/@ethersproject/rlp/src.ts/index.ts","../node_modules/@ethersproject/rlp/src.ts/_version.ts","../node_modules/@ethersproject/strings/src.ts/utf8.ts","../node_modules/@ethersproject/strings/src.ts/_version.ts"],"sourcesContent":["export const version = \"abi/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class AddressCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"address\", \"address\", localName, false);\n    }\n\n    defaultValue(): string {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n\n    encode(writer: Writer, value: string): number {\n        try {\n            value = getAddress(value)\n        } catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\n\nexport function pack(writer: Writer, coders: ReadonlyArray<Coder>, values: Array<any> | { [ name: string ]: any }): number {\n    let arrayValues: Array<any> = null;\n\n    if (Array.isArray(values)) {\n       arrayValues = values;\n\n    } else if (values && typeof(values) === \"object\") {\n        let unique: { [ name: string ]: boolean } = { };\n\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            unique[name] = true;\n\n            return values[name];\n        });\n\n    } else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n\n    let updateFuncs: Array<(baseOffset: number) => void> = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset: number) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n\n        } else {\n            coder.encode(staticWriter, value);\n        }\n    });\n\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n\nexport function unpack(reader: Reader, coders: Array<Coder>): Result {\n    let values: any = [];\n\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n\n    coders.forEach((coder) => {\n        let value: any = null;\n\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n\n        } else {\n            try {\n                value = coder.decode(reader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) { accum[name] = 0; }\n            accum[name]++;\n        }\n        return accum;\n    }, <{ [ name: string ]: number }>{ });\n\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder: Coder, index: number) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) { return; }\n\n        if (name === \"length\") { name = \"_length\"; }\n\n        if (values[name] != null) { return; }\n\n        const value = values[index];\n\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        } else {\n            values[name] = value;\n        }\n    });\n\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n\n    return Object.freeze(values);\n}\n\n\nexport class ArrayCoder extends Coder {\n    readonly coder: Coder;\n    readonly length: number;\n\n    constructor(coder: Coder, length: number, localName: string) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length: \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n\n        this.coder = coder;\n        this.length = length;\n    }\n\n    defaultValue(): Array<any> {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n\n        const result: Array<any> = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n\n    encode(writer: Writer, value: Array<any>): number {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n\n        let count = this.length;\n\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName? (\" \"+ this.localName): \"\"));\n\n        let coders = [];\n        for (let i = 0; i < value.length; i++) { coders.push(this.coder); }\n\n        return pack(writer, coders, value);\n    }\n\n    decode(reader: Reader): any {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) { coders.push(new AnonymousCoder(this.coder)); }\n\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, value: boolean): number {\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n\n","\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\n\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    readonly size: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, value: BytesLike): number {\n        let data = arrayify(value);\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NullCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"null\", \"\", localName, false);\n    }\n\n    defaultValue(): null {\n        return null;\n    }\n\n    encode(writer: Writer, value: any): number {\n        if (value != null) { this._throwError(\"not null\", value); }\n        return writer.writeBytes([ ]);\n    }\n\n    decode(reader: Reader): any {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NumberCoder extends Coder {\n    readonly size: number;\n    readonly signed: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        this.size = size;\n        this.signed = signed;\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, value: BigNumberish): number {\n        let v = BigNumber.from(value);\n\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        } else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n\n        return writer.writeValue(v);\n    }\n\n    decode(reader: Reader): any {\n        let value = reader.readValue().mask(this.size * 8);\n\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n\n        return reader.coerce(this.name, value);\n    }\n}\n\n","\"use strict\";\n\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Reader, Writer } from \"./abstract-coder\";\nimport { DynamicBytesCoder } from \"./bytes\";\n\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\n\nexport class TupleCoder extends Coder {\n    readonly coders: Array<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, value: Array<any> | { [ name: string ]: any }): number {\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\n\nimport { ParamType } from \"./fragments\";\n\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport class AbiCoder {\n    readonly coerceFunc: CoerceFunc;\n\n    constructor(coerceFunc?: CoerceFunc) {\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n\n    _getCoder(param: ParamType): Coder {\n\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n\n    _getWordSize(): number { return 32; }\n\n    _getReader(data: Uint8Array, allowLoose?: boolean): Reader {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n\n    _getWriter(): Writer {\n        return new Writer(this._getWordSize());\n    }\n\n    getDefaultValue(types: ReadonlyArray<string | ParamType>): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n\n    encode(types: ReadonlyArray<string | ParamType>, values: ReadonlyArray<any>): string {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n\n    decode(types: ReadonlyArray<string | ParamType>, data: BytesLike, loose?: boolean): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\n\nexport const defaultAbiCoder: AbiCoder = new AbiCoder();\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nexport interface Result extends ReadonlyArray<any> {\n    readonly [key: string]: any;\n}\n\nexport function checkResultErrors(result: Result): Array<{ path: Array<string | number>, error: Error }> {\n    // Find the first error (if any)\n    const errors: Array<{ path: Array<string | number>, error: Error }> = [ ];\n\n    const checkErrors = function(path: Array<string | number>, object: any): void {\n        if (!Array.isArray(object)) { return; }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n\n            try {\n                 checkErrors(childPath, object[key]);\n            } catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    }\n    checkErrors([ ], result);\n\n    return errors;\n\n}\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport abstract class Coder {\n\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    readonly name: string;\n\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    readonly type: string;\n\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    readonly localName: string;\n\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    readonly dynamic: boolean;\n\n    constructor(name: string, type: string, localName: string, dynamic: boolean) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n\n    _throwError(message: string, value: any): void {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n\n    abstract encode(writer: Writer, value: any): number;\n    abstract decode(reader: Reader): any;\n\n    abstract defaultValue(): any;\n}\n\nexport class Writer {\n    readonly wordSize: number;\n\n    _data: Array<Uint8Array>;\n    _dataLength: number;\n    _padding: Uint8Array;\n\n    constructor(wordSize?: number) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [ ];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n\n    get data(): string {\n        return hexConcat(this._data);\n    }\n    get length(): number { return this._dataLength; }\n\n    _writeData(data: Uint8Array): number {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n\n    appendWriter(writer: Writer): number {\n        return this._writeData(concat(writer._data));\n    }\n\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value: BytesLike): number {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([ bytes, this._padding.slice(paddingOffset) ])\n        }\n        return this._writeData(bytes);\n    }\n\n    _getValue(value: BigNumberish): Uint8Array {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([ this._padding.slice(bytes.length % this.wordSize), bytes ]);\n        }\n        return bytes;\n    }\n\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value: BigNumberish): number {\n        return this._writeData(this._getValue(value));\n    }\n\n    writeUpdatableValue(): (value: BigNumberish) => void {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value: BigNumberish) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\n\nexport class Reader {\n    readonly wordSize: number;\n    readonly allowLoose: boolean;\n\n    readonly _data: Uint8Array;\n    readonly _coerceFunc: CoerceFunc;\n\n    _offset: number;\n\n    constructor(data: BytesLike, wordSize?: number, coerceFunc?: CoerceFunc, allowLoose?: boolean) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n\n        this._offset = 0;\n    }\n\n    get data(): string { return hexlify(this._data); }\n    get consumed(): number { return this._offset; }\n\n    // The default Coerce function\n    static coerce(name: string, value: any): any {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) { value =  value.toNumber(); }\n        return value;\n    }\n\n    coerce(name: string, value: any): any {\n        if (this._coerceFunc) { return this._coerceFunc(name, value); }\n        return Reader.coerce(name, value);\n    }\n\n    _peekBytes(offset: number, length: number, loose?: boolean): Uint8Array {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            } else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength)\n    }\n\n    subReader(offset: number): Reader {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n\n    readBytes(length: number, loose?: boolean): Uint8Array {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n\n    readValue(): BigNumber {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport interface JsonFragmentType {\n    readonly name?: string;\n    readonly indexed?: boolean;\n    readonly type?: string;\n    readonly internalType?: any; // @TODO: in v6 reduce type\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\nexport interface JsonFragment {\n    readonly name?: string;\n    readonly type?: string;\n\n    readonly anonymous?: boolean;\n\n    readonly payable?: boolean;\n    readonly constant?: boolean;\n    readonly stateMutability?: string;\n\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    readonly gas?: string;\n};\n\nconst _constructorGuard = { };\n\n// AST Node parser state\ntype ParseState = {\n    allowArray?: boolean,\n    allowName?: boolean,\n    allowParams?: boolean,\n    allowType?: boolean,\n    readArray?: boolean,\n};\n\n// AST Node\ntype ParseNode = {\n    parent?: any,\n    type?: string,\n    name?: string,\n    state?: ParseState,\n    indexed?: boolean,\n    components?: Array<ParseNode>\n};\n\nlet ModifiersBytes: { [ name: string ]: boolean } = { calldata: true, memory: true, storage: true };\nlet ModifiersNest: { [ name: string ]: boolean } = { calldata: true, memory: true };\nfunction checkModifier(type: string, name: string): boolean {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) { return true; }\n    } else if (type === \"address\") {\n        if (name === \"payable\") { return true; }\n    } else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) { return true; }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param: string, allowIndexed: boolean): ParseNode {\n\n    let originalParam = param;\n    function throwError(i: number) {\n        logger.throwArgumentError(`unexpected character at position ${ i }`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n\n    function newNode(parent: ParseNode): ParseNode {\n        let node: ParseNode = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) { node.indexed = false; }\n        return node\n    }\n\n    let parent: ParseNode = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                } else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [ newNode(node) ];\n                node = node.components[0];\n                break;\n\n            case \")\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let child = node;\n                node = node.parent;\n                if (!node) { throwError(i); }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n\n            case \",\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let sibling: ParseNode = newNode(node.parent);\n                 //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n\n            // Hit a space...\n            case \" \":\n\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) { throwError(i); }\n                            if (node.indexed) { throwError(i); }\n                            node.indexed = true;\n                            node.name = \"\";\n                        } else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        } else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n\n                break;\n\n            case \"[\":\n                if (!node.state.allowArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n\n            case \"]\":\n                if (!node.state.readArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                } else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                } else if (node.state.readArray) {\n                    node.type += c;\n                } else {\n                    throwError(i);\n               }\n        }\n    }\n\n    if (node.parent) { logger.throwArgumentError(\"unexpected eof\", \"param\", param); }\n\n    delete parent.state;\n\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) { throwError(originalParam.length - 7); }\n        if (node.indexed) { throwError(originalParam.length - 7); }\n        node.indexed = true;\n        node.name = \"\";\n    } else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n\n    parent.type = verifyType(parent.type);\n\n    return parent;\n}\n\nfunction populate(object: any, params: any) {\n    for (let key in params) { defineReadOnly(object, key, params[key]); }\n}\n\nexport const FormatTypes: { [ name: string ]: string } = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n\n    // JSON-format a la Solidity\n    json: \"json\"\n});\n\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nexport class ParamType {\n\n    // The local name of the parameter (of null if unbound)\n    readonly name: string;\n\n    // The fully qualified type (e.g. \"address\", \"tuple(address)\", \"uint256[3][]\"\n    readonly type: string;\n\n    // The base type (e.g. \"address\", \"tuple\", \"array\")\n    readonly baseType: string;\n\n    // Indexable Paramters ONLY (otherwise null)\n    readonly indexed: boolean;\n\n    // Tuples ONLY: (otherwise null)\n    //  - sub-components\n    readonly components: Array<ParamType>;\n\n    // Arrays ONLY: (otherwise null)\n    //  - length of the array (-1 for dynamic length)\n    //  - child type\n    readonly arrayLength: number;\n    readonly arrayChildren: ParamType;\n\n    readonly _isParamType: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) { logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new ParamType()\"\n        }); }\n        populate(this, params);\n\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        } else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\": this.type)\n            });\n        }\n\n        this._isParamType = true;\n\n        Object.freeze(this);\n    }\n\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            let result: any = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\": this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof(this.indexed) === \"boolean\") { result.indexed = this.indexed; }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = \"\";\n\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\": String(this.arrayLength)) + \"]\";\n        } else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map(\n                    (comp) => comp.format(format)\n                ).join((format === FormatTypes.full) ? \", \": \",\") + \")\";\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) { result += \" indexed\"; }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    static from(value: string | JsonFragmentType | ParamType, allowIndexed?: boolean): ParamType {\n        if (typeof(value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragmentType | ParamType): ParamType {\n        if (ParamType.isParamType(value)) { return value; }\n\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null: !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject): null)\n        });\n    }\n\n    static fromString(value: string, allowIndexed?: boolean): ParamType {\n        function ParamTypify(node: ParseNode): ParamType {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n\n    static isParamType(value: any): value is ParamType {\n        return !!(value != null && value._isParamType);\n    }\n};\n\nfunction parseParams(value: string, allowIndex: boolean): Array<ParamType> {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\n\ntype TypeCheck<T> = { -readonly [ K in keyof T ]: T[K] };\n\ninterface _Fragment {\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: ReadonlyArray<ParamType>;\n}\n\nexport abstract class Fragment {\n\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: Array<ParamType>;\n\n    readonly _isFragment: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n\n        this._isFragment = true;\n\n        Object.freeze(this);\n    }\n\n    abstract format(format?: string): string;\n\n    static from(value: Fragment | JsonFragment | string): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        if (typeof(value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n\n        return Fragment.fromObject(value);\n    }\n\n    static fromObject(value: Fragment | JsonFragment): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n\n    static fromString(value: string): Fragment {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n\n        if (value.split(\" \")[0] === \"event\") {\n           return EventFragment.fromString(value.substring(5).trim());\n        } else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        } else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        } else if (value.split(\" \")[0] === \"error\") {\n           return ErrorFragment.fromString(value.substring(5).trim());\n        }\n\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n\n    static isFragment(value: any): value is Fragment {\n        return !!(value && value._isFragment);\n    }\n}\n\ninterface _EventFragment extends _Fragment {\n    readonly anonymous: boolean;\n}\n\nexport class EventFragment extends Fragment {\n    readonly anonymous: boolean;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: EventFragment | JsonFragment | string): EventFragment {\n        if (typeof(value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragment | EventFragment): EventFragment {\n        if (EventFragment.isEventFragment(value)) { return value; }\n\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_EventFragment> = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n\n        return new EventFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): EventFragment {\n\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch(modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n\n    static isEventFragment(value: any): value is EventFragment {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\n\nfunction parseGas(value: string, params: any): string {\n    params.gas = null;\n\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n\n    return value;\n}\n\nfunction parseModifiers(value: string, params: any): void {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\n\ntype StateInputValue = {\n    constant?: boolean;\n    payable?: boolean;\n    stateMutability?: string;\n    type?: string;\n};\n\ntype StateOutputValue = {\n    constant: boolean;\n    payable: boolean;\n    stateMutability: string;\n};\n\nfunction verifyState(value: StateInputValue): StateOutputValue {\n    let result: any = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n    } else if (value.payable != null) {\n        result.payable = !!value.payable;\n\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n\n        result.constant = !!value.constant;\n\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        } else {\n            result.stateMutability = (result.payable ? \"payable\": \"nonpayable\");\n        }\n\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n\n    } else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\": \"payable\");\n\n    } else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n\n    return result;\n}\n\ninterface _ConstructorFragment extends _Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n}\n\nexport class ConstructorFragment extends Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n\n        let result = \"constructor(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n\n        return result.trim();\n    }\n\n    static from(value: ConstructorFragment | JsonFragment | string): ConstructorFragment {\n        if (typeof(value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ConstructorFragment | JsonFragment): ConstructorFragment {\n        if (ConstructorFragment.isConstructorFragment(value)) { return value; }\n\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n\n        const params: TypeCheck<_ConstructorFragment> = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): ConstructorFragment {\n        let params: any = { type: \"constructor\" };\n\n        value = parseGas(value, params);\n\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n\n        params.inputs = parseParams(parens[2].trim(), false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        return ConstructorFragment.fromObject(params);\n    }\n\n    static isConstructorFragment(value: any): value is ConstructorFragment {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\n\ninterface _FunctionFragment extends _ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n}\n\nexport class FunctionFragment extends ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            } else if (this.constant) {\n                result += \"view \";\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map(\n                    (output) => output.format(format)\n                ).join(\", \") + \") \";\n            }\n\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: FunctionFragment | JsonFragment | string): FunctionFragment {\n        if (typeof(value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n\n    static fromObject(value: FunctionFragment | JsonFragment): FunctionFragment {\n        if (FunctionFragment.isFunctionFragment(value)) { return value; }\n\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n\n        const params: TypeCheck<_FunctionFragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject): [ ]),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new FunctionFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): FunctionFragment {\n        let params: any = { type: \"function\" };\n        value = parseGas(value, params);\n\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        // We have outputs\n        if (comps.length > 1) {\n           let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        } else {\n            params.outputs = [ ];\n        }\n\n        return FunctionFragment.fromObject(params);\n    }\n\n    static isFunctionFragment(value: any): value is FunctionFragment {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n\n//export class StructFragment extends Fragment {\n//}\n\nfunction checkForbidden(fragment: ErrorFragment): ErrorFragment {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${ sig } error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\n\nexport class ErrorFragment extends Fragment {\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        return result.trim();\n    }\n\n    static from(value: ErrorFragment | JsonFragment | string): ErrorFragment {\n        if (typeof(value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ErrorFragment | JsonFragment): ErrorFragment {\n        if (ErrorFragment.isErrorFragment(value)) { return value; }\n\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_Fragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): [])\n        };\n\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n\n    static fromString(value: string): ErrorFragment {\n        let params: any = { type: \"error\" };\n\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n\n    static isErrorFragment(value: any): value is ErrorFragment {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\n\nfunction verifyType(type: string): string {\n\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    } else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n\n    // @TODO: more verification\n\n    return type;\n}\n\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value: string): string {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${ value }\"`, \"value\", value);\n    }\n    return value;\n}\n\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\n\nfunction splitNesting(value: string): Array<any> {\n    value = value.trim();\n\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        } else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            } else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) { result.push(accum); }\n\n    return result;\n}\n\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\"\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\n\nimport { AbiCoder, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, JsonFragment, ParamType } from \"./fragments\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport { checkResultErrors, Result };\n\nexport class LogDescription extends Description<LogDescription> {\n    readonly eventFragment: EventFragment;\n    readonly name: string;\n    readonly signature: string;\n    readonly topic: string;\n    readonly args: Result\n}\n\nexport class TransactionDescription extends Description<TransactionDescription> {\n    readonly functionFragment: FunctionFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n    readonly value: BigNumber;\n}\n\nexport class ErrorDescription extends Description<ErrorDescription> {\n    readonly errorFragment: ErrorFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n}\n\nexport class Indexed extends Description<Indexed> {\n    readonly hash: string;\n    readonly _isIndexed: boolean;\n\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n}\n\nconst BuiltinErrors: Record<string, { signature: string, inputs: Array<string>, name: string, reason?: boolean }> = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [ \"string\" ], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [ \"uint256\" ] }\n}\n\nfunction wrapAccessError(property: string, error: Error): Error {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${ property }`);\n    (<any>wrap).error = error;\n    return wrap;\n}\n\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    readonly fragments: ReadonlyArray<Fragment>;\n\n    readonly errors: { [ name: string ]: ErrorFragment };\n    readonly events: { [ name: string ]: EventFragment };\n    readonly functions: { [ name: string ]: FunctionFragment };\n    readonly structs: { [ name: string ]: any };\n\n    readonly deploy: ConstructorFragment;\n\n    readonly _abiCoder: AbiCoder;\n\n    readonly _isInterface: boolean;\n\n    constructor(fragments: string | ReadonlyArray<Fragment | JsonFragment | string>) {\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [ ];\n        if (typeof(fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n\n        defineReadOnly(this, \"_abiCoder\", getStatic<() => AbiCoder>(new.target, \"getAbiCoder\")());\n\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"errors\", { });\n        defineReadOnly(this, \"events\", { });\n        defineReadOnly(this, \"structs\", { });\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket: { [ name: string ]: Fragment } = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", <ConstructorFragment>fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n\n            bucket[signature] = fragment;\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n\n    format(format?: string): string | Array<string> {\n        if (!format) { format = FormatTypes.full; }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n             return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n\n        return abi;\n    }\n\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder(): AbiCoder {\n        return defaultAbiCoder;\n    }\n\n    static getAddress(address: string): string {\n        return getAddress(address);\n    }\n\n    static getSighash(fragment: ErrorFragment | FunctionFragment): string {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n\n    static getEventTopic(eventFragment: EventFragment): string {\n        return id(eventFragment.format());\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash: string): FunctionFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n\n            return this.functions[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic: string): EventFragment {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n\n            return this.events[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash: string): ErrorFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n\n            return this.errors[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment: ErrorFragment | FunctionFragment | string): string {\n        if (typeof(fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            } catch (error) {\n                try {\n                    fragment = this.getError(<string>fragment);\n                } catch (_) {\n                    throw error;\n                }\n            }\n        }\n\n        return getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\")(fragment);\n    }\n\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment: EventFragment | string): string {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        return getStatic<(e: EventFragment) => string>(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n\n\n    _decodeParams(params: ReadonlyArray<ParamType>, data: BytesLike): Result {\n        return this._abiCoder.decode(params, data)\n    }\n\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this._abiCoder.encode(params, values)\n    }\n\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || [ ]);\n    }\n\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${ fragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${ functionFragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        let bytes = arrayify(data);\n\n        let reason: string = null;\n        let message = \"\";\n        let errorArgs: Result = null;\n        let errorName: string = null;\n        let errorSignature: string = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                } catch (error) { }\n                break;\n\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) { reason = errorArgs[0]; }\n                    if (errorName === \"Error\") {\n                        message = `; VM Exception while processing transaction: reverted with reason string ${ JSON.stringify(errorArgs[0]) }`;\n                    } else if (errorName === \"Panic\") {\n                        message = `; VM Exception while processing transaction: reverted with panic code ${ errorArgs[0] }`;\n                    }\n                } else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    } catch (error) { }\n                }\n                break;\n            }\n        }\n\n        return logger.throwError(\"call revert exception\" + message, Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            data: hexlify(data), errorArgs, errorName, errorSignature, reason\n        });\n    }\n\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || [ ]));\n    }\n\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment: EventFragment | string, values: ReadonlyArray<any>): Array<string | Array<string>> {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            })\n        }\n\n        let topics: Array<string | Array<string>> = [];\n        if (!eventFragment.anonymous) { topics.push(this.getEventTopic(eventFragment)); }\n\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === \"string\") {\n                 return id(value);\n            } else if (param.type === \"bytes\") {\n                 return keccak256(hexlify(value));\n            }\n\n            if (param.type === \"bool\" && typeof(value) === \"boolean\") {\n                value = (value ? \"0x01\": \"0x00\");\n            }\n\n            if (param.type.match(/^u?int/)) {\n                value = BigNumber.from(value).toHexString();\n            }\n\n            // Check addresses are valid\n            if (param.type === \"address\") { this._abiCoder.encode( [ \"address\" ], [ value ]); }\n            return hexZeroPad(hexlify(value), 32);\n        };\n\n        values.forEach((value, index) => {\n\n            let param = (<EventFragment>eventFragment).inputs[index];\n\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(eventFragment: EventFragment | string, values: ReadonlyArray<any>): { data: string, topics: Array<string> } {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        const topics: Array<string> = [ ];\n\n        const dataTypes: Array<ParamType> = [ ];\n        const dataValues: Array<string> = [ ];\n\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value))\n                } else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value))\n                } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                } else {\n                    topics.push(this._abiCoder.encode([ param.type] , [ value ]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this._abiCoder.encode(dataTypes , dataValues),\n            topics: topics\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n\n        let indexed: Array<ParamType> = [];\n        let nonIndexed: Array<ParamType> = [];\n        let dynamic: Array<boolean> = [];\n\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)): null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n\n        let result: (Array<any> & { [ key: string ]: any }) = [ ];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n\n                } else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n\n                } else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    } catch (error) {\n                        result[index] = error;\n                    }\n                }\n            } else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                } catch (error) {\n                    result[index] = error;\n                }\n            }\n\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${ JSON.stringify(param.name) }`, value); }\n                    });\n                } else {\n                    result[param.name] = value;\n                }\n            }\n        });\n\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${ i }`, value); }\n                });\n            }\n        }\n\n        return Object.freeze(result);\n    }\n\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx: { data: string, value?: BigNumberish }): TransactionDescription {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log: { topics: Array<string>, data: string}): LogDescription {\n        let fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) { return null; }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n\n       return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n\n    parseError(data: BytesLike): ErrorDescription {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n\n\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n\n    static isInterface(value: any): value is Interface {\n        return !!(value && value._isInterface);\n    }\n}\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n","export const version = \"address/5.7.0\";\n","export const version = \"bignumber/5.7.0\";\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","export const version = \"bytes/5.7.0\";\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nconst NegativeOne: BigNumber = (/*#__PURE__*/BigNumber.from(-1));\nconst Zero: BigNumber = (/*#__PURE__*/BigNumber.from(0));\nconst One: BigNumber = (/*#__PURE__*/BigNumber.from(1));\nconst Two: BigNumber = (/*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther: BigNumber = (/*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nconst MinInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256,\n};\n","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n\n\n    ///////////////////\n    // Interaction Errors\n\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ACTION_REJECTED = \"ACTION_REJECTED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","export const version = \"logger/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function defineReadOnly<T, K extends keyof T>(object: T, name: K, value: T[K]): void {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) { return ctor[key]; }\n        if (!ctor.prototype || typeof(ctor.prototype) !== \"object\") { break; }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\nexport type Deferrable<T> = {\n    [ K in keyof T ]: T[K] | Promise<T[K]>;\n}\n\n\ntype Result = { key: string, value: any};\n\nexport async function resolveProperties<T>(object: Readonly<Deferrable<T>>): Promise<T> {\n    const promises: Array<Promise<Result>> = Object.keys(object).map((key) => {\n        const value = object[<keyof Deferrable<T>>key];\n        return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n    });\n\n    const results = await Promise.all(promises);\n\n    return results.reduce((accum, result) => {\n        accum[<keyof T>(result.key)] = result.value;\n        return accum;\n    }, <T>{ });\n}\n\nexport function checkProperties(object: any, properties: { [ name: string ]: boolean }): void {\n    if (!object || typeof(object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\n\nexport function shallowCopy<T>(object: T): T {\n    const result: any = {};\n    for (const key in object) { result[key] = object[key]; }\n    return result;\n}\n\nconst opaque: { [key: string]: boolean } = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n\nfunction _isFrozen(object: any): boolean {\n\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof(object)]) { return true; }\n\n    if (Array.isArray(object) || typeof(object) === \"object\") {\n        if (!Object.isFrozen(object)) { return false; }\n\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value: any = null;\n            try {\n                value = object[keys[i]];\n            } catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n\n            if (!_isFrozen(value)) { return false; }\n        }\n\n        return true;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object: any): any {\n\n    if (_isFrozen(object)) { return object; }\n\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n\n    if (typeof(object) === \"object\") {\n        const result: { [ key: string ]: any } = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) { continue; }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n\n        return result;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\nexport function deepCopy<T>(object: T): T {\n    return _deepCopy(object);\n}\n\nexport class Description<T = any> {\n    constructor(info: { [ K in keyof T ]: T[K] }) {\n        for (const key in info) {\n            (<any>this)[key] = deepCopy(info[key]);\n        }\n    }\n}\n","export const version = \"properties/5.7.0\";\n","\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { arrayify, BytesLike, hexlify, isBytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(arrayify(object));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nexport function encode(object: any): string {\n    return hexlify(_encode(object));\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n    }\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\n\nexport function decode(data: BytesLike): any {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n\n","export const version = \"rlp/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","export const version = \"strings/5.7.0\";\n"],"names":["version","AddressCoder","localName","writer","value","getAddress","error","this","_throwError","message","writeValue","reader","hexZeroPad","readValue","toHexString","Coder","AnonymousCoder","coder","name","type","undefined","dynamic","defaultValue","encode","decode","logger","Logger","pack","coders","values","arrayValues","Array","isArray","unique","map","throwError","argument","throwArgumentError","length","staticWriter","Writer","wordSize","dynamicWriter","updateFuncs","forEach","index","dynamicOffset","updateFunc","writeUpdatableValue","push","baseOffset","func","appendWriter","unpack","baseReader","subReader","offset","offsetReader","toNumber","code","baseType","uniqueNames","reduce","accum","Error","Object","defineProperty","enumerable","get","i","freeze","ArrayCoder","defaultChild","result","count","checkArgumentCount","_data","coerce","BooleanCoder","isZero","DynamicBytesCoder","arrayify","writeBytes","readBytes","BytesCoder","hexlify","FixedBytesCoder","size","String","substring","data","NullCoder","NumberCoder","signed","v","BigNumber","maxUintValue","MaxUint256","bounds","mask","gt","lt","add","One","mul","NegativeOne","Zero","toTwos","fromTwos","StringCoder","toUtf8Bytes","toUtf8String","TupleCoder","types","join","paramTypeBytes","RegExp","paramTypeNumber","AbiCoder","coerceFunc","defineReadOnly","param","_getCoder","arrayChildren","arrayLength","components","component","match","parseInt","allowLoose","Reader","_getWordSize","ParamType","_getWriter","loose","_getReader","defaultAbiCoder","checkResultErrors","errors","checkErrors","path","object","key","childPath","slice","_dataLength","_padding","Uint8Array","hexConcat","_writeData","concat","bytes","paddingOffset","_getValue","_offset","_coerceFunc","alignedLength","Math","ceil","_peekBytes","_constructorGuard","ModifiersBytes","calldata","memory","storage","ModifiersNest","checkModifier","indexOf","populate","params","FormatTypes","sighash","minimal","full","json","paramTypeArray","constructorGuard","operation","fromObject","_isParamType","format","indexed","comp","JSON","parse","stringify","allowIndexed","fromString","isParamType","verifyType","node","originalParam","newNode","parent","state","allowType","replace","c","allowParams","child","allowName","allowArray","sibling","readArray","parseParamType","parseParams","allowIndex","trim","depth","splitNesting","Fragment","_isFragment","isFragment","FunctionFragment","EventFragment","ConstructorFragment","ErrorFragment","split","anonymous","inputs","input","isEventFragment","verifyIdentifier","regexParen","modifier","warn","parseGas","gas","comps","parseModifiers","constant","payable","stateMutability","console","log","verifyState","isConstructorFragment","parens","outputs","output","toString","isFunctionFragment","returns","checkForbidden","fragment","sig","isErrorFragment","regexIdentifier","LogDescription","Description","TransactionDescription","ErrorDescription","Indexed","_isIndexed","BuiltinErrors","signature","reason","wrapAccessError","property","wrap","Interface","fragments","abi","filter","getStatic","bucket","deploy","functions","events","j","nameOrSignatureOrSighash","isHexString","getSighash","matching","keys","f","nameOrSignatureOrTopic","topichash","toLowerCase","getEventTopic","constructor","getFunction","getError","_","eventFragment","getEvent","_abiCoder","_encodeParams","_decodeParams","functionFragment","errorArgs","errorName","errorSignature","selector","builtin","method","topics","encodeTopic","id","keccak256","pop","dataTypes","dataValues","topicHash","expected","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","hash","tx","args","topic","decodeEventLog","hexData","errorFragment","address","hexDataSlice","_isInterface","getChecksumAddress","chars","expanded","charCodeAt","hashed","toUpperCase","ibanLookup","fromCharCode","x","safeDigits","floor","log10","LN10","ibanChecksum","block","checksum","_base36To16","isAddress","getIcapAddress","base36","_base16To36","getContractAddress","transaction","from","nonce","stripZeros","getCreate2Address","salt","initCodeHash","hexDataLength","BN","_BN","MAX_SAFE","isBigNumberish","isBigNumber","isBytes","_warnedToStringRadix","hex","_hex","_isBigNumber","toBigNumber","toBN","other","sub","throwFault","div","isNeg","umod","pow","isNegative","and","or","xor","maskn","shln","shrn","eq","lte","gte","BigInt","e","arguments","toHex","anyValue","fault","module","exports","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","prototype","number","base","endian","isBN","negative","words","red","_init","Buffer","window","require","parseHex4Bits","string","parseHexByte","lowerBound","r","parseBase","str","start","end","b","len","min","move","dest","src","num","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","copy","_move","clone","_expand","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","modrn","idivn","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","width","abs","inotn","iaddn","testn","notn","ineg","neg","iuor","ior","uor","iuand","iand","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","maskedWords","ishrn","ushln","ushrn","imaskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","divmod","positive","divn","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lten","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","isHexable","addSlice","array","apply","isBytesLike","isInteger","options","checkSafeUint53","unshift","allowMissingPrefix","hexPad","items","objects","item","set","zeroPad","HexCharacters","endOffset","hexValue","trimmed","hexStripZeros","splitSignature","_vs","recoveryParam","yParityAndS","compact","vs","recId","joinSignature","Two","WeiPerEther","MinInt256","MaxInt256","text","sha3","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","form","normalize","_checkNormalize","HEX","writable","logLevel","level","_log","levels","DEBUG","INFO","WARNING","makeError","UNKNOWN_ERROR","messageDetails","url","NUMERIC_FAULT","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","INVALID_ARGUMENT","condition","UNSUPPORTED_OPERATION","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","target","kind","censorship","permanent","globalLogger","getPrototypeOf","resolveProperties","promises","Promise","resolve","then","all","results","checkProperties","properties","shallowCopy","opaque","bigint","boolean","_isFrozen","isFrozen","_deepCopy","deepCopy","arrayifyInteger","unarrayifyInteger","_encode","payload","_decodeChildren","childOffset","decoded","_decode","consumed","lengthLength","UnicodeNormalizationForm","Utf8ErrorReason","ignoreFunc","badCodepoint","BAD_PREFIX","UNEXPECTED_CONTINUE","OVERRUN","Utf8ErrorFuncs","ignore","OVERLONG","getUtf8CodePoints","onError","extraLength","overlongMask","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","checkNormalize","c2","pair","escapeChar","_toEscapedUtf8String","codePoint","_toUtf8String","codePoints","toUtf8CodePoints"],"sourceRoot":""}