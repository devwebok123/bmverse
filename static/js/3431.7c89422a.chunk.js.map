{"version":3,"file":"static/js/3431.7c89422a.chunk.js","mappings":"sGAEA,SAAUA,GAEN,SAASC,EAASC,GACd,OAAQC,SAASD,KAAWA,CAChC,CAEA,SAASE,EAAUC,GACf,IAAKJ,EAASI,EAASC,QAAW,OAAO,EAEzC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASC,OAAQC,IACjC,IAAKN,EAASI,EAASE,KAAOF,EAASE,GAAK,GAAKF,EAASE,GAAK,IAC3D,OAAO,EAIf,OAAO,CACX,CAEA,SAASC,EAAYC,EAAKC,GAGtB,GAAID,EAAIE,QAAUC,YAAYC,OAAOJ,IAAqB,eAAbA,EAAIK,KAU7C,OARIJ,IAEID,EADAA,EAAIM,MACEN,EAAIM,QAEJC,MAAMC,UAAUF,MAAMG,KAAKT,IAIlCA,EAIX,GAAIO,MAAMG,QAAQV,GAAM,CACpB,IAAKL,EAAUK,GACX,MAAM,IAAIW,MAAM,iCAAmCX,GAGvD,OAAO,IAAIY,WAAWZ,EAC1B,CAGA,GAAIR,EAASQ,EAAIH,SAAWF,EAAUK,GAClC,OAAO,IAAIY,WAAWZ,GAG1B,MAAM,IAAIW,MAAM,gCACpB,CAEA,SAASE,EAAYhB,GACjB,OAAO,IAAIe,WAAWf,EAC1B,CAEA,SAASiB,EAAUC,EAAaC,EAAaC,EAAaC,EAAaC,GAChD,MAAfD,GAAoC,MAAbC,IAEnBJ,EADAA,EAAYT,MACES,EAAYT,MAAMY,EAAaC,GAE/BZ,MAAMC,UAAUF,MAAMG,KAAKM,EAAaG,EAAaC,IAG3EH,EAAYI,IAAIL,EAAaE,EACjC,CAIA,IAAII,EA0CO,CACHC,QA1CJ,SAAiBC,GACb,IAAIC,EAAS,GAAI1B,EAAI,EAErB,IADAyB,EAAOE,UAAUF,GACVzB,EAAIyB,EAAK1B,QAAQ,CACpB,IAAI6B,EAAIH,EAAKI,WAAW7B,KAGd,KAAN4B,GACAF,EAAOI,KAAKlC,SAAS6B,EAAKM,OAAO/B,EAAG,GAAI,KACxCA,GAAK,GAIL0B,EAAOI,KAAKF,EAEpB,CAEA,OAAO3B,EAAYyB,EACvB,EAyBIM,UAvBJ,SAAmBC,GAGf,IAFA,IAAIP,EAAS,GAAI1B,EAAI,EAEdA,EAAIiC,EAAMlC,QAAQ,CACrB,IAAI6B,EAAIK,EAAMjC,GAEV4B,EAAI,KACJF,EAAOI,KAAKI,OAAOC,aAAaP,IAChC5B,KACO4B,EAAI,KAAOA,EAAI,KACtBF,EAAOI,KAAKI,OAAOC,cAAmB,GAAJP,IAAa,EAAqB,GAAfK,EAAMjC,EAAI,KAC/DA,GAAK,IAEL0B,EAAOI,KAAKI,OAAOC,cAAmB,GAAJP,IAAa,IAAuB,GAAfK,EAAMjC,EAAI,KAAc,EAAqB,GAAfiC,EAAMjC,EAAI,KAC/FA,GAAK,EAEb,CAEA,OAAO0B,EAAOU,KAAK,GACvB,GAQAC,EAAc,WAWd,IAAIC,EAAM,mBAWV,MAAO,CACHd,QAtBJ,SAAiBC,GAEb,IADA,IAAIC,EAAS,GACJ1B,EAAI,EAAGA,EAAIyB,EAAK1B,OAAQC,GAAK,EAClC0B,EAAOI,KAAKlC,SAAS6B,EAAKM,OAAO/B,EAAG,GAAI,KAG5C,OAAO0B,CACX,EAgBIM,UAXJ,SAAmBC,GAEX,IADA,IAAIP,EAAS,GACJ1B,EAAI,EAAGA,EAAIiC,EAAMlC,OAAQC,IAAK,CACnC,IAAIuC,EAAIN,EAAMjC,GACd0B,EAAOI,KAAKQ,GAAS,IAAJC,IAAa,GAAKD,EAAQ,GAAJC,GAC3C,CACA,OAAOb,EAAOU,KAAK,GAC3B,EAMJ,CA1BkB,GA8BdI,EAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGtCC,EAAO,CAAC,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAGtevB,GAEpB,IADA,IAAIP,EAAS,GACJ1B,EAAI,EAAGA,EAAIiC,EAAMlC,OAAQC,GAAK,EACnC0B,EAAOI,KACFG,EAAMjC,IAAU,GAChBiC,EAAMjC,EAAI,IAAM,GAChBiC,EAAMjC,EAAI,IAAO,EACjBiC,EAAMjC,EAAI,IAGnB,OAAO0B,CACX,CAEA,IAAI+B,EAAM,SAANA,EAAeC,GACf,KAAMC,gBAAgBF,GAClB,MAAM5C,MAAM,uCAGhB+C,OAAOC,eAAeF,KAAM,MAAO,CAC/BhE,MAAOM,EAAYyD,GAAK,KAG5BC,KAAKG,UACT,EAGAL,EAAI/C,UAAUoD,SAAW,WAErB,IAAIC,EAASvB,EAAemB,KAAKD,IAAI3D,QACrC,GAAc,MAAVgE,EACA,MAAM,IAAIlD,MAAM,iDAIpB8C,KAAKK,IAAM,GAGXL,KAAKM,IAAM,GAEX,IAAK,IAAIjE,EAAI,EAAGA,GAAK+D,EAAQ/D,IACzB2D,KAAKK,IAAIlC,KAAK,CAAC,EAAG,EAAG,EAAG,IACxB6B,KAAKM,IAAInC,KAAK,CAAC,EAAG,EAAG,EAAG,IAG5B,IAOIoC,EAPAC,EAA+B,GAAdJ,EAAS,GAC1BK,EAAKT,KAAKD,IAAI3D,OAAS,EAGvBsE,EAAKb,EAAeG,KAAKD,KAI7B,IAAS1D,EAAI,EAAGA,EAAIoE,EAAIpE,IACpBkE,EAAQlE,GAAK,EACb2D,KAAKK,IAAIE,GAAOlE,EAAI,GAAKqE,EAAGrE,GAC5B2D,KAAKM,IAAIF,EAASG,GAAOlE,EAAI,GAAKqE,EAAGrE,GAMzC,IAFA,IACYsE,EADRC,EAAc,EACdC,EAAIJ,EACDI,EAAIL,GAAe,CAUtB,GATAG,EAAKD,EAAGD,EAAK,GACbC,EAAG,IAAQ3B,EAAG4B,GAAM,GAAM,MAAS,GACxB5B,EAAG4B,GAAO,EAAK,MAAS,GACxB5B,EAAe,IAAZ4B,IAAsB,EACzB5B,EAAG4B,GAAM,GAAM,KACf7B,EAAK8B,IAAgB,GAChCA,GAAe,EAGL,GAANH,EACA,IAASpE,EAAI,EAAGA,EAAIoE,EAAIpE,IACpBqE,EAAGrE,IAAMqE,EAAGrE,EAAI,OAIjB,CACH,IAASA,EAAI,EAAGA,EAAKoE,EAAK,EAAIpE,IAC1BqE,EAAGrE,IAAMqE,EAAGrE,EAAI,GAEpBsE,EAAKD,EAAID,EAAK,EAAK,GAEnBC,EAAGD,EAAK,IAAO1B,EAAe,IAAZ4B,GACH5B,EAAG4B,GAAO,EAAK,MAAU,EACzB5B,EAAG4B,GAAM,GAAM,MAAS,GACxB5B,EAAG4B,GAAM,GAAM,MAAS,GAEvC,IAAStE,EAAKoE,EAAK,EAAK,EAAGpE,EAAIoE,EAAIpE,IAC/BqE,EAAGrE,IAAMqE,EAAGrE,EAAI,EAExB,CAIA,IADIA,EAAI,EACDA,EAAIoE,GAAMI,EAAIL,GACjBM,EAAID,GAAK,EACT5C,EAAI4C,EAAI,EACRb,KAAKK,IAAIS,GAAG7C,GAAKyC,EAAGrE,GACpB2D,KAAKM,IAAIF,EAASU,GAAG7C,GAAKyC,EAAGrE,KAC7BwE,GAER,CAGA,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAQU,IACxB,IAAK,IAAI7C,EAAI,EAAGA,EAAI,EAAGA,IACnB0C,EAAKX,KAAKM,IAAIQ,GAAG7C,GACjB+B,KAAKM,IAAIQ,GAAG7C,GAAMwB,EAAIkB,GAAM,GAAM,KAChBjB,EAAIiB,GAAM,GAAM,KAChBhB,EAAIgB,GAAO,EAAK,KAChBf,EAAgB,IAAZe,EAGlC,EAEAb,EAAI/C,UAAUgE,QAAU,SAASC,GAC7B,GAAwB,IAApBA,EAAU5E,OACV,MAAM,IAAIc,MAAM,6CAQpB,IALA,IAAIkD,EAASJ,KAAKK,IAAIjE,OAAS,EAC3B6E,EAAI,CAAC,EAAG,EAAG,EAAG,GAGdJ,EAAIhB,EAAemB,GACd3E,EAAI,EAAGA,EAAI,EAAGA,IACnBwE,EAAExE,IAAM2D,KAAKK,IAAI,GAAGhE,GAIxB,IAAK,IAAIyE,EAAI,EAAGA,EAAIV,EAAQU,IAAK,CAC7B,IAASzE,EAAI,EAAGA,EAAI,EAAGA,IACnB4E,EAAE5E,GAAM4C,EAAI4B,EAAGxE,IAAe,GAAM,KAC5B6C,EAAI2B,GAAGxE,EAAI,GAAK,IAAM,GAAM,KAC5B8C,EAAI0B,GAAGxE,EAAI,GAAK,IAAO,EAAK,KAC5B+C,EAA4B,IAAxByB,GAAGxE,EAAI,GAAK,IAChB2D,KAAKK,IAAIS,GAAGzE,GAExBwE,EAAII,EAAEpE,OACV,CAGA,IAA8B8D,EAA1B5C,EAASX,EAAY,IACzB,IAASf,EAAI,EAAGA,EAAI,EAAGA,IACnBsE,EAAKX,KAAKK,IAAID,GAAQ/D,GACtB0B,EAAO,EAAI1B,GAA2D,KAAjD0C,EAAG8B,EAAGxE,IAAe,GAAM,KAASsE,GAAM,IAC/D5C,EAAO,EAAI1B,EAAI,GAAuD,KAAjD0C,EAAG8B,GAAGxE,EAAI,GAAK,IAAM,GAAM,KAASsE,GAAM,IAC/D5C,EAAO,EAAI1B,EAAI,GAAuD,KAAjD0C,EAAG8B,GAAGxE,EAAI,GAAK,IAAO,EAAK,KAASsE,GAAO,GAChE5C,EAAO,EAAI1B,EAAI,GAAuD,KAAjD0C,EAA2B,IAAxB8B,GAAGxE,EAAI,GAAK,IAAqBsE,GAG7D,OAAO5C,CACX,EAEA+B,EAAI/C,UAAUmE,QAAU,SAASC,GAC7B,GAAyB,IAArBA,EAAW/E,OACX,MAAM,IAAIc,MAAM,8CAQpB,IALA,IAAIkD,EAASJ,KAAKM,IAAIlE,OAAS,EAC3B6E,EAAI,CAAC,EAAG,EAAG,EAAG,GAGdJ,EAAIhB,EAAesB,GACd9E,EAAI,EAAGA,EAAI,EAAGA,IACnBwE,EAAExE,IAAM2D,KAAKM,IAAI,GAAGjE,GAIxB,IAAK,IAAIyE,EAAI,EAAGA,EAAIV,EAAQU,IAAK,CAC7B,IAASzE,EAAI,EAAGA,EAAI,EAAGA,IACnB4E,EAAE5E,GAAMgD,EAAIwB,EAAGxE,IAAgB,GAAM,KAC7BiD,EAAIuB,GAAGxE,EAAI,GAAK,IAAM,GAAM,KAC5BkD,EAAIsB,GAAGxE,EAAI,GAAK,IAAO,EAAK,KAC5BmD,EAA4B,IAAxBqB,GAAGxE,EAAI,GAAK,IAChB2D,KAAKM,IAAIQ,GAAGzE,GAExBwE,EAAII,EAAEpE,OACV,CAGA,IAA8B8D,EAA1B5C,EAASX,EAAY,IACzB,IAASf,EAAI,EAAGA,EAAI,EAAGA,IACnBsE,EAAKX,KAAKM,IAAIF,GAAQ/D,GACtB0B,EAAO,EAAI1B,GAA4D,KAAlD2C,EAAI6B,EAAGxE,IAAe,GAAM,KAASsE,GAAM,IAChE5C,EAAO,EAAI1B,EAAI,GAAwD,KAAlD2C,EAAI6B,GAAGxE,EAAI,GAAK,IAAM,GAAM,KAASsE,GAAM,IAChE5C,EAAO,EAAI1B,EAAI,GAAwD,KAAlD2C,EAAI6B,GAAGxE,EAAI,GAAK,IAAO,EAAK,KAASsE,GAAO,GACjE5C,EAAO,EAAI1B,EAAI,GAAwD,KAAlD2C,EAA4B,IAAxB6B,GAAGxE,EAAI,GAAK,IAAqBsE,GAG9D,OAAO5C,CACX,EAMA,IAAIqD,EAAqB,SAArBA,EAA8BrB,GAC9B,KAAMC,gBAAgBoB,GAClB,MAAMlE,MAAM,uCAGhB8C,KAAKqB,YAAc,wBACnBrB,KAAKpD,KAAO,MAEZoD,KAAKsB,KAAO,IAAIxB,EAAIC,EACxB,EAEAqB,EAAmBrE,UAAUgE,QAAU,SAASC,GAG5C,IAFAA,EAAY1E,EAAY0E,IAET5E,OAAS,KAAQ,EAC5B,MAAM,IAAIc,MAAM,yDAMpB,IAHA,IAAIiE,EAAa/D,EAAY4D,EAAU5E,QACnCmF,EAAQnE,EAAY,IAEff,EAAI,EAAGA,EAAI2E,EAAU5E,OAAQC,GAAK,GACvCgB,EAAU2D,EAAWO,EAAO,EAAGlF,EAAGA,EAAI,IAEtCgB,EADAkE,EAAQvB,KAAKsB,KAAKP,QAAQQ,GACTJ,EAAY9E,GAGjC,OAAO8E,CACX,EAEAC,EAAmBrE,UAAUmE,QAAU,SAASC,GAG5C,IAFAA,EAAa7E,EAAY6E,IAET/E,OAAS,KAAQ,EAC7B,MAAM,IAAIc,MAAM,0DAMpB,IAHA,IAAI8D,EAAY5D,EAAY+D,EAAW/E,QACnCmF,EAAQnE,EAAY,IAEff,EAAI,EAAGA,EAAI8E,EAAW/E,OAAQC,GAAK,GACxCgB,EAAU8D,EAAYI,EAAO,EAAGlF,EAAGA,EAAI,IAEvCgB,EADAkE,EAAQvB,KAAKsB,KAAKJ,QAAQK,GACTP,EAAW3E,GAGhC,OAAO2E,CACX,EAMA,IAAIQ,EAAqB,SAArBA,EAA8BzB,EAAK0B,GACnC,KAAMzB,gBAAgBwB,GAClB,MAAMtE,MAAM,uCAMhB,GAHA8C,KAAKqB,YAAc,wBACnBrB,KAAKpD,KAAO,MAEP6E,GAGE,GAAiB,IAAbA,EAAGrF,OACV,MAAM,IAAIc,MAAM,4DAHhBuE,EAAKrE,EAAY,IAMrB4C,KAAK0B,iBAAmBpF,EAAYmF,GAAI,GAExCzB,KAAKsB,KAAO,IAAIxB,EAAIC,EACxB,EAEAyB,EAAmBzE,UAAUgE,QAAU,SAASC,GAG5C,IAFAA,EAAY1E,EAAY0E,IAET5E,OAAS,KAAQ,EAC5B,MAAM,IAAIc,MAAM,yDAMpB,IAHA,IAAIiE,EAAa/D,EAAY4D,EAAU5E,QACnCmF,EAAQnE,EAAY,IAEff,EAAI,EAAGA,EAAI2E,EAAU5E,OAAQC,GAAK,GAAI,CAC3CgB,EAAU2D,EAAWO,EAAO,EAAGlF,EAAGA,EAAI,IAEtC,IAAK,IAAIsF,EAAI,EAAGA,EAAI,GAAIA,IACpBJ,EAAMI,IAAM3B,KAAK0B,iBAAiBC,GAGtC3B,KAAK0B,iBAAmB1B,KAAKsB,KAAKP,QAAQQ,GAC1ClE,EAAU2C,KAAK0B,iBAAkBP,EAAY9E,EACjD,CAEA,OAAO8E,CACX,EAEAK,EAAmBzE,UAAUmE,QAAU,SAASC,GAG5C,IAFAA,EAAa7E,EAAY6E,IAET/E,OAAS,KAAQ,EAC7B,MAAM,IAAIc,MAAM,0DAMpB,IAHA,IAAI8D,EAAY5D,EAAY+D,EAAW/E,QACnCmF,EAAQnE,EAAY,IAEff,EAAI,EAAGA,EAAI8E,EAAW/E,OAAQC,GAAK,GAAI,CAC5CgB,EAAU8D,EAAYI,EAAO,EAAGlF,EAAGA,EAAI,IACvCkF,EAAQvB,KAAKsB,KAAKJ,QAAQK,GAE1B,IAAK,IAAII,EAAI,EAAGA,EAAI,GAAIA,IACpBX,EAAU3E,EAAIsF,GAAKJ,EAAMI,GAAK3B,KAAK0B,iBAAiBC,GAGxDtE,EAAU8D,EAAYnB,KAAK0B,iBAAkB,EAAGrF,EAAGA,EAAI,GAC3D,CAEA,OAAO2E,CACX,EAMA,IAAIY,EAAqB,SAArBA,EAA8B7B,EAAK0B,EAAII,GACvC,KAAM7B,gBAAgB4B,GAClB,MAAM1E,MAAM,uCAMhB,GAHA8C,KAAKqB,YAAc,kBACnBrB,KAAKpD,KAAO,MAEP6E,GAGE,GAAiB,IAAbA,EAAGrF,OACV,MAAM,IAAIc,MAAM,2DAHhBuE,EAAKrE,EAAY,IAMhByE,IAAeA,EAAc,GAElC7B,KAAK6B,YAAcA,EAEnB7B,KAAK8B,eAAiBxF,EAAYmF,GAAI,GAEtCzB,KAAKsB,KAAO,IAAIxB,EAAIC,EACxB,EAEA6B,EAAmB7E,UAAUgE,QAAU,SAASC,GAC5C,GAAKA,EAAU5E,OAAS4D,KAAK6B,aAAgB,EACzC,MAAM,IAAI3E,MAAM,sDAMpB,IAHA,IAEI6E,EAFAC,EAAY1F,EAAY0E,GAAW,GAG9B3E,EAAI,EAAGA,EAAI2F,EAAU5F,OAAQC,GAAK2D,KAAK6B,YAAa,CACzDE,EAAa/B,KAAKsB,KAAKP,QAAQf,KAAK8B,gBACpC,IAAK,IAAIH,EAAI,EAAGA,EAAI3B,KAAK6B,YAAaF,IAClCK,EAAU3F,EAAIsF,IAAMI,EAAWJ,GAInCtE,EAAU2C,KAAK8B,eAAgB9B,KAAK8B,eAAgB,EAAG9B,KAAK6B,aAC5DxE,EAAU2E,EAAWhC,KAAK8B,eAAgB,GAAK9B,KAAK6B,YAAaxF,EAAGA,EAAI2D,KAAK6B,YACjF,CAEA,OAAOG,CACX,EAEAJ,EAAmB7E,UAAUmE,QAAU,SAASC,GAC5C,GAAKA,EAAW/E,OAAS4D,KAAK6B,aAAgB,EAC1C,MAAM,IAAI3E,MAAM,uDAMpB,IAHA,IAEI6E,EAFAf,EAAY1E,EAAY6E,GAAY,GAG/B9E,EAAI,EAAGA,EAAI2E,EAAU5E,OAAQC,GAAK2D,KAAK6B,YAAa,CACzDE,EAAa/B,KAAKsB,KAAKP,QAAQf,KAAK8B,gBAEpC,IAAK,IAAIH,EAAI,EAAGA,EAAI3B,KAAK6B,YAAaF,IAClCX,EAAU3E,EAAIsF,IAAMI,EAAWJ,GAInCtE,EAAU2C,KAAK8B,eAAgB9B,KAAK8B,eAAgB,EAAG9B,KAAK6B,aAC5DxE,EAAU8D,EAAYnB,KAAK8B,eAAgB,GAAK9B,KAAK6B,YAAaxF,EAAGA,EAAI2D,KAAK6B,YAClF,CAEA,OAAOb,CACX,EAKA,IAAIiB,EAAqB,SAArBA,EAA8BlC,EAAK0B,GACnC,KAAMzB,gBAAgBiC,GAClB,MAAM/E,MAAM,uCAMhB,GAHA8C,KAAKqB,YAAc,kBACnBrB,KAAKpD,KAAO,MAEP6E,GAGE,GAAiB,IAAbA,EAAGrF,OACV,MAAM,IAAIc,MAAM,4DAHhBuE,EAAKrE,EAAY,IAMrB4C,KAAKkC,eAAiB5F,EAAYmF,GAAI,GACtCzB,KAAKmC,oBAAsB,GAE3BnC,KAAKsB,KAAO,IAAIxB,EAAIC,EACxB,EAEAkC,EAAmBlF,UAAUgE,QAAU,SAASC,GAG5C,IAFA,IAAIgB,EAAY1F,EAAY0E,GAAW,GAE9B3E,EAAI,EAAGA,EAAI2F,EAAU5F,OAAQC,IACD,KAA7B2D,KAAKmC,sBACLnC,KAAKkC,eAAiBlC,KAAKsB,KAAKP,QAAQf,KAAKkC,gBAC7ClC,KAAKmC,oBAAsB,GAE/BH,EAAU3F,IAAM2D,KAAKkC,eAAelC,KAAKmC,uBAG7C,OAAOH,CACX,EAGAC,EAAmBlF,UAAUmE,QAAUe,EAAmBlF,UAAUgE,QAMpE,IAAIqB,EAAU,SAAVA,EAAmBC,GACnB,KAAMrC,gBAAgBoC,GAClB,MAAMlF,MAAM,2CAIK,IAAjBmF,GAAuBA,IAAgBA,EAAe,GAE7B,kBAAlBA,GACPrC,KAAKsC,SAAWlF,EAAY,IAC5B4C,KAAKuC,SAASF,IAGdrC,KAAKwC,SAASH,EAEtB,EAEAD,EAAQrF,UAAUwF,SAAW,SAASvG,GAClC,GAAsB,kBAAXA,GAAuBC,SAASD,IAAUA,EACjD,MAAM,IAAIkB,MAAM,8CAGpB,IAAK,IAAIqD,EAAQ,GAAIA,GAAS,IAAKA,EAC/BP,KAAKsC,SAAS/B,GAASvE,EAAQ,IAC/BA,IAAiB,CAEzB,EAEAoG,EAAQrF,UAAUyF,SAAW,SAASlE,GAGlC,GAAoB,KAFpBA,EAAQhC,EAAYgC,GAAO,IAEjBlC,OACN,MAAM,IAAIc,MAAM,iDAGpB8C,KAAKsC,SAAWhE,CACpB,EAEA8D,EAAQrF,UAAU0F,UAAY,WAC1B,IAAK,IAAIpG,EAAI,GAAIA,GAAK,EAAGA,IAAK,CAC1B,GAAyB,MAArB2D,KAAKsC,SAASjG,GAEX,CACH2D,KAAKsC,SAASjG,KACd,KACJ,CAJI2D,KAAKsC,SAASjG,GAAK,CAK3B,CACJ,EAMA,IAAIqG,EAAqB,SAArBA,EAA8B3C,EAAK4C,GACnC,KAAM3C,gBAAgB0C,GAClB,MAAMxF,MAAM,uCAGhB8C,KAAKqB,YAAc,UACnBrB,KAAKpD,KAAO,MAEN+F,aAAmBP,IACrBO,EAAU,IAAIP,EAAQO,IAG1B3C,KAAKsC,SAAWK,EAEhB3C,KAAK4C,kBAAoB,KACzB5C,KAAK6C,uBAAyB,GAE9B7C,KAAKsB,KAAO,IAAIxB,EAAIC,EACxB,EAEA2C,EAAmB3F,UAAUgE,QAAU,SAASC,GAG5C,IAFA,IAAIgB,EAAY1F,EAAY0E,GAAW,GAE9B3E,EAAI,EAAGA,EAAI2F,EAAU5F,OAAQC,IACE,KAAhC2D,KAAK6C,yBACL7C,KAAK4C,kBAAoB5C,KAAKsB,KAAKP,QAAQf,KAAKsC,SAASA,UACzDtC,KAAK6C,uBAAyB,EAC9B7C,KAAKsC,SAASG,aAElBT,EAAU3F,IAAM2D,KAAK4C,kBAAkB5C,KAAK6C,0BAGhD,OAAOb,CACX,EAGAU,EAAmB3F,UAAUmE,QAAUwB,EAAmB3F,UAAUgE,QA0CpE,IAAI+B,EAAQ,CACRhD,IAAKA,EACLsC,QAASA,EAETW,gBAAiB,CACbC,IAAK5B,EACL6B,IAAKzB,EACL0B,IAAKtB,EACLuB,IAAKlB,EACLmB,IAAKV,GAGTW,MAAO,CACHC,IAAK5E,EACL6E,KAAM3F,GAGV4F,QAAS,CACLC,MAAO,CACHC,IAtDZ,SAAkBC,GAEd,IAAIC,EAAS,IADbD,EAAOrH,EAAYqH,GAAM,IACDvH,OAAS,GAC7B2B,EAASX,EAAYuG,EAAKvH,OAASwH,GACvCvG,EAAUsG,EAAM5F,GAChB,IAAK,IAAI1B,EAAIsH,EAAKvH,OAAQC,EAAI0B,EAAO3B,OAAQC,IACzC0B,EAAO1B,GAAKuH,EAEhB,OAAO7F,CACX,EA8CY8F,MA5CZ,SAAoBF,GAEhB,IADAA,EAAOrH,EAAYqH,GAAM,IAChBvH,OAAS,GAAM,MAAM,IAAIc,MAAM,yBAExC,IAAI0G,EAASD,EAAKA,EAAKvH,OAAS,GAChC,GAAIwH,EAAS,GAAM,MAAM,IAAI1G,MAAM,oCAGnC,IADA,IAAId,EAASuH,EAAKvH,OAASwH,EAClBvH,EAAI,EAAGA,EAAIuH,EAAQvH,IACxB,GAAIsH,EAAKvH,EAASC,KAAOuH,EACrB,MAAM,IAAI1G,MAAM,+BAIxB,IAAIa,EAASX,EAAYhB,GAEzB,OADAiB,EAAUsG,EAAM5F,EAAQ,EAAG,EAAG3B,GACvB2B,CACX,IA+BI+F,WAAY,CACRxH,YAAaA,EACbc,YAAaA,EACbC,UAAWA,IAOf0G,EAAOC,QAAUlB,CAoBxB,CA3xBD,E,sMCSMmB,EAAS,IAAIC,EAAAA,GCXI,cDajB,SAAUC,EAAUR,GACtB,MAAO,KAAQS,IAAAA,YAAiBC,QAAOC,EAAAA,EAAAA,IAASX,IAAOY,OAAO,MAClE,CAEM,SAAUC,EAAOb,GACnB,MAAO,KAAQS,IAAAA,SAAcC,QAAOC,EAAAA,EAAAA,IAASX,IAAOY,OAAO,MAC/D,CAEM,SAAUE,EAAOd,GACnB,MAAO,KAAQS,IAAAA,SAAcC,QAAOC,EAAAA,EAAAA,IAASX,IAAOY,OAAO,MAC/D,CAEM,SAAUG,EAAYC,EAA+B5E,EAAgB4D,GAQvE,OAPKiB,EAAAA,EAAmBD,IACpBV,EAAOY,WAAW,yBAA2BF,EAAWT,EAAAA,GAAAA,OAAAA,sBAAqC,CACzFY,UAAW,OACXH,UAAWA,IAIZ,KAAOP,IAAAA,KAAgBA,IAAMO,IAAYL,EAAAA,EAAAA,IAASvE,IAAMsE,QAAOC,EAAAA,EAAAA,IAASX,IAAOY,OAAO,MACjG,C,qCElCO,IAAKK,E,gCAAZ,SAAYA,GAAqBA,EAAAA,OAAAA,SAAmBA,EAAAA,OAAAA,QAAmB,CAAvE,CAAYA,IAAAA,EAAkB,I,yBCA9B,SAAWb,EAAQC,GACjB,aAGA,SAASe,EAAQC,EAAKC,GACpB,IAAKD,EAAK,MAAM,IAAI9H,MAAM+H,GAAO,mBACnC,CAIA,SAASC,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,WAAa,EAC5BA,EAASvI,UAAYqI,EAAUrI,UAC/BoI,EAAKpI,UAAY,IAAIuI,EACrBH,EAAKpI,UAAUwI,YAAcJ,CAC/B,CAIA,SAASK,EAAIC,EAAQC,EAAMC,GACzB,GAAIH,EAAGI,KAAKH,GACV,OAAOA,EAGTzF,KAAK6F,SAAW,EAChB7F,KAAK8F,MAAQ,KACb9F,KAAK5D,OAAS,EAGd4D,KAAK+F,IAAM,KAEI,OAAXN,IACW,OAATC,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,IAGT1F,KAAKgG,MAAMP,GAAU,EAAGC,GAAQ,GAAIC,GAAU,MAElD,CAUA,IAAIM,EATkB,kBAAXlC,EACTA,EAAOC,QAAUwB,EAEjBxB,EAAQwB,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAGU,SAAW,GAGd,IAEID,EADoB,qBAAXE,QAAmD,qBAAlBA,OAAOF,OACxCE,OAAOF,OAEPG,EAAAA,OAAAA,MAGb,CADE,MAAOC,GACT,CA+HA,SAASC,EAAeC,EAAQhG,GAC9B,IAAItC,EAAIsI,EAAOrI,WAAWqC,GAE1B,OAAItC,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,GAClBA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,QAEX8G,GAAO,EAAO,wBAA0BwB,EAE5C,CAEA,SAASC,EAAcD,EAAQE,EAAYlG,GACzC,IAAIO,EAAIwF,EAAcC,EAAQhG,GAI9B,OAHIA,EAAQ,GAAKkG,IACf3F,GAAKwF,EAAcC,EAAQhG,EAAQ,IAAM,GAEpCO,CACT,CA6CA,SAAS4F,EAAWC,EAAKC,EAAOC,EAAKC,GAInC,IAHA,IAAIhG,EAAI,EACJiG,EAAI,EACJC,EAAMC,KAAKC,IAAIP,EAAIvK,OAAQyK,GACtBxK,EAAIuK,EAAOvK,EAAI2K,EAAK3K,IAAK,CAChC,IAAI4B,EAAI0I,EAAIzI,WAAW7B,GAAK,GAE5ByE,GAAKgG,EAIHC,EADE9I,GAAK,GACHA,EAAI,GAAK,GAGJA,GAAK,GACVA,EAAI,GAAK,GAITA,EAEN8G,EAAO9G,GAAK,GAAK8I,EAAID,EAAK,qBAC1BhG,GAAKiG,CACP,CACA,OAAOjG,CACT,CA2DA,SAASqG,EAAMC,EAAMC,GACnBD,EAAKtB,MAAQuB,EAAIvB,MACjBsB,EAAKhL,OAASiL,EAAIjL,OAClBgL,EAAKvB,SAAWwB,EAAIxB,SACpBuB,EAAKrB,IAAMsB,EAAItB,GACjB,CAqCA,GA9TAP,EAAGI,KAAO,SAAe0B,GACvB,OAAIA,aAAe9B,GAIJ,OAAR8B,GAA+B,kBAARA,GAC5BA,EAAI/B,YAAYW,WAAaV,EAAGU,UAAYpJ,MAAMG,QAAQqK,EAAIxB,MAClE,EAEAN,EAAG+B,IAAM,SAAcC,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,CACT,EAEAjC,EAAG0B,IAAM,SAAcM,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,CACT,EAEAjC,EAAGzI,UAAUiJ,MAAQ,SAAeP,EAAQC,EAAMC,GAChD,GAAsB,kBAAXF,EACT,OAAOzF,KAAK2H,YAAYlC,EAAQC,EAAMC,GAGxC,GAAsB,kBAAXF,EACT,OAAOzF,KAAK4H,WAAWnC,EAAQC,EAAMC,GAG1B,QAATD,IACFA,EAAO,IAETX,EAAOW,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIkB,EAAQ,EACM,OAFlBnB,EAASA,EAAOoC,WAAWC,QAAQ,OAAQ,KAEhC,KACTlB,IACA5G,KAAK6F,SAAW,GAGde,EAAQnB,EAAOrJ,SACJ,KAATsJ,EACF1F,KAAK+H,UAAUtC,EAAQmB,EAAOjB,IAE9B3F,KAAKgI,WAAWvC,EAAQC,EAAMkB,GACf,OAAXjB,GACF3F,KAAK4H,WAAW5H,KAAKiI,UAAWvC,EAAMC,IAI9C,EAEAH,EAAGzI,UAAU4K,YAAc,SAAsBlC,EAAQC,EAAMC,GACzDF,EAAS,IACXzF,KAAK6F,SAAW,EAChBJ,GAAUA,GAERA,EAAS,UACXzF,KAAK8F,MAAQ,CAAU,SAATL,GACdzF,KAAK5D,OAAS,GACLqJ,EAAS,kBAClBzF,KAAK8F,MAAQ,CACF,SAATL,EACCA,EAAS,SAAa,UAEzBzF,KAAK5D,OAAS,IAEd2I,EAAOU,EAAS,kBAChBzF,KAAK8F,MAAQ,CACF,SAATL,EACCA,EAAS,SAAa,SACvB,GAEFzF,KAAK5D,OAAS,GAGD,OAAXuJ,GAGJ3F,KAAK4H,WAAW5H,KAAKiI,UAAWvC,EAAMC,EACxC,EAEAH,EAAGzI,UAAU6K,WAAa,SAAqBnC,EAAQC,EAAMC,GAG3D,GADAZ,EAAgC,kBAAlBU,EAAOrJ,QACjBqJ,EAAOrJ,QAAU,EAGnB,OAFA4D,KAAK8F,MAAQ,CAAC,GACd9F,KAAK5D,OAAS,EACP4D,KAGTA,KAAK5D,OAAS6K,KAAKiB,KAAKzC,EAAOrJ,OAAS,GACxC4D,KAAK8F,MAAQ,IAAIhJ,MAAMkD,KAAK5D,QAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAI2D,KAAK5D,OAAQC,IAC/B2D,KAAK8F,MAAMzJ,GAAK,EAGlB,IAAIsF,EAAGwG,EACHC,EAAM,EACV,GAAe,OAAXzC,EACF,IAAKtJ,EAAIoJ,EAAOrJ,OAAS,EAAGuF,EAAI,EAAGtF,GAAK,EAAGA,GAAK,EAC9C8L,EAAI1C,EAAOpJ,GAAMoJ,EAAOpJ,EAAI,IAAM,EAAMoJ,EAAOpJ,EAAI,IAAM,GACzD2D,KAAK8F,MAAMnE,IAAOwG,GAAKC,EAAO,SAC9BpI,KAAK8F,MAAMnE,EAAI,GAAMwG,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPzG,UAGC,GAAe,OAAXgE,EACT,IAAKtJ,EAAI,EAAGsF,EAAI,EAAGtF,EAAIoJ,EAAOrJ,OAAQC,GAAK,EACzC8L,EAAI1C,EAAOpJ,GAAMoJ,EAAOpJ,EAAI,IAAM,EAAMoJ,EAAOpJ,EAAI,IAAM,GACzD2D,KAAK8F,MAAMnE,IAAOwG,GAAKC,EAAO,SAC9BpI,KAAK8F,MAAMnE,EAAI,GAAMwG,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPzG,KAIN,OAAO3B,KAAKqI,QACd,EA0BA7C,EAAGzI,UAAUgL,UAAY,SAAoBtC,EAAQmB,EAAOjB,GAE1D3F,KAAK5D,OAAS6K,KAAKiB,MAAMzC,EAAOrJ,OAASwK,GAAS,GAClD5G,KAAK8F,MAAQ,IAAIhJ,MAAMkD,KAAK5D,QAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAI2D,KAAK5D,OAAQC,IAC/B2D,KAAK8F,MAAMzJ,GAAK,EAIlB,IAGI8L,EAHAC,EAAM,EACNzG,EAAI,EAGR,GAAe,OAAXgE,EACF,IAAKtJ,EAAIoJ,EAAOrJ,OAAS,EAAGC,GAAKuK,EAAOvK,GAAK,EAC3C8L,EAAI3B,EAAaf,EAAQmB,EAAOvK,IAAM+L,EACtCpI,KAAK8F,MAAMnE,IAAU,SAAJwG,EACbC,GAAO,IACTA,GAAO,GACPzG,GAAK,EACL3B,KAAK8F,MAAMnE,IAAMwG,IAAM,IAEvBC,GAAO,OAKX,IAAK/L,GADaoJ,EAAOrJ,OAASwK,GACX,IAAM,EAAIA,EAAQ,EAAIA,EAAOvK,EAAIoJ,EAAOrJ,OAAQC,GAAK,EAC1E8L,EAAI3B,EAAaf,EAAQmB,EAAOvK,IAAM+L,EACtCpI,KAAK8F,MAAMnE,IAAU,SAAJwG,EACbC,GAAO,IACTA,GAAO,GACPzG,GAAK,EACL3B,KAAK8F,MAAMnE,IAAMwG,IAAM,IAEvBC,GAAO,EAKbpI,KAAKqI,QACP,EA6BA7C,EAAGzI,UAAUiL,WAAa,SAAqBvC,EAAQC,EAAMkB,GAE3D5G,KAAK8F,MAAQ,CAAC,GACd9F,KAAK5D,OAAS,EAGd,IAAK,IAAIkM,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAW7C,EAClE4C,IAEFA,IACAC,EAAWA,EAAU7C,EAAQ,EAO7B,IALA,IAAI8C,EAAQ/C,EAAOrJ,OAASwK,EACxB6B,EAAMD,EAAQF,EACdzB,EAAMI,KAAKC,IAAIsB,EAAOA,EAAQC,GAAO7B,EAErC8B,EAAO,EACFrM,EAAIuK,EAAOvK,EAAIwK,EAAKxK,GAAKiM,EAChCI,EAAOhC,EAAUjB,EAAQpJ,EAAGA,EAAIiM,EAAS5C,GAEzC1F,KAAK2I,MAAMJ,GACPvI,KAAK8F,MAAM,GAAK4C,EAAO,SACzB1I,KAAK8F,MAAM,IAAM4C,EAEjB1I,KAAK4I,OAAOF,GAIhB,GAAY,IAARD,EAAW,CACb,IAAII,EAAM,EAGV,IAFAH,EAAOhC,EAAUjB,EAAQpJ,EAAGoJ,EAAOrJ,OAAQsJ,GAEtCrJ,EAAI,EAAGA,EAAIoM,EAAKpM,IACnBwM,GAAOnD,EAGT1F,KAAK2I,MAAME,GACP7I,KAAK8F,MAAM,GAAK4C,EAAO,SACzB1I,KAAK8F,MAAM,IAAM4C,EAEjB1I,KAAK4I,OAAOF,EAEhB,CAEA1I,KAAKqI,QACP,EAEA7C,EAAGzI,UAAUP,KAAO,SAAe4K,GACjCA,EAAKtB,MAAQ,IAAIhJ,MAAMkD,KAAK5D,QAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAI2D,KAAK5D,OAAQC,IAC/B+K,EAAKtB,MAAMzJ,GAAK2D,KAAK8F,MAAMzJ,GAE7B+K,EAAKhL,OAAS4D,KAAK5D,OACnBgL,EAAKvB,SAAW7F,KAAK6F,SACrBuB,EAAKrB,IAAM/F,KAAK+F,GAClB,EASAP,EAAGzI,UAAU+L,MAAQ,SAAgB1B,GACnCD,EAAKC,EAAMpH,KACb,EAEAwF,EAAGzI,UAAUgM,MAAQ,WACnB,IAAIjI,EAAI,IAAI0E,EAAG,MAEf,OADAxF,KAAKxD,KAAKsE,GACHA,CACT,EAEA0E,EAAGzI,UAAUiM,QAAU,SAAkBC,GACvC,KAAOjJ,KAAK5D,OAAS6M,GACnBjJ,KAAK8F,MAAM9F,KAAK5D,UAAY,EAE9B,OAAO4D,IACT,EAGAwF,EAAGzI,UAAUsL,OAAS,WACpB,KAAOrI,KAAK5D,OAAS,GAAqC,IAAhC4D,KAAK8F,MAAM9F,KAAK5D,OAAS,IACjD4D,KAAK5D,SAEP,OAAO4D,KAAKkJ,WACd,EAEA1D,EAAGzI,UAAUmM,UAAY,WAKvB,OAHoB,IAAhBlJ,KAAK5D,QAAkC,IAAlB4D,KAAK8F,MAAM,KAClC9F,KAAK6F,SAAW,GAEX7F,IACT,EAIsB,qBAAXmJ,QAAgD,oBAAfA,OAAOC,IACjD,IACE5D,EAAGzI,UAAUoM,OAAOC,IAAI,+BAAiCC,CAG3D,CAFE,MAAOhD,GACPb,EAAGzI,UAAUsM,QAAUA,CACzB,MAEA7D,EAAGzI,UAAUsM,QAAUA,EAGzB,SAASA,IACP,OAAQrJ,KAAK+F,IAAM,UAAY,SAAW/F,KAAK6H,SAAS,IAAM,GAChE,CAgCA,IAAIyB,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAG9DhE,EAAGzI,UAAU8K,SAAW,SAAmBnC,EAAMlC,GAI/C,IAAIiG,EACJ,GAHAjG,EAAoB,EAAVA,GAAe,EAGZ,MAJbkC,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjC+D,EAAM,GAGN,IAFA,IAAIrB,EAAM,EACNsB,EAAQ,EACHrN,EAAI,EAAGA,EAAI2D,KAAK5D,OAAQC,IAAK,CACpC,IAAI8L,EAAInI,KAAK8F,MAAMzJ,GACfqM,GAA+B,UAArBP,GAAKC,EAAOsB,IAAmB7B,SAAS,IACtD6B,EAASvB,IAAO,GAAKC,EAAQ,UAC7BA,GAAO,IACI,KACTA,GAAO,GACP/L,KAGAoN,EADY,IAAVC,GAAerN,IAAM2D,KAAK5D,OAAS,EAC/BkN,EAAM,EAAIZ,EAAKtM,QAAUsM,EAAOe,EAEhCf,EAAOe,CAEjB,CAIA,IAHc,IAAVC,IACFD,EAAMC,EAAM7B,SAAS,IAAM4B,GAEtBA,EAAIrN,OAASoH,IAAY,GAC9BiG,EAAM,IAAMA,EAKd,OAHsB,IAAlBzJ,KAAK6F,WACP4D,EAAM,IAAMA,GAEPA,CACT,CAEA,GAAI/D,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAIiE,EAAYJ,EAAW7D,GAEvBkE,EAAYJ,EAAW9D,GAC3B+D,EAAM,GACN,IAAIxL,EAAI+B,KAAK+I,QAEb,IADA9K,EAAE4H,SAAW,GACL5H,EAAE4L,UAAU,CAClB,IAAI/I,EAAI7C,EAAE6L,MAAMF,GAAW/B,SAASnC,GAMlC+D,GALFxL,EAAIA,EAAE8L,MAAMH,IAELC,SAGC/I,EAAI2I,EAFJH,EAAMK,EAAY7I,EAAE1E,QAAU0E,EAAI2I,CAI5C,CAIA,IAHIzJ,KAAK6J,WACPJ,EAAM,IAAMA,GAEPA,EAAIrN,OAASoH,IAAY,GAC9BiG,EAAM,IAAMA,EAKd,OAHsB,IAAlBzJ,KAAK6F,WACP4D,EAAM,IAAMA,GAEPA,CACT,CAEA1E,GAAO,EAAO,kCAChB,EAEAS,EAAGzI,UAAUiN,SAAW,WACtB,IAAIC,EAAMjK,KAAK8F,MAAM,GASrB,OARoB,IAAhB9F,KAAK5D,OACP6N,GAAuB,SAAhBjK,KAAK8F,MAAM,GACO,IAAhB9F,KAAK5D,QAAkC,IAAlB4D,KAAK8F,MAAM,GAEzCmE,GAAO,iBAAoC,SAAhBjK,KAAK8F,MAAM,GAC7B9F,KAAK5D,OAAS,GACvB2I,GAAO,EAAO,8CAEU,IAAlB/E,KAAK6F,UAAmBoE,EAAMA,CACxC,EAEAzE,EAAGzI,UAAUmN,OAAS,WACpB,OAAOlK,KAAK6H,SAAS,GAAI,EAC3B,EAEI5B,IACFT,EAAGzI,UAAUoN,SAAW,SAAmBxE,EAAQvJ,GACjD,OAAO4D,KAAKoK,YAAYnE,EAAQN,EAAQvJ,EAC1C,GAGFoJ,EAAGzI,UAAUkL,QAAU,SAAkBtC,EAAQvJ,GAC/C,OAAO4D,KAAKoK,YAAYtN,MAAO6I,EAAQvJ,EACzC,EA2gBA,SAASiO,EAAYC,EAAMhD,EAAKmC,GAC9BA,EAAI5D,SAAWyB,EAAIzB,SAAWyE,EAAKzE,SACnC,IAAImB,EAAOsD,EAAKlO,OAASkL,EAAIlL,OAAU,EACvCqN,EAAIrN,OAAS4K,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAI/F,EAAoB,EAAhBqJ,EAAKxE,MAAM,GACfiB,EAAmB,EAAfO,EAAIxB,MAAM,GACdhF,EAAIG,EAAI8F,EAERwD,EAAS,SAAJzJ,EACL4I,EAAS5I,EAAI,SAAa,EAC9B2I,EAAI3D,MAAM,GAAKyE,EAEf,IAAK,IAAIC,EAAI,EAAGA,EAAIxD,EAAKwD,IAAK,CAM5B,IAHA,IAAIC,EAASf,IAAU,GACnBgB,EAAgB,SAARhB,EACRiB,EAAO1D,KAAKC,IAAIsD,EAAGlD,EAAIlL,OAAS,GAC3BuF,EAAIsF,KAAKM,IAAI,EAAGiD,EAAIF,EAAKlO,OAAS,GAAIuF,GAAKgJ,EAAMhJ,IAAK,CAC7D,IAAItF,EAAKmO,EAAI7I,EAAK,EAIlB8I,IADA3J,GAFAG,EAAoB,EAAhBqJ,EAAKxE,MAAMzJ,KACf0K,EAAmB,EAAfO,EAAIxB,MAAMnE,IACF+I,GACG,SAAa,EAC5BA,EAAY,SAAJ5J,CACV,CACA2I,EAAI3D,MAAM0E,GAAa,EAARE,EACfhB,EAAiB,EAATe,CACV,CAOA,OANc,IAAVf,EACFD,EAAI3D,MAAM0E,GAAa,EAARd,EAEfD,EAAIrN,SAGCqN,EAAIpB,QACb,CAziBA7C,EAAGzI,UAAUqN,YAAc,SAAsBQ,EAAWjF,EAAQvJ,GAClE4D,KAAKqI,SAEL,IAAIwC,EAAa7K,KAAK6K,aAClBC,EAAY1O,GAAU6K,KAAKM,IAAI,EAAGsD,GACtC9F,EAAO8F,GAAcC,EAAW,yCAChC/F,EAAO+F,EAAY,EAAG,+BAEtB,IAAIC,EAfS,SAAmBH,EAAW3B,GAC3C,OAAI2B,EAAUI,YACLJ,EAAUI,YAAY/B,GAExB,IAAI2B,EAAU3B,EACvB,CAUYgC,CAASL,EAAWE,GAG9B,OADA9K,KAAK,gBADoB,OAAX2F,EAAkB,KAAO,OACRoF,EAAKF,GAC7BE,CACT,EAEAvF,EAAGzI,UAAUmO,eAAiB,SAAyBH,EAAKF,GAI1D,IAHA,IAAIM,EAAW,EACXzB,EAAQ,EAEHrN,EAAI,EAAG+O,EAAQ,EAAG/O,EAAI2D,KAAK5D,OAAQC,IAAK,CAC/C,IAAIqM,EAAQ1I,KAAK8F,MAAMzJ,IAAM+O,EAAS1B,EAEtCqB,EAAII,KAAqB,IAAPzC,EACdyC,EAAWJ,EAAI3O,SACjB2O,EAAII,KAAezC,GAAQ,EAAK,KAE9ByC,EAAWJ,EAAI3O,SACjB2O,EAAII,KAAezC,GAAQ,GAAM,KAGrB,IAAV0C,GACED,EAAWJ,EAAI3O,SACjB2O,EAAII,KAAezC,GAAQ,GAAM,KAEnCgB,EAAQ,EACR0B,EAAQ,IAER1B,EAAQhB,IAAS,GACjB0C,GAAS,EAEb,CAEA,GAAID,EAAWJ,EAAI3O,OAGjB,IAFA2O,EAAII,KAAczB,EAEXyB,EAAWJ,EAAI3O,QACpB2O,EAAII,KAAc,CAGxB,EAEA3F,EAAGzI,UAAUsO,eAAiB,SAAyBN,EAAKF,GAI1D,IAHA,IAAIM,EAAWJ,EAAI3O,OAAS,EACxBsN,EAAQ,EAEHrN,EAAI,EAAG+O,EAAQ,EAAG/O,EAAI2D,KAAK5D,OAAQC,IAAK,CAC/C,IAAIqM,EAAQ1I,KAAK8F,MAAMzJ,IAAM+O,EAAS1B,EAEtCqB,EAAII,KAAqB,IAAPzC,EACdyC,GAAY,IACdJ,EAAII,KAAezC,GAAQ,EAAK,KAE9ByC,GAAY,IACdJ,EAAII,KAAezC,GAAQ,GAAM,KAGrB,IAAV0C,GACED,GAAY,IACdJ,EAAII,KAAezC,GAAQ,GAAM,KAEnCgB,EAAQ,EACR0B,EAAQ,IAER1B,EAAQhB,IAAS,GACjB0C,GAAS,EAEb,CAEA,GAAID,GAAY,EAGd,IAFAJ,EAAII,KAAczB,EAEXyB,GAAY,GACjBJ,EAAII,KAAc,CAGxB,EAEIlE,KAAKqE,MACP9F,EAAGzI,UAAUwO,WAAa,SAAqBpD,GAC7C,OAAO,GAAKlB,KAAKqE,MAAMnD,EACzB,EAEA3C,EAAGzI,UAAUwO,WAAa,SAAqBpD,GAC7C,IAAItH,EAAIsH,EACJrH,EAAI,EAiBR,OAhBID,GAAK,OACPC,GAAK,GACLD,KAAO,IAELA,GAAK,KACPC,GAAK,EACLD,KAAO,GAELA,GAAK,IACPC,GAAK,EACLD,KAAO,GAELA,GAAK,IACPC,GAAK,EACLD,KAAO,GAEFC,EAAID,CACb,EAGF2E,EAAGzI,UAAUyO,UAAY,SAAoBrD,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAItH,EAAIsH,EACJrH,EAAI,EAoBR,OAnBqB,KAAZ,KAAJD,KACHC,GAAK,GACLD,KAAO,IAEU,KAAV,IAAJA,KACHC,GAAK,EACLD,KAAO,GAES,KAAT,GAAJA,KACHC,GAAK,EACLD,KAAO,GAES,KAAT,EAAJA,KACHC,GAAK,EACLD,KAAO,GAES,KAAT,EAAJA,IACHC,IAEKA,CACT,EAGA0E,EAAGzI,UAAU0O,UAAY,WACvB,IAAItD,EAAInI,KAAK8F,MAAM9F,KAAK5D,OAAS,GAC7BsP,EAAK1L,KAAKuL,WAAWpD,GACzB,OAA2B,IAAnBnI,KAAK5D,OAAS,GAAUsP,CAClC,EAgBAlG,EAAGzI,UAAU4O,SAAW,WACtB,GAAI3L,KAAK6J,SAAU,OAAO,EAG1B,IADA,IAAI/I,EAAI,EACCzE,EAAI,EAAGA,EAAI2D,KAAK5D,OAAQC,IAAK,CACpC,IAAI0K,EAAI/G,KAAKwL,UAAUxL,KAAK8F,MAAMzJ,IAElC,GADAyE,GAAKiG,EACK,KAANA,EAAU,KAChB,CACA,OAAOjG,CACT,EAEA0E,EAAGzI,UAAU8N,WAAa,WACxB,OAAO5D,KAAKiB,KAAKlI,KAAKyL,YAAc,EACtC,EAEAjG,EAAGzI,UAAU6O,OAAS,SAAiBC,GACrC,OAAsB,IAAlB7L,KAAK6F,SACA7F,KAAK8L,MAAMC,MAAMF,GAAOG,MAAM,GAEhChM,KAAK+I,OACd,EAEAvD,EAAGzI,UAAUkP,SAAW,SAAmBJ,GACzC,OAAI7L,KAAKkM,MAAML,EAAQ,GACd7L,KAAKmM,KAAKN,GAAOG,MAAM,GAAGI,OAE5BpM,KAAK+I,OACd,EAEAvD,EAAGzI,UAAUsP,MAAQ,WACnB,OAAyB,IAAlBrM,KAAK6F,QACd,EAGAL,EAAGzI,UAAUuP,IAAM,WACjB,OAAOtM,KAAK+I,QAAQqD,MACtB,EAEA5G,EAAGzI,UAAUqP,KAAO,WAKlB,OAJKpM,KAAK6J,WACR7J,KAAK6F,UAAY,GAGZ7F,IACT,EAGAwF,EAAGzI,UAAUwP,KAAO,SAAejF,GACjC,KAAOtH,KAAK5D,OAASkL,EAAIlL,QACvB4D,KAAK8F,MAAM9F,KAAK5D,UAAY,EAG9B,IAAK,IAAIC,EAAI,EAAGA,EAAIiL,EAAIlL,OAAQC,IAC9B2D,KAAK8F,MAAMzJ,GAAK2D,KAAK8F,MAAMzJ,GAAKiL,EAAIxB,MAAMzJ,GAG5C,OAAO2D,KAAKqI,QACd,EAEA7C,EAAGzI,UAAUyP,IAAM,SAAclF,GAE/B,OADAvC,EAA0C,KAAlC/E,KAAK6F,SAAWyB,EAAIzB,WACrB7F,KAAKuM,KAAKjF,EACnB,EAGA9B,EAAGzI,UAAU0P,GAAK,SAAanF,GAC7B,OAAItH,KAAK5D,OAASkL,EAAIlL,OAAe4D,KAAK+I,QAAQyD,IAAIlF,GAC/CA,EAAIyB,QAAQyD,IAAIxM,KACzB,EAEAwF,EAAGzI,UAAU2P,IAAM,SAAcpF,GAC/B,OAAItH,KAAK5D,OAASkL,EAAIlL,OAAe4D,KAAK+I,QAAQwD,KAAKjF,GAChDA,EAAIyB,QAAQwD,KAAKvM,KAC1B,EAGAwF,EAAGzI,UAAU4P,MAAQ,SAAgBrF,GAEnC,IAAIP,EAEFA,EADE/G,KAAK5D,OAASkL,EAAIlL,OAChBkL,EAEAtH,KAGN,IAAK,IAAI3D,EAAI,EAAGA,EAAI0K,EAAE3K,OAAQC,IAC5B2D,KAAK8F,MAAMzJ,GAAK2D,KAAK8F,MAAMzJ,GAAKiL,EAAIxB,MAAMzJ,GAK5C,OAFA2D,KAAK5D,OAAS2K,EAAE3K,OAET4D,KAAKqI,QACd,EAEA7C,EAAGzI,UAAU6P,KAAO,SAAetF,GAEjC,OADAvC,EAA0C,KAAlC/E,KAAK6F,SAAWyB,EAAIzB,WACrB7F,KAAK2M,MAAMrF,EACpB,EAGA9B,EAAGzI,UAAU8P,IAAM,SAAcvF,GAC/B,OAAItH,KAAK5D,OAASkL,EAAIlL,OAAe4D,KAAK+I,QAAQ6D,KAAKtF,GAChDA,EAAIyB,QAAQ6D,KAAK5M,KAC1B,EAEAwF,EAAGzI,UAAU+P,KAAO,SAAexF,GACjC,OAAItH,KAAK5D,OAASkL,EAAIlL,OAAe4D,KAAK+I,QAAQ4D,MAAMrF,GACjDA,EAAIyB,QAAQ4D,MAAM3M,KAC3B,EAGAwF,EAAGzI,UAAUgQ,MAAQ,SAAgBzF,GAEnC,IAAIrG,EACA8F,EACA/G,KAAK5D,OAASkL,EAAIlL,QACpB6E,EAAIjB,KACJ+G,EAAIO,IAEJrG,EAAIqG,EACJP,EAAI/G,MAGN,IAAK,IAAI3D,EAAI,EAAGA,EAAI0K,EAAE3K,OAAQC,IAC5B2D,KAAK8F,MAAMzJ,GAAK4E,EAAE6E,MAAMzJ,GAAK0K,EAAEjB,MAAMzJ,GAGvC,GAAI2D,OAASiB,EACX,KAAO5E,EAAI4E,EAAE7E,OAAQC,IACnB2D,KAAK8F,MAAMzJ,GAAK4E,EAAE6E,MAAMzJ,GAM5B,OAFA2D,KAAK5D,OAAS6E,EAAE7E,OAET4D,KAAKqI,QACd,EAEA7C,EAAGzI,UAAUiQ,KAAO,SAAe1F,GAEjC,OADAvC,EAA0C,KAAlC/E,KAAK6F,SAAWyB,EAAIzB,WACrB7F,KAAK+M,MAAMzF,EACpB,EAGA9B,EAAGzI,UAAUkQ,IAAM,SAAc3F,GAC/B,OAAItH,KAAK5D,OAASkL,EAAIlL,OAAe4D,KAAK+I,QAAQiE,KAAK1F,GAChDA,EAAIyB,QAAQiE,KAAKhN,KAC1B,EAEAwF,EAAGzI,UAAUmQ,KAAO,SAAe5F,GACjC,OAAItH,KAAK5D,OAASkL,EAAIlL,OAAe4D,KAAK+I,QAAQgE,MAAMzF,GACjDA,EAAIyB,QAAQgE,MAAM/M,KAC3B,EAGAwF,EAAGzI,UAAUgP,MAAQ,SAAgBF,GACnC9G,EAAwB,kBAAV8G,GAAsBA,GAAS,GAE7C,IAAIsB,EAAsC,EAAxBlG,KAAKiB,KAAK2D,EAAQ,IAChCuB,EAAWvB,EAAQ,GAGvB7L,KAAKgJ,QAAQmE,GAETC,EAAW,GACbD,IAIF,IAAK,IAAI9Q,EAAI,EAAGA,EAAI8Q,EAAa9Q,IAC/B2D,KAAK8F,MAAMzJ,GAAsB,UAAhB2D,KAAK8F,MAAMzJ,GAS9B,OALI+Q,EAAW,IACbpN,KAAK8F,MAAMzJ,IAAM2D,KAAK8F,MAAMzJ,GAAM,UAAc,GAAK+Q,GAIhDpN,KAAKqI,QACd,EAEA7C,EAAGzI,UAAUoP,KAAO,SAAeN,GACjC,OAAO7L,KAAK+I,QAAQgD,MAAMF,EAC5B,EAGArG,EAAGzI,UAAUsQ,KAAO,SAAeC,EAAKtI,GACtCD,EAAsB,kBAARuI,GAAoBA,GAAO,GAEzC,IAAIlF,EAAOkF,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARAtN,KAAKgJ,QAAQZ,EAAM,GAGjBpI,KAAK8F,MAAMsC,GADTpD,EACgBhF,KAAK8F,MAAMsC,GAAQ,GAAKmF,EAExBvN,KAAK8F,MAAMsC,KAAS,GAAKmF,GAGtCvN,KAAKqI,QACd,EAGA7C,EAAGzI,UAAUyQ,KAAO,SAAelG,GACjC,IAAIxG,EAkBAG,EAAG8F,EAfP,GAAsB,IAAlB/G,KAAK6F,UAAmC,IAAjByB,EAAIzB,SAI7B,OAHA7F,KAAK6F,SAAW,EAChB/E,EAAId,KAAKyN,KAAKnG,GACdtH,KAAK6F,UAAY,EACV7F,KAAKkJ,YAGP,GAAsB,IAAlBlJ,KAAK6F,UAAmC,IAAjByB,EAAIzB,SAIpC,OAHAyB,EAAIzB,SAAW,EACf/E,EAAId,KAAKyN,KAAKnG,GACdA,EAAIzB,SAAW,EACR/E,EAAEoI,YAKPlJ,KAAK5D,OAASkL,EAAIlL,QACpB6E,EAAIjB,KACJ+G,EAAIO,IAEJrG,EAAIqG,EACJP,EAAI/G,MAIN,IADA,IAAI0J,EAAQ,EACHrN,EAAI,EAAGA,EAAI0K,EAAE3K,OAAQC,IAC5ByE,GAAkB,EAAbG,EAAE6E,MAAMzJ,KAAwB,EAAb0K,EAAEjB,MAAMzJ,IAAUqN,EAC1C1J,KAAK8F,MAAMzJ,GAAS,SAAJyE,EAChB4I,EAAQ5I,IAAM,GAEhB,KAAiB,IAAV4I,GAAerN,EAAI4E,EAAE7E,OAAQC,IAClCyE,GAAkB,EAAbG,EAAE6E,MAAMzJ,IAAUqN,EACvB1J,KAAK8F,MAAMzJ,GAAS,SAAJyE,EAChB4I,EAAQ5I,IAAM,GAIhB,GADAd,KAAK5D,OAAS6E,EAAE7E,OACF,IAAVsN,EACF1J,KAAK8F,MAAM9F,KAAK5D,QAAUsN,EAC1B1J,KAAK5D,cAEA,GAAI6E,IAAMjB,KACf,KAAO3D,EAAI4E,EAAE7E,OAAQC,IACnB2D,KAAK8F,MAAMzJ,GAAK4E,EAAE6E,MAAMzJ,GAI5B,OAAO2D,IACT,EAGAwF,EAAGzI,UAAU2Q,IAAM,SAAcpG,GAC/B,IAAIyD,EACJ,OAAqB,IAAjBzD,EAAIzB,UAAoC,IAAlB7F,KAAK6F,UAC7ByB,EAAIzB,SAAW,EACfkF,EAAM/K,KAAK2N,IAAIrG,GACfA,EAAIzB,UAAY,EACTkF,GACmB,IAAjBzD,EAAIzB,UAAoC,IAAlB7F,KAAK6F,UACpC7F,KAAK6F,SAAW,EAChBkF,EAAMzD,EAAIqG,IAAI3N,MACdA,KAAK6F,SAAW,EACTkF,GAGL/K,KAAK5D,OAASkL,EAAIlL,OAAe4D,KAAK+I,QAAQyE,KAAKlG,GAEhDA,EAAIyB,QAAQyE,KAAKxN,KAC1B,EAGAwF,EAAGzI,UAAU0Q,KAAO,SAAenG,GAEjC,GAAqB,IAAjBA,EAAIzB,SAAgB,CACtByB,EAAIzB,SAAW,EACf,IAAI/E,EAAId,KAAKwN,KAAKlG,GAElB,OADAA,EAAIzB,SAAW,EACR/E,EAAEoI,WAGX,CAAO,GAAsB,IAAlBlJ,KAAK6F,SAId,OAHA7F,KAAK6F,SAAW,EAChB7F,KAAKwN,KAAKlG,GACVtH,KAAK6F,SAAW,EACT7F,KAAKkJ,YAId,IAWIjI,EAAG8F,EAXHW,EAAM1H,KAAK0H,IAAIJ,GAGnB,GAAY,IAARI,EAIF,OAHA1H,KAAK6F,SAAW,EAChB7F,KAAK5D,OAAS,EACd4D,KAAK8F,MAAM,GAAK,EACT9F,KAKL0H,EAAM,GACRzG,EAAIjB,KACJ+G,EAAIO,IAEJrG,EAAIqG,EACJP,EAAI/G,MAIN,IADA,IAAI0J,EAAQ,EACHrN,EAAI,EAAGA,EAAI0K,EAAE3K,OAAQC,IAE5BqN,GADA5I,GAAkB,EAAbG,EAAE6E,MAAMzJ,KAAwB,EAAb0K,EAAEjB,MAAMzJ,IAAUqN,IAC7B,GACb1J,KAAK8F,MAAMzJ,GAAS,SAAJyE,EAElB,KAAiB,IAAV4I,GAAerN,EAAI4E,EAAE7E,OAAQC,IAElCqN,GADA5I,GAAkB,EAAbG,EAAE6E,MAAMzJ,IAAUqN,IACV,GACb1J,KAAK8F,MAAMzJ,GAAS,SAAJyE,EAIlB,GAAc,IAAV4I,GAAerN,EAAI4E,EAAE7E,QAAU6E,IAAMjB,KACvC,KAAO3D,EAAI4E,EAAE7E,OAAQC,IACnB2D,KAAK8F,MAAMzJ,GAAK4E,EAAE6E,MAAMzJ,GAU5B,OANA2D,KAAK5D,OAAS6K,KAAKM,IAAIvH,KAAK5D,OAAQC,GAEhC4E,IAAMjB,OACRA,KAAK6F,SAAW,GAGX7F,KAAKqI,QACd,EAGA7C,EAAGzI,UAAU4Q,IAAM,SAAcrG,GAC/B,OAAOtH,KAAK+I,QAAQ0E,KAAKnG,EAC3B,EA8CA,IAAIsG,EAAc,SAAsBtD,EAAMhD,EAAKmC,GACjD,IAIIc,EACAsD,EACAnC,EANAzK,EAAIqJ,EAAKxE,MACTiB,EAAIO,EAAIxB,MACRgI,EAAIrE,EAAI3D,MACR7H,EAAI,EAIJ8P,EAAY,EAAP9M,EAAE,GACP+M,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPjN,EAAE,GACPkN,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPpN,EAAE,GACPqN,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPvN,EAAE,GACPwN,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP1N,EAAE,GACP2N,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7N,EAAE,GACP8N,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhO,EAAE,GACPiO,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnO,EAAE,GACPoO,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtO,EAAE,GACPuO,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPzO,EAAE,GACP0O,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP9I,EAAE,GACP+I,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPjJ,EAAE,GACPkJ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPpJ,EAAE,GACPqJ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPvJ,EAAE,GACPwJ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP1J,EAAE,GACP2J,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAP7J,EAAE,GACP8J,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPhK,EAAE,GACPiK,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPnK,EAAE,GACPoK,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPtK,EAAE,GACPuK,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPzK,EAAE,GACP0K,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjB/H,EAAI5D,SAAWyE,EAAKzE,SAAWyB,EAAIzB,SACnC4D,EAAIrN,OAAS,GAMb,IAAIuV,IAAQ1T,GAJZsM,EAAKtD,KAAK2K,KAAK5D,EAAK8B,IAIE,KAAa,MAFnCjC,GADAA,EAAM5G,KAAK2K,KAAK5D,EAAK+B,IACR9I,KAAK2K,KAAK3D,EAAK6B,GAAQ,KAEU,IAAO,EACrD7R,IAFAyN,EAAKzE,KAAK2K,KAAK3D,EAAK8B,KAEPlC,IAAQ,IAAO,IAAM8D,KAAO,IAAO,EAChDA,IAAM,SAENpH,EAAKtD,KAAK2K,KAAKzD,EAAK2B,GAEpBjC,GADAA,EAAM5G,KAAK2K,KAAKzD,EAAK4B,IACR9I,KAAK2K,KAAKxD,EAAK0B,GAAQ,EACpCpE,EAAKzE,KAAK2K,KAAKxD,EAAK2B,GAKpB,IAAI8B,IAAQ5T,GAJZsM,EAAMA,EAAKtD,KAAK2K,KAAK5D,EAAKiC,GAAQ,GAIZ,KAAa,MAFnCpC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK5D,EAAKkC,GAAQ,GACvBjJ,KAAK2K,KAAK3D,EAAKgC,GAAQ,KAEU,IAAO,EACrDhS,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAK3D,EAAKiC,GAAQ,IAErBrC,IAAQ,IAAO,IAAMgE,KAAO,IAAO,EAChDA,IAAM,SAENtH,EAAKtD,KAAK2K,KAAKtD,EAAKwB,GAEpBjC,GADAA,EAAM5G,KAAK2K,KAAKtD,EAAKyB,IACR9I,KAAK2K,KAAKrD,EAAKuB,GAAQ,EACpCpE,EAAKzE,KAAK2K,KAAKrD,EAAKwB,GACpBxF,EAAMA,EAAKtD,KAAK2K,KAAKzD,EAAK8B,GAAQ,EAElCpC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKzD,EAAK+B,GAAQ,GACvBjJ,KAAK2K,KAAKxD,EAAK6B,GAAQ,EACpCvE,EAAMA,EAAKzE,KAAK2K,KAAKxD,EAAK8B,GAAQ,EAKlC,IAAI4B,IAAQ7T,GAJZsM,EAAMA,EAAKtD,KAAK2K,KAAK5D,EAAKoC,GAAQ,GAIZ,KAAa,MAFnCvC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK5D,EAAKqC,GAAQ,GACvBpJ,KAAK2K,KAAK3D,EAAKmC,GAAQ,KAEU,IAAO,EACrDnS,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAK3D,EAAKoC,GAAQ,IAErBxC,IAAQ,IAAO,IAAMiE,KAAO,IAAO,EAChDA,IAAM,SAENvH,EAAKtD,KAAK2K,KAAKnD,EAAKqB,GAEpBjC,GADAA,EAAM5G,KAAK2K,KAAKnD,EAAKsB,IACR9I,KAAK2K,KAAKlD,EAAKoB,GAAQ,EACpCpE,EAAKzE,KAAK2K,KAAKlD,EAAKqB,GACpBxF,EAAMA,EAAKtD,KAAK2K,KAAKtD,EAAK2B,GAAQ,EAElCpC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKtD,EAAK4B,GAAQ,GACvBjJ,KAAK2K,KAAKrD,EAAK0B,GAAQ,EACpCvE,EAAMA,EAAKzE,KAAK2K,KAAKrD,EAAK2B,GAAQ,EAClC3F,EAAMA,EAAKtD,KAAK2K,KAAKzD,EAAKiC,GAAQ,EAElCvC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKzD,EAAKkC,GAAQ,GACvBpJ,KAAK2K,KAAKxD,EAAKgC,GAAQ,EACpC1E,EAAMA,EAAKzE,KAAK2K,KAAKxD,EAAKiC,GAAQ,EAKlC,IAAI0B,IAAQ9T,GAJZsM,EAAMA,EAAKtD,KAAK2K,KAAK5D,EAAKuC,GAAQ,GAIZ,KAAa,MAFnC1C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK5D,EAAKwC,GAAQ,GACvBvJ,KAAK2K,KAAK3D,EAAKsC,GAAQ,KAEU,IAAO,EACrDtS,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAK3D,EAAKuC,GAAQ,IAErB3C,IAAQ,IAAO,IAAMkE,KAAO,IAAO,EAChDA,IAAM,SAENxH,EAAKtD,KAAK2K,KAAKhD,EAAKkB,GAEpBjC,GADAA,EAAM5G,KAAK2K,KAAKhD,EAAKmB,IACR9I,KAAK2K,KAAK/C,EAAKiB,GAAQ,EACpCpE,EAAKzE,KAAK2K,KAAK/C,EAAKkB,GACpBxF,EAAMA,EAAKtD,KAAK2K,KAAKnD,EAAKwB,GAAQ,EAElCpC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKnD,EAAKyB,GAAQ,GACvBjJ,KAAK2K,KAAKlD,EAAKuB,GAAQ,EACpCvE,EAAMA,EAAKzE,KAAK2K,KAAKlD,EAAKwB,GAAQ,EAClC3F,EAAMA,EAAKtD,KAAK2K,KAAKtD,EAAK8B,GAAQ,EAElCvC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKtD,EAAK+B,GAAQ,GACvBpJ,KAAK2K,KAAKrD,EAAK6B,GAAQ,EACpC1E,EAAMA,EAAKzE,KAAK2K,KAAKrD,EAAK8B,GAAQ,EAClC9F,EAAMA,EAAKtD,KAAK2K,KAAKzD,EAAKoC,GAAQ,EAElC1C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKzD,EAAKqC,GAAQ,GACvBvJ,KAAK2K,KAAKxD,EAAKmC,GAAQ,EACpC7E,EAAMA,EAAKzE,KAAK2K,KAAKxD,EAAKoC,GAAQ,EAKlC,IAAIwB,IAAQ/T,GAJZsM,EAAMA,EAAKtD,KAAK2K,KAAK5D,EAAK0C,GAAQ,GAIZ,KAAa,MAFnC7C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK5D,EAAK2C,IAAQ,GACvB1J,KAAK2K,KAAK3D,EAAKyC,GAAQ,KAEU,IAAO,EACrDzS,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAK3D,EAAK0C,IAAQ,IAErB9C,IAAQ,IAAO,IAAMmE,KAAO,IAAO,EAChDA,IAAM,SAENzH,EAAKtD,KAAK2K,KAAK7C,EAAKe,GAEpBjC,GADAA,EAAM5G,KAAK2K,KAAK7C,EAAKgB,IACR9I,KAAK2K,KAAK5C,EAAKc,GAAQ,EACpCpE,EAAKzE,KAAK2K,KAAK5C,EAAKe,GACpBxF,EAAMA,EAAKtD,KAAK2K,KAAKhD,EAAKqB,GAAQ,EAElCpC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKhD,EAAKsB,GAAQ,GACvBjJ,KAAK2K,KAAK/C,EAAKoB,GAAQ,EACpCvE,EAAMA,EAAKzE,KAAK2K,KAAK/C,EAAKqB,GAAQ,EAClC3F,EAAMA,EAAKtD,KAAK2K,KAAKnD,EAAK2B,GAAQ,EAElCvC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKnD,EAAK4B,GAAQ,GACvBpJ,KAAK2K,KAAKlD,EAAK0B,GAAQ,EACpC1E,EAAMA,EAAKzE,KAAK2K,KAAKlD,EAAK2B,GAAQ,EAClC9F,EAAMA,EAAKtD,KAAK2K,KAAKtD,EAAKiC,GAAQ,EAElC1C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKtD,EAAKkC,GAAQ,GACvBvJ,KAAK2K,KAAKrD,EAAKgC,GAAQ,EACpC7E,EAAMA,EAAKzE,KAAK2K,KAAKrD,EAAKiC,GAAQ,EAClCjG,EAAMA,EAAKtD,KAAK2K,KAAKzD,EAAKuC,GAAQ,EAElC7C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKzD,EAAKwC,IAAQ,GACvB1J,KAAK2K,KAAKxD,EAAKsC,GAAQ,EACpChF,EAAMA,EAAKzE,KAAK2K,KAAKxD,EAAKuC,IAAQ,EAKlC,IAAIsB,IAAQhU,GAJZsM,EAAMA,EAAKtD,KAAK2K,KAAK5D,EAAK6C,IAAQ,GAIZ,KAAa,MAFnChD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK5D,EAAK8C,IAAQ,GACvB7J,KAAK2K,KAAK3D,EAAK4C,IAAQ,KAEU,IAAO,EACrD5S,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAK3D,EAAK6C,IAAQ,IAErBjD,IAAQ,IAAO,IAAMoE,KAAO,IAAO,EAChDA,IAAM,SAEN1H,EAAKtD,KAAK2K,KAAK1C,EAAKY,GAEpBjC,GADAA,EAAM5G,KAAK2K,KAAK1C,EAAKa,IACR9I,KAAK2K,KAAKzC,EAAKW,GAAQ,EACpCpE,EAAKzE,KAAK2K,KAAKzC,EAAKY,GACpBxF,EAAMA,EAAKtD,KAAK2K,KAAK7C,EAAKkB,GAAQ,EAElCpC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK7C,EAAKmB,GAAQ,GACvBjJ,KAAK2K,KAAK5C,EAAKiB,GAAQ,EACpCvE,EAAMA,EAAKzE,KAAK2K,KAAK5C,EAAKkB,GAAQ,EAClC3F,EAAMA,EAAKtD,KAAK2K,KAAKhD,EAAKwB,GAAQ,EAElCvC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKhD,EAAKyB,GAAQ,GACvBpJ,KAAK2K,KAAK/C,EAAKuB,GAAQ,EACpC1E,EAAMA,EAAKzE,KAAK2K,KAAK/C,EAAKwB,GAAQ,EAClC9F,EAAMA,EAAKtD,KAAK2K,KAAKnD,EAAK8B,GAAQ,EAElC1C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKnD,EAAK+B,GAAQ,GACvBvJ,KAAK2K,KAAKlD,EAAK6B,GAAQ,EACpC7E,EAAMA,EAAKzE,KAAK2K,KAAKlD,EAAK8B,GAAQ,EAClCjG,EAAMA,EAAKtD,KAAK2K,KAAKtD,EAAKoC,GAAQ,EAElC7C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKtD,EAAKqC,IAAQ,GACvB1J,KAAK2K,KAAKrD,EAAKmC,GAAQ,EACpChF,EAAMA,EAAKzE,KAAK2K,KAAKrD,EAAKoC,IAAQ,EAClCpG,EAAMA,EAAKtD,KAAK2K,KAAKzD,EAAK0C,IAAQ,EAElChD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKzD,EAAK2C,IAAQ,GACvB7J,KAAK2K,KAAKxD,EAAKyC,IAAQ,EACpCnF,EAAMA,EAAKzE,KAAK2K,KAAKxD,EAAK0C,IAAQ,EAKlC,IAAIoB,IAAQjU,GAJZsM,EAAMA,EAAKtD,KAAK2K,KAAK5D,EAAKgD,IAAQ,GAIZ,KAAa,MAFnCnD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK5D,EAAKiD,IAAQ,GACvBhK,KAAK2K,KAAK3D,EAAK+C,IAAQ,KAEU,IAAO,EACrD/S,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAK3D,EAAKgD,IAAQ,IAErBpD,IAAQ,IAAO,IAAMqE,KAAO,IAAO,EAChDA,IAAM,SAEN3H,EAAKtD,KAAK2K,KAAKvC,EAAKS,GAEpBjC,GADAA,EAAM5G,KAAK2K,KAAKvC,EAAKU,IACR9I,KAAK2K,KAAKtC,EAAKQ,GAAQ,EACpCpE,EAAKzE,KAAK2K,KAAKtC,EAAKS,GACpBxF,EAAMA,EAAKtD,KAAK2K,KAAK1C,EAAKe,GAAQ,EAElCpC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK1C,EAAKgB,GAAQ,GACvBjJ,KAAK2K,KAAKzC,EAAKc,GAAQ,EACpCvE,EAAMA,EAAKzE,KAAK2K,KAAKzC,EAAKe,GAAQ,EAClC3F,EAAMA,EAAKtD,KAAK2K,KAAK7C,EAAKqB,GAAQ,EAElCvC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK7C,EAAKsB,GAAQ,GACvBpJ,KAAK2K,KAAK5C,EAAKoB,GAAQ,EACpC1E,EAAMA,EAAKzE,KAAK2K,KAAK5C,EAAKqB,GAAQ,EAClC9F,EAAMA,EAAKtD,KAAK2K,KAAKhD,EAAK2B,GAAQ,EAElC1C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKhD,EAAK4B,GAAQ,GACvBvJ,KAAK2K,KAAK/C,EAAK0B,GAAQ,EACpC7E,EAAMA,EAAKzE,KAAK2K,KAAK/C,EAAK2B,GAAQ,EAClCjG,EAAMA,EAAKtD,KAAK2K,KAAKnD,EAAKiC,GAAQ,EAElC7C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKnD,EAAKkC,IAAQ,GACvB1J,KAAK2K,KAAKlD,EAAKgC,GAAQ,EACpChF,EAAMA,EAAKzE,KAAK2K,KAAKlD,EAAKiC,IAAQ,EAClCpG,EAAMA,EAAKtD,KAAK2K,KAAKtD,EAAKuC,IAAQ,EAElChD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKtD,EAAKwC,IAAQ,GACvB7J,KAAK2K,KAAKrD,EAAKsC,IAAQ,EACpCnF,EAAMA,EAAKzE,KAAK2K,KAAKrD,EAAKuC,IAAQ,EAClCvG,EAAMA,EAAKtD,KAAK2K,KAAKzD,EAAK6C,IAAQ,EAElCnD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKzD,EAAK8C,IAAQ,GACvBhK,KAAK2K,KAAKxD,EAAK4C,IAAQ,EACpCtF,EAAMA,EAAKzE,KAAK2K,KAAKxD,EAAK6C,IAAQ,EAKlC,IAAIkB,IAAQlU,GAJZsM,EAAMA,EAAKtD,KAAK2K,KAAK5D,EAAKmD,IAAQ,GAIZ,KAAa,MAFnCtD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK5D,EAAKoD,IAAQ,GACvBnK,KAAK2K,KAAK3D,EAAKkD,IAAQ,KAEU,IAAO,EACrDlT,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAK3D,EAAKmD,IAAQ,IAErBvD,IAAQ,IAAO,IAAMsE,KAAO,IAAO,EAChDA,IAAM,SAEN5H,EAAKtD,KAAK2K,KAAKpC,EAAKM,GAEpBjC,GADAA,EAAM5G,KAAK2K,KAAKpC,EAAKO,IACR9I,KAAK2K,KAAKnC,EAAKK,GAAQ,EACpCpE,EAAKzE,KAAK2K,KAAKnC,EAAKM,GACpBxF,EAAMA,EAAKtD,KAAK2K,KAAKvC,EAAKY,GAAQ,EAElCpC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKvC,EAAKa,GAAQ,GACvBjJ,KAAK2K,KAAKtC,EAAKW,GAAQ,EACpCvE,EAAMA,EAAKzE,KAAK2K,KAAKtC,EAAKY,GAAQ,EAClC3F,EAAMA,EAAKtD,KAAK2K,KAAK1C,EAAKkB,GAAQ,EAElCvC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK1C,EAAKmB,GAAQ,GACvBpJ,KAAK2K,KAAKzC,EAAKiB,GAAQ,EACpC1E,EAAMA,EAAKzE,KAAK2K,KAAKzC,EAAKkB,GAAQ,EAClC9F,EAAMA,EAAKtD,KAAK2K,KAAK7C,EAAKwB,GAAQ,EAElC1C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK7C,EAAKyB,GAAQ,GACvBvJ,KAAK2K,KAAK5C,EAAKuB,GAAQ,EACpC7E,EAAMA,EAAKzE,KAAK2K,KAAK5C,EAAKwB,GAAQ,EAClCjG,EAAMA,EAAKtD,KAAK2K,KAAKhD,EAAK8B,GAAQ,EAElC7C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKhD,EAAK+B,IAAQ,GACvB1J,KAAK2K,KAAK/C,EAAK6B,GAAQ,EACpChF,EAAMA,EAAKzE,KAAK2K,KAAK/C,EAAK8B,IAAQ,EAClCpG,EAAMA,EAAKtD,KAAK2K,KAAKnD,EAAKoC,IAAQ,EAElChD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKnD,EAAKqC,IAAQ,GACvB7J,KAAK2K,KAAKlD,EAAKmC,IAAQ,EACpCnF,EAAMA,EAAKzE,KAAK2K,KAAKlD,EAAKoC,IAAQ,EAClCvG,EAAMA,EAAKtD,KAAK2K,KAAKtD,EAAK0C,IAAQ,EAElCnD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKtD,EAAK2C,IAAQ,GACvBhK,KAAK2K,KAAKrD,EAAKyC,IAAQ,EACpCtF,EAAMA,EAAKzE,KAAK2K,KAAKrD,EAAK0C,IAAQ,EAClC1G,EAAMA,EAAKtD,KAAK2K,KAAKzD,EAAKgD,IAAQ,EAElCtD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKzD,EAAKiD,IAAQ,GACvBnK,KAAK2K,KAAKxD,EAAK+C,IAAQ,EACpCzF,EAAMA,EAAKzE,KAAK2K,KAAKxD,EAAKgD,IAAQ,EAKlC,IAAIgB,IAAQnU,GAJZsM,EAAMA,EAAKtD,KAAK2K,KAAK5D,EAAKsD,IAAQ,GAIZ,KAAa,MAFnCzD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK5D,EAAKuD,IAAQ,GACvBtK,KAAK2K,KAAK3D,EAAKqD,IAAQ,KAEU,IAAO,EACrDrT,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAK3D,EAAKsD,IAAQ,IAErB1D,IAAQ,IAAO,IAAMuE,KAAO,IAAO,EAChDA,IAAM,SAEN7H,EAAKtD,KAAK2K,KAAKjC,EAAKG,GAEpBjC,GADAA,EAAM5G,KAAK2K,KAAKjC,EAAKI,IACR9I,KAAK2K,KAAKhC,EAAKE,GAAQ,EACpCpE,EAAKzE,KAAK2K,KAAKhC,EAAKG,GACpBxF,EAAMA,EAAKtD,KAAK2K,KAAKpC,EAAKS,GAAQ,EAElCpC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKpC,EAAKU,GAAQ,GACvBjJ,KAAK2K,KAAKnC,EAAKQ,GAAQ,EACpCvE,EAAMA,EAAKzE,KAAK2K,KAAKnC,EAAKS,GAAQ,EAClC3F,EAAMA,EAAKtD,KAAK2K,KAAKvC,EAAKe,GAAQ,EAElCvC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKvC,EAAKgB,GAAQ,GACvBpJ,KAAK2K,KAAKtC,EAAKc,GAAQ,EACpC1E,EAAMA,EAAKzE,KAAK2K,KAAKtC,EAAKe,GAAQ,EAClC9F,EAAMA,EAAKtD,KAAK2K,KAAK1C,EAAKqB,GAAQ,EAElC1C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK1C,EAAKsB,GAAQ,GACvBvJ,KAAK2K,KAAKzC,EAAKoB,GAAQ,EACpC7E,EAAMA,EAAKzE,KAAK2K,KAAKzC,EAAKqB,GAAQ,EAClCjG,EAAMA,EAAKtD,KAAK2K,KAAK7C,EAAK2B,GAAQ,EAElC7C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK7C,EAAK4B,IAAQ,GACvB1J,KAAK2K,KAAK5C,EAAK0B,GAAQ,EACpChF,EAAMA,EAAKzE,KAAK2K,KAAK5C,EAAK2B,IAAQ,EAClCpG,EAAMA,EAAKtD,KAAK2K,KAAKhD,EAAKiC,IAAQ,EAElChD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKhD,EAAKkC,IAAQ,GACvB7J,KAAK2K,KAAK/C,EAAKgC,IAAQ,EACpCnF,EAAMA,EAAKzE,KAAK2K,KAAK/C,EAAKiC,IAAQ,EAClCvG,EAAMA,EAAKtD,KAAK2K,KAAKnD,EAAKuC,IAAQ,EAElCnD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKnD,EAAKwC,IAAQ,GACvBhK,KAAK2K,KAAKlD,EAAKsC,IAAQ,EACpCtF,EAAMA,EAAKzE,KAAK2K,KAAKlD,EAAKuC,IAAQ,EAClC1G,EAAMA,EAAKtD,KAAK2K,KAAKtD,EAAK6C,IAAQ,EAElCtD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKtD,EAAK8C,IAAQ,GACvBnK,KAAK2K,KAAKrD,EAAK4C,IAAQ,EACpCzF,EAAMA,EAAKzE,KAAK2K,KAAKrD,EAAK6C,IAAQ,EAClC7G,EAAMA,EAAKtD,KAAK2K,KAAKzD,EAAKmD,IAAQ,EAElCzD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKzD,EAAKoD,IAAQ,GACvBtK,KAAK2K,KAAKxD,EAAKkD,IAAQ,EACpC5F,EAAMA,EAAKzE,KAAK2K,KAAKxD,EAAKmD,IAAQ,EAKlC,IAAIc,IAAQpU,GAJZsM,EAAMA,EAAKtD,KAAK2K,KAAK5D,EAAKyD,IAAQ,GAIZ,KAAa,MAFnC5D,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK5D,EAAK0D,IAAQ,GACvBzK,KAAK2K,KAAK3D,EAAKwD,IAAQ,KAEU,IAAO,EACrDxT,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAK3D,EAAKyD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMwE,KAAO,IAAO,EAChDA,IAAM,SAEN9H,EAAKtD,KAAK2K,KAAKjC,EAAKM,GAEpBpC,GADAA,EAAM5G,KAAK2K,KAAKjC,EAAKO,IACRjJ,KAAK2K,KAAKhC,EAAKK,GAAQ,EACpCvE,EAAKzE,KAAK2K,KAAKhC,EAAKM,GACpB3F,EAAMA,EAAKtD,KAAK2K,KAAKpC,EAAKY,GAAQ,EAElCvC,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKpC,EAAKa,GAAQ,GACvBpJ,KAAK2K,KAAKnC,EAAKW,GAAQ,EACpC1E,EAAMA,EAAKzE,KAAK2K,KAAKnC,EAAKY,GAAQ,EAClC9F,EAAMA,EAAKtD,KAAK2K,KAAKvC,EAAKkB,GAAQ,EAElC1C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKvC,EAAKmB,GAAQ,GACvBvJ,KAAK2K,KAAKtC,EAAKiB,GAAQ,EACpC7E,EAAMA,EAAKzE,KAAK2K,KAAKtC,EAAKkB,GAAQ,EAClCjG,EAAMA,EAAKtD,KAAK2K,KAAK1C,EAAKwB,GAAQ,EAElC7C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK1C,EAAKyB,IAAQ,GACvB1J,KAAK2K,KAAKzC,EAAKuB,GAAQ,EACpChF,EAAMA,EAAKzE,KAAK2K,KAAKzC,EAAKwB,IAAQ,EAClCpG,EAAMA,EAAKtD,KAAK2K,KAAK7C,EAAK8B,IAAQ,EAElChD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK7C,EAAK+B,IAAQ,GACvB7J,KAAK2K,KAAK5C,EAAK6B,IAAQ,EACpCnF,EAAMA,EAAKzE,KAAK2K,KAAK5C,EAAK8B,IAAQ,EAClCvG,EAAMA,EAAKtD,KAAK2K,KAAKhD,EAAKoC,IAAQ,EAElCnD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKhD,EAAKqC,IAAQ,GACvBhK,KAAK2K,KAAK/C,EAAKmC,IAAQ,EACpCtF,EAAMA,EAAKzE,KAAK2K,KAAK/C,EAAKoC,IAAQ,EAClC1G,EAAMA,EAAKtD,KAAK2K,KAAKnD,EAAK0C,IAAQ,EAElCtD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKnD,EAAK2C,IAAQ,GACvBnK,KAAK2K,KAAKlD,EAAKyC,IAAQ,EACpCzF,EAAMA,EAAKzE,KAAK2K,KAAKlD,EAAK0C,IAAQ,EAClC7G,EAAMA,EAAKtD,KAAK2K,KAAKtD,EAAKgD,IAAQ,EAElCzD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKtD,EAAKiD,IAAQ,GACvBtK,KAAK2K,KAAKrD,EAAK+C,IAAQ,EACpC5F,EAAMA,EAAKzE,KAAK2K,KAAKrD,EAAKgD,IAAQ,EAKlC,IAAIe,IAASrU,GAJbsM,EAAMA,EAAKtD,KAAK2K,KAAKzD,EAAKsD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKzD,EAAKuD,IAAQ,GACvBzK,KAAK2K,KAAKxD,EAAKqD,IAAQ,KAEW,IAAO,EACtDxT,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAKxD,EAAKsD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMyE,KAAQ,IAAO,EACjDA,IAAO,SAEP/H,EAAKtD,KAAK2K,KAAKjC,EAAKS,GAEpBvC,GADAA,EAAM5G,KAAK2K,KAAKjC,EAAKU,IACRpJ,KAAK2K,KAAKhC,EAAKQ,GAAQ,EACpC1E,EAAKzE,KAAK2K,KAAKhC,EAAKS,GACpB9F,EAAMA,EAAKtD,KAAK2K,KAAKpC,EAAKe,GAAQ,EAElC1C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKpC,EAAKgB,GAAQ,GACvBvJ,KAAK2K,KAAKnC,EAAKc,GAAQ,EACpC7E,EAAMA,EAAKzE,KAAK2K,KAAKnC,EAAKe,GAAQ,EAClCjG,EAAMA,EAAKtD,KAAK2K,KAAKvC,EAAKqB,GAAQ,EAElC7C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKvC,EAAKsB,IAAQ,GACvB1J,KAAK2K,KAAKtC,EAAKoB,GAAQ,EACpChF,EAAMA,EAAKzE,KAAK2K,KAAKtC,EAAKqB,IAAQ,EAClCpG,EAAMA,EAAKtD,KAAK2K,KAAK1C,EAAK2B,IAAQ,EAElChD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK1C,EAAK4B,IAAQ,GACvB7J,KAAK2K,KAAKzC,EAAK0B,IAAQ,EACpCnF,EAAMA,EAAKzE,KAAK2K,KAAKzC,EAAK2B,IAAQ,EAClCvG,EAAMA,EAAKtD,KAAK2K,KAAK7C,EAAKiC,IAAQ,EAElCnD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK7C,EAAKkC,IAAQ,GACvBhK,KAAK2K,KAAK5C,EAAKgC,IAAQ,EACpCtF,EAAMA,EAAKzE,KAAK2K,KAAK5C,EAAKiC,IAAQ,EAClC1G,EAAMA,EAAKtD,KAAK2K,KAAKhD,EAAKuC,IAAQ,EAElCtD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKhD,EAAKwC,IAAQ,GACvBnK,KAAK2K,KAAK/C,EAAKsC,IAAQ,EACpCzF,EAAMA,EAAKzE,KAAK2K,KAAK/C,EAAKuC,IAAQ,EAClC7G,EAAMA,EAAKtD,KAAK2K,KAAKnD,EAAK6C,IAAQ,EAElCzD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKnD,EAAK8C,IAAQ,GACvBtK,KAAK2K,KAAKlD,EAAK4C,IAAQ,EACpC5F,EAAMA,EAAKzE,KAAK2K,KAAKlD,EAAK6C,IAAQ,EAKlC,IAAIgB,IAAStU,GAJbsM,EAAMA,EAAKtD,KAAK2K,KAAKtD,EAAKmD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKtD,EAAKoD,IAAQ,GACvBzK,KAAK2K,KAAKrD,EAAKkD,IAAQ,KAEW,IAAO,EACtDxT,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAKrD,EAAKmD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM0E,KAAQ,IAAO,EACjDA,IAAO,SAEPhI,EAAKtD,KAAK2K,KAAKjC,EAAKY,GAEpB1C,GADAA,EAAM5G,KAAK2K,KAAKjC,EAAKa,IACRvJ,KAAK2K,KAAKhC,EAAKW,GAAQ,EACpC7E,EAAKzE,KAAK2K,KAAKhC,EAAKY,GACpBjG,EAAMA,EAAKtD,KAAK2K,KAAKpC,EAAKkB,GAAQ,EAElC7C,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKpC,EAAKmB,IAAQ,GACvB1J,KAAK2K,KAAKnC,EAAKiB,GAAQ,EACpChF,EAAMA,EAAKzE,KAAK2K,KAAKnC,EAAKkB,IAAQ,EAClCpG,EAAMA,EAAKtD,KAAK2K,KAAKvC,EAAKwB,IAAQ,EAElChD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKvC,EAAKyB,IAAQ,GACvB7J,KAAK2K,KAAKtC,EAAKuB,IAAQ,EACpCnF,EAAMA,EAAKzE,KAAK2K,KAAKtC,EAAKwB,IAAQ,EAClCvG,EAAMA,EAAKtD,KAAK2K,KAAK1C,EAAK8B,IAAQ,EAElCnD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK1C,EAAK+B,IAAQ,GACvBhK,KAAK2K,KAAKzC,EAAK6B,IAAQ,EACpCtF,EAAMA,EAAKzE,KAAK2K,KAAKzC,EAAK8B,IAAQ,EAClC1G,EAAMA,EAAKtD,KAAK2K,KAAK7C,EAAKoC,IAAQ,EAElCtD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK7C,EAAKqC,IAAQ,GACvBnK,KAAK2K,KAAK5C,EAAKmC,IAAQ,EACpCzF,EAAMA,EAAKzE,KAAK2K,KAAK5C,EAAKoC,IAAQ,EAClC7G,EAAMA,EAAKtD,KAAK2K,KAAKhD,EAAK0C,IAAQ,EAElCzD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKhD,EAAK2C,IAAQ,GACvBtK,KAAK2K,KAAK/C,EAAKyC,IAAQ,EACpC5F,EAAMA,EAAKzE,KAAK2K,KAAK/C,EAAK0C,IAAQ,EAKlC,IAAIiB,IAASvU,GAJbsM,EAAMA,EAAKtD,KAAK2K,KAAKnD,EAAKgD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKnD,EAAKiD,IAAQ,GACvBzK,KAAK2K,KAAKlD,EAAK+C,IAAQ,KAEW,IAAO,EACtDxT,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAKlD,EAAKgD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM2E,KAAQ,IAAO,EACjDA,IAAO,SAEPjI,EAAKtD,KAAK2K,KAAKjC,EAAKe,GAEpB7C,GADAA,EAAM5G,KAAK2K,KAAKjC,EAAKgB,KACR1J,KAAK2K,KAAKhC,EAAKc,GAAQ,EACpChF,EAAKzE,KAAK2K,KAAKhC,EAAKe,IACpBpG,EAAMA,EAAKtD,KAAK2K,KAAKpC,EAAKqB,IAAQ,EAElChD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKpC,EAAKsB,IAAQ,GACvB7J,KAAK2K,KAAKnC,EAAKoB,IAAQ,EACpCnF,EAAMA,EAAKzE,KAAK2K,KAAKnC,EAAKqB,IAAQ,EAClCvG,EAAMA,EAAKtD,KAAK2K,KAAKvC,EAAK2B,IAAQ,EAElCnD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKvC,EAAK4B,IAAQ,GACvBhK,KAAK2K,KAAKtC,EAAK0B,IAAQ,EACpCtF,EAAMA,EAAKzE,KAAK2K,KAAKtC,EAAK2B,IAAQ,EAClC1G,EAAMA,EAAKtD,KAAK2K,KAAK1C,EAAKiC,IAAQ,EAElCtD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK1C,EAAKkC,IAAQ,GACvBnK,KAAK2K,KAAKzC,EAAKgC,IAAQ,EACpCzF,EAAMA,EAAKzE,KAAK2K,KAAKzC,EAAKiC,IAAQ,EAClC7G,EAAMA,EAAKtD,KAAK2K,KAAK7C,EAAKuC,IAAQ,EAElCzD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK7C,EAAKwC,IAAQ,GACvBtK,KAAK2K,KAAK5C,EAAKsC,IAAQ,EACpC5F,EAAMA,EAAKzE,KAAK2K,KAAK5C,EAAKuC,IAAQ,EAKlC,IAAIkB,IAASxU,GAJbsM,EAAMA,EAAKtD,KAAK2K,KAAKhD,EAAK6C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKhD,EAAK8C,IAAQ,GACvBzK,KAAK2K,KAAK/C,EAAK4C,IAAQ,KAEW,IAAO,EACtDxT,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAK/C,EAAK6C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM4E,KAAQ,IAAO,EACjDA,IAAO,SAEPlI,EAAKtD,KAAK2K,KAAKjC,EAAKkB,IAEpBhD,GADAA,EAAM5G,KAAK2K,KAAKjC,EAAKmB,KACR7J,KAAK2K,KAAKhC,EAAKiB,IAAQ,EACpCnF,EAAKzE,KAAK2K,KAAKhC,EAAKkB,IACpBvG,EAAMA,EAAKtD,KAAK2K,KAAKpC,EAAKwB,IAAQ,EAElCnD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKpC,EAAKyB,IAAQ,GACvBhK,KAAK2K,KAAKnC,EAAKuB,IAAQ,EACpCtF,EAAMA,EAAKzE,KAAK2K,KAAKnC,EAAKwB,IAAQ,EAClC1G,EAAMA,EAAKtD,KAAK2K,KAAKvC,EAAK8B,IAAQ,EAElCtD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKvC,EAAK+B,IAAQ,GACvBnK,KAAK2K,KAAKtC,EAAK6B,IAAQ,EACpCzF,EAAMA,EAAKzE,KAAK2K,KAAKtC,EAAK8B,IAAQ,EAClC7G,EAAMA,EAAKtD,KAAK2K,KAAK1C,EAAKoC,IAAQ,EAElCzD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK1C,EAAKqC,IAAQ,GACvBtK,KAAK2K,KAAKzC,EAAKmC,IAAQ,EACpC5F,EAAMA,EAAKzE,KAAK2K,KAAKzC,EAAKoC,IAAQ,EAKlC,IAAImB,IAASzU,GAJbsM,EAAMA,EAAKtD,KAAK2K,KAAK7C,EAAK0C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK7C,EAAK2C,IAAQ,GACvBzK,KAAK2K,KAAK5C,EAAKyC,IAAQ,KAEW,IAAO,EACtDxT,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAK5C,EAAK0C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM6E,KAAQ,IAAO,EACjDA,IAAO,SAEPnI,EAAKtD,KAAK2K,KAAKjC,EAAKqB,IAEpBnD,GADAA,EAAM5G,KAAK2K,KAAKjC,EAAKsB,KACRhK,KAAK2K,KAAKhC,EAAKoB,IAAQ,EACpCtF,EAAKzE,KAAK2K,KAAKhC,EAAKqB,IACpB1G,EAAMA,EAAKtD,KAAK2K,KAAKpC,EAAK2B,IAAQ,EAElCtD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKpC,EAAK4B,IAAQ,GACvBnK,KAAK2K,KAAKnC,EAAK0B,IAAQ,EACpCzF,EAAMA,EAAKzE,KAAK2K,KAAKnC,EAAK2B,IAAQ,EAClC7G,EAAMA,EAAKtD,KAAK2K,KAAKvC,EAAKiC,IAAQ,EAElCzD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKvC,EAAKkC,IAAQ,GACvBtK,KAAK2K,KAAKtC,EAAKgC,IAAQ,EACpC5F,EAAMA,EAAKzE,KAAK2K,KAAKtC,EAAKiC,IAAQ,EAKlC,IAAIoB,IAAS1U,GAJbsM,EAAMA,EAAKtD,KAAK2K,KAAK1C,EAAKuC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM5G,KAAK2K,KAAK1C,EAAKwC,IAAQ,GACvBzK,KAAK2K,KAAKzC,EAAKsC,IAAQ,KAEW,IAAO,EACtDxT,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAKzC,EAAKuC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM8E,KAAQ,IAAO,EACjDA,IAAO,SAEPpI,EAAKtD,KAAK2K,KAAKjC,EAAKwB,IAEpBtD,GADAA,EAAM5G,KAAK2K,KAAKjC,EAAKyB,KACRnK,KAAK2K,KAAKhC,EAAKuB,IAAQ,EACpCzF,EAAKzE,KAAK2K,KAAKhC,EAAKwB,IACpB7G,EAAMA,EAAKtD,KAAK2K,KAAKpC,EAAK8B,IAAQ,EAElCzD,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKpC,EAAK+B,IAAQ,GACvBtK,KAAK2K,KAAKnC,EAAK6B,IAAQ,EACpC5F,EAAMA,EAAKzE,KAAK2K,KAAKnC,EAAK8B,IAAQ,EAKlC,IAAIqB,IAAS3U,GAJbsM,EAAMA,EAAKtD,KAAK2K,KAAKvC,EAAKoC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKvC,EAAKqC,IAAQ,GACvBzK,KAAK2K,KAAKtC,EAAKmC,IAAQ,KAEW,IAAO,EACtDxT,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAKtC,EAAKoC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM+E,KAAQ,IAAO,EACjDA,IAAO,SAEPrI,EAAKtD,KAAK2K,KAAKjC,EAAK2B,IAEpBzD,GADAA,EAAM5G,KAAK2K,KAAKjC,EAAK4B,KACRtK,KAAK2K,KAAKhC,EAAK0B,IAAQ,EACpC5F,EAAKzE,KAAK2K,KAAKhC,EAAK2B,IAKpB,IAAIsB,IAAS5U,GAJbsM,EAAMA,EAAKtD,KAAK2K,KAAKpC,EAAKiC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM5G,KAAK2K,KAAKpC,EAAKkC,IAAQ,GACvBzK,KAAK2K,KAAKnC,EAAKgC,IAAQ,KAEW,IAAO,EACtDxT,IAFAyN,EAAMA,EAAKzE,KAAK2K,KAAKnC,EAAKiC,IAAQ,IAErB7D,IAAQ,IAAO,IAAMgF,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAAS7U,GAJbsM,EAAKtD,KAAK2K,KAAKjC,EAAK8B,KAIG,KAAa,MAFpC5D,GADAA,EAAM5G,KAAK2K,KAAKjC,EAAK+B,KACRzK,KAAK2K,KAAKhC,EAAK6B,IAAQ,KAEW,IAAO,EA0BtD,OAzBAxT,IAFAyN,EAAKzE,KAAK2K,KAAKhC,EAAK8B,MAEP7D,IAAQ,IAAO,IAAMiF,KAAQ,IAAO,EACjDA,IAAO,SACPhF,EAAE,GAAK6D,GACP7D,EAAE,GAAK+D,GACP/D,EAAE,GAAKgE,GACPhE,EAAE,GAAKiE,GACPjE,EAAE,GAAKkE,GACPlE,EAAE,GAAKmE,GACPnE,EAAE,GAAKoE,GACPpE,EAAE,GAAKqE,GACPrE,EAAE,GAAKsE,GACPtE,EAAE,GAAKuE,GACPvE,EAAE,IAAMwE,GACRxE,EAAE,IAAMyE,GACRzE,EAAE,IAAM0E,GACR1E,EAAE,IAAM2E,GACR3E,EAAE,IAAM4E,GACR5E,EAAE,IAAM6E,GACR7E,EAAE,IAAM8E,GACR9E,EAAE,IAAM+E,GACR/E,EAAE,IAAMgF,GACE,IAAN7U,IACF6P,EAAE,IAAM7P,EACRwL,EAAIrN,UAECqN,CACT,EAOA,SAASsJ,EAAUzI,EAAMhD,EAAKmC,GAC5BA,EAAI5D,SAAWyB,EAAIzB,SAAWyE,EAAKzE,SACnC4D,EAAIrN,OAASkO,EAAKlO,OAASkL,EAAIlL,OAI/B,IAFA,IAAIsN,EAAQ,EACRsJ,EAAU,EACLxI,EAAI,EAAGA,EAAIf,EAAIrN,OAAS,EAAGoO,IAAK,CAGvC,IAAIC,EAASuI,EACbA,EAAU,EAGV,IAFA,IAAItI,EAAgB,SAARhB,EACRiB,EAAO1D,KAAKC,IAAIsD,EAAGlD,EAAIlL,OAAS,GAC3BuF,EAAIsF,KAAKM,IAAI,EAAGiD,EAAIF,EAAKlO,OAAS,GAAIuF,GAAKgJ,EAAMhJ,IAAK,CAC7D,IAAItF,EAAImO,EAAI7I,EAGRb,GAFoB,EAAhBwJ,EAAKxE,MAAMzJ,KACI,EAAfiL,EAAIxB,MAAMnE,IAGd4I,EAAS,SAAJzJ,EAGT4J,EAAa,UADbH,EAAMA,EAAKG,EAAS,GAIpBsI,IAFAvI,GAHAA,EAAUA,GAAW3J,EAAI,SAAa,GAAM,IAGxByJ,IAAO,IAAO,KAEZ,GACtBE,GAAU,QACZ,CACAhB,EAAI3D,MAAM0E,GAAKE,EACfhB,EAAQe,EACRA,EAASuI,CACX,CAOA,OANc,IAAVtJ,EACFD,EAAI3D,MAAM0E,GAAKd,EAEfD,EAAIrN,SAGCqN,EAAIpB,QACb,CAEA,SAAS4K,EAAY3I,EAAMhD,EAAKmC,GAI9B,OAAOsJ,EAASzI,EAAMhD,EAAKmC,EAC7B,CAqBA,SAASyJ,EAAMC,EAAGC,GAChBpT,KAAKmT,EAAIA,EACTnT,KAAKoT,EAAIA,CACX,CA1EKnM,KAAK2K,OACRhE,EAAcvD,GAmDhB7E,EAAGzI,UAAUsW,MAAQ,SAAgB/L,EAAKmC,GACxC,IACIzC,EAAMhH,KAAK5D,OAASkL,EAAIlL,OAW5B,OAVoB,KAAhB4D,KAAK5D,QAAgC,KAAfkL,EAAIlL,OACtBwR,EAAY5N,KAAMsH,EAAKmC,GACpBzC,EAAM,GACTqD,EAAWrK,KAAMsH,EAAKmC,GACnBzC,EAAM,KACT+L,EAAS/S,KAAMsH,EAAKmC,GAEpBwJ,EAAWjT,KAAMsH,EAAKmC,EAIhC,EAUAyJ,EAAKnW,UAAUuW,QAAU,SAAkBC,GAGzC,IAFA,IAAI1S,EAAI,IAAI/D,MAAMyW,GACdC,EAAIhO,EAAGzI,UAAUwO,WAAWgI,GAAK,EAC5BlX,EAAI,EAAGA,EAAIkX,EAAGlX,IACrBwE,EAAExE,GAAK2D,KAAKyT,OAAOpX,EAAGmX,EAAGD,GAG3B,OAAO1S,CACT,EAGAqS,EAAKnW,UAAU0W,OAAS,SAAiBN,EAAGK,EAAGD,GAC7C,GAAU,IAANJ,GAAWA,IAAMI,EAAI,EAAG,OAAOJ,EAGnC,IADA,IAAIO,EAAK,EACArX,EAAI,EAAGA,EAAImX,EAAGnX,IACrBqX,IAAW,EAAJP,IAAWK,EAAInX,EAAI,EAC1B8W,IAAM,EAGR,OAAOO,CACT,EAIAR,EAAKnW,UAAU4W,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMT,GACpE,IAAK,IAAIlX,EAAI,EAAGA,EAAIkX,EAAGlX,IACrB0X,EAAK1X,GAAKwX,EAAID,EAAIvX,IAClB2X,EAAK3X,GAAKyX,EAAIF,EAAIvX,GAEtB,EAEA6W,EAAKnW,UAAUkX,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMT,EAAGK,GACtE5T,KAAK2T,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMT,GAExC,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAAGW,IAAM,EAM3B,IALA,IAAIV,EAAIU,GAAK,EAETC,EAAQlN,KAAKmN,IAAI,EAAInN,KAAKoN,GAAKb,GAC/Bc,EAAQrN,KAAKsN,IAAI,EAAItN,KAAKoN,GAAKb,GAE1BgB,EAAI,EAAGA,EAAIjB,EAAGiB,GAAKhB,EAI1B,IAHA,IAAIiB,EAASN,EACTO,EAASJ,EAEJ3S,EAAI,EAAGA,EAAIuS,EAAGvS,IAAK,CAC1B,IAAIgT,EAAKZ,EAAKS,EAAI7S,GACdiT,EAAKZ,EAAKQ,EAAI7S,GAEdkT,EAAKd,EAAKS,EAAI7S,EAAIuS,GAClBY,EAAKd,EAAKQ,EAAI7S,EAAIuS,GAElBa,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELhB,EAAKS,EAAI7S,GAAKgT,EAAKE,EACnBb,EAAKQ,EAAI7S,GAAKiT,EAAKE,EAEnBf,EAAKS,EAAI7S,EAAIuS,GAAKS,EAAKE,EACvBb,EAAKQ,EAAI7S,EAAIuS,GAAKU,EAAKE,EAGnBnT,IAAM6R,IACRuB,EAAKZ,EAAQM,EAASH,EAAQI,EAE9BA,EAASP,EAAQO,EAASJ,EAAQG,EAClCA,EAASM,EAEb,CAGN,EAEA7B,EAAKnW,UAAUiY,YAAc,SAAsBC,EAAGC,GACpD,IAAI3B,EAAqB,EAAjBtM,KAAKM,IAAI2N,EAAGD,GAChBE,EAAU,EAAJ5B,EACNlX,EAAI,EACR,IAAKkX,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/BlX,IAGF,OAAO,GAAKA,EAAI,EAAI8Y,CACtB,EAEAjC,EAAKnW,UAAUqY,UAAY,SAAoBvB,EAAKC,EAAKP,GACvD,KAAIA,GAAK,GAET,IAAK,IAAIlX,EAAI,EAAGA,EAAIkX,EAAI,EAAGlX,IAAK,CAC9B,IAAIwE,EAAIgT,EAAIxX,GAEZwX,EAAIxX,GAAKwX,EAAIN,EAAIlX,EAAI,GACrBwX,EAAIN,EAAIlX,EAAI,GAAKwE,EAEjBA,EAAIiT,EAAIzX,GAERyX,EAAIzX,IAAMyX,EAAIP,EAAIlX,EAAI,GACtByX,EAAIP,EAAIlX,EAAI,IAAMwE,CACpB,CACF,EAEAqS,EAAKnW,UAAUsY,aAAe,SAAuBC,EAAI/B,GAEvD,IADA,IAAI7J,EAAQ,EACHrN,EAAI,EAAGA,EAAIkX,EAAI,EAAGlX,IAAK,CAC9B,IAAI8L,EAAoC,KAAhClB,KAAKsO,MAAMD,EAAG,EAAIjZ,EAAI,GAAKkX,GACjCtM,KAAKsO,MAAMD,EAAG,EAAIjZ,GAAKkX,GACvB7J,EAEF4L,EAAGjZ,GAAS,SAAJ8L,EAGNuB,EADEvB,EAAI,SACE,EAEAA,EAAI,SAAY,CAE5B,CAEA,OAAOmN,CACT,EAEApC,EAAKnW,UAAUyY,WAAa,SAAqBF,EAAItO,EAAK6M,EAAKN,GAE7D,IADA,IAAI7J,EAAQ,EACHrN,EAAI,EAAGA,EAAI2K,EAAK3K,IACvBqN,GAAyB,EAAR4L,EAAGjZ,GAEpBwX,EAAI,EAAIxX,GAAa,KAARqN,EAAgBA,KAAkB,GAC/CmK,EAAI,EAAIxX,EAAI,GAAa,KAARqN,EAAgBA,KAAkB,GAIrD,IAAKrN,EAAI,EAAI2K,EAAK3K,EAAIkX,IAAKlX,EACzBwX,EAAIxX,GAAK,EAGX0I,EAAiB,IAAV2E,GACP3E,EAA6B,MAAb,KAAR2E,GACV,EAEAwJ,EAAKnW,UAAU0Y,KAAO,SAAelC,GAEnC,IADA,IAAImC,EAAK,IAAI5Y,MAAMyW,GACVlX,EAAI,EAAGA,EAAIkX,EAAGlX,IACrBqZ,EAAGrZ,GAAK,EAGV,OAAOqZ,CACT,EAEAxC,EAAKnW,UAAU4Y,KAAO,SAAexC,EAAGC,EAAG3J,GACzC,IAAI8J,EAAI,EAAIvT,KAAKgV,YAAY7B,EAAE/W,OAAQgX,EAAEhX,QAErCwX,EAAM5T,KAAKsT,QAAQC,GAEnBqC,EAAI5V,KAAKyV,KAAKlC,GAEdM,EAAM,IAAI/W,MAAMyW,GAChBsC,EAAO,IAAI/Y,MAAMyW,GACjBuC,EAAO,IAAIhZ,MAAMyW,GAEjBwC,EAAO,IAAIjZ,MAAMyW,GACjByC,EAAQ,IAAIlZ,MAAMyW,GAClB0C,EAAQ,IAAInZ,MAAMyW,GAElB2C,EAAOzM,EAAI3D,MACfoQ,EAAK9Z,OAASmX,EAEdvT,KAAKwV,WAAWrC,EAAErN,MAAOqN,EAAE/W,OAAQyX,EAAKN,GACxCvT,KAAKwV,WAAWpC,EAAEtN,MAAOsN,EAAEhX,OAAQ2Z,EAAMxC,GAEzCvT,KAAKiU,UAAUJ,EAAK+B,EAAGC,EAAMC,EAAMvC,EAAGK,GACtC5T,KAAKiU,UAAU8B,EAAMH,EAAGI,EAAOC,EAAO1C,EAAGK,GAEzC,IAAK,IAAIvX,EAAI,EAAGA,EAAIkX,EAAGlX,IAAK,CAC1B,IAAI0Y,EAAKc,EAAKxZ,GAAK2Z,EAAM3Z,GAAKyZ,EAAKzZ,GAAK4Z,EAAM5Z,GAC9CyZ,EAAKzZ,GAAKwZ,EAAKxZ,GAAK4Z,EAAM5Z,GAAKyZ,EAAKzZ,GAAK2Z,EAAM3Z,GAC/CwZ,EAAKxZ,GAAK0Y,CACZ,CASA,OAPA/U,KAAKoV,UAAUS,EAAMC,EAAMvC,GAC3BvT,KAAKiU,UAAU4B,EAAMC,EAAMI,EAAMN,EAAGrC,EAAGK,GACvC5T,KAAKoV,UAAUc,EAAMN,EAAGrC,GACxBvT,KAAKqV,aAAaa,EAAM3C,GAExB9J,EAAI5D,SAAWsN,EAAEtN,SAAWuN,EAAEvN,SAC9B4D,EAAIrN,OAAS+W,EAAE/W,OAASgX,EAAEhX,OACnBqN,EAAIpB,QACb,EAGA7C,EAAGzI,UAAU+J,IAAM,SAAcQ,GAC/B,IAAImC,EAAM,IAAIjE,EAAG,MAEjB,OADAiE,EAAI3D,MAAQ,IAAIhJ,MAAMkD,KAAK5D,OAASkL,EAAIlL,QACjC4D,KAAKqT,MAAM/L,EAAKmC,EACzB,EAGAjE,EAAGzI,UAAUoZ,KAAO,SAAe7O,GACjC,IAAImC,EAAM,IAAIjE,EAAG,MAEjB,OADAiE,EAAI3D,MAAQ,IAAIhJ,MAAMkD,KAAK5D,OAASkL,EAAIlL,QACjC6W,EAAWjT,KAAMsH,EAAKmC,EAC/B,EAGAjE,EAAGzI,UAAU6U,KAAO,SAAetK,GACjC,OAAOtH,KAAK+I,QAAQsK,MAAM/L,EAAKtH,KACjC,EAEAwF,EAAGzI,UAAU4L,MAAQ,SAAgBrB,GACnC,IAAI8O,EAAW9O,EAAM,EACjB8O,IAAU9O,GAAOA,GAErBvC,EAAsB,kBAARuC,GACdvC,EAAOuC,EAAM,UAIb,IADA,IAAIoC,EAAQ,EACHrN,EAAI,EAAGA,EAAI2D,KAAK5D,OAAQC,IAAK,CACpC,IAAI8L,GAAqB,EAAhBnI,KAAK8F,MAAMzJ,IAAUiL,EAC1BiD,GAAU,SAAJpC,IAA0B,SAARuB,GAC5BA,IAAU,GACVA,GAAUvB,EAAI,SAAa,EAE3BuB,GAASa,IAAO,GAChBvK,KAAK8F,MAAMzJ,GAAU,SAALkO,CAClB,CAOA,OALc,IAAVb,IACF1J,KAAK8F,MAAMzJ,GAAKqN,EAChB1J,KAAK5D,UAGAga,EAAWpW,KAAKoM,OAASpM,IAClC,EAEAwF,EAAGzI,UAAUsZ,KAAO,SAAe/O,GACjC,OAAOtH,KAAK+I,QAAQJ,MAAMrB,EAC5B,EAGA9B,EAAGzI,UAAUuZ,IAAM,WACjB,OAAOtW,KAAK8G,IAAI9G,KAClB,EAGAwF,EAAGzI,UAAUwZ,KAAO,WAClB,OAAOvW,KAAK4R,KAAK5R,KAAK+I,QACxB,EAGAvD,EAAGzI,UAAU8L,IAAM,SAAcvB,GAC/B,IAAIa,EA7xCN,SAAqBb,GAGnB,IAFA,IAAIa,EAAI,IAAIrL,MAAMwK,EAAImE,aAEb6B,EAAM,EAAGA,EAAMnF,EAAE/L,OAAQkR,IAAO,CACvC,IAAIlF,EAAOkF,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjBnF,EAAEmF,GAAQhG,EAAIxB,MAAMsC,KAASmF,EAAQ,CACvC,CAEA,OAAOpF,CACT,CAkxCUqO,CAAWlP,GACnB,GAAiB,IAAba,EAAE/L,OAAc,OAAO,IAAIoJ,EAAG,GAIlC,IADA,IAAIuF,EAAM/K,KACD3D,EAAI,EAAGA,EAAI8L,EAAE/L,QACP,IAAT+L,EAAE9L,GADsBA,IAAK0O,EAAMA,EAAIuL,OAI7C,KAAMja,EAAI8L,EAAE/L,OACV,IAAK,IAAIqa,EAAI1L,EAAIuL,MAAOja,EAAI8L,EAAE/L,OAAQC,IAAKoa,EAAIA,EAAEH,MAClC,IAATnO,EAAE9L,KAEN0O,EAAMA,EAAIjE,IAAI2P,IAIlB,OAAO1L,CACT,EAGAvF,EAAGzI,UAAU2Z,OAAS,SAAiBC,GACrC5R,EAAuB,kBAAT4R,GAAqBA,GAAQ,GAC3C,IAGIta,EAHAyE,EAAI6V,EAAO,GACXzC,GAAKyC,EAAO7V,GAAK,GACjB8V,EAAa,WAAe,GAAK9V,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAI4I,EAAQ,EAEZ,IAAKrN,EAAI,EAAGA,EAAI2D,KAAK5D,OAAQC,IAAK,CAChC,IAAIwa,EAAW7W,KAAK8F,MAAMzJ,GAAKua,EAC3B3Y,GAAsB,EAAhB+B,KAAK8F,MAAMzJ,IAAUwa,GAAa/V,EAC5Cd,KAAK8F,MAAMzJ,GAAK4B,EAAIyL,EACpBA,EAAQmN,IAAc,GAAK/V,CAC7B,CAEI4I,IACF1J,KAAK8F,MAAMzJ,GAAKqN,EAChB1J,KAAK5D,SAET,CAEA,GAAU,IAAN8X,EAAS,CACX,IAAK7X,EAAI2D,KAAK5D,OAAS,EAAGC,GAAK,EAAGA,IAChC2D,KAAK8F,MAAMzJ,EAAI6X,GAAKlU,KAAK8F,MAAMzJ,GAGjC,IAAKA,EAAI,EAAGA,EAAI6X,EAAG7X,IACjB2D,KAAK8F,MAAMzJ,GAAK,EAGlB2D,KAAK5D,QAAU8X,CACjB,CAEA,OAAOlU,KAAKqI,QACd,EAEA7C,EAAGzI,UAAU+Z,MAAQ,SAAgBH,GAGnC,OADA5R,EAAyB,IAAlB/E,KAAK6F,UACL7F,KAAK0W,OAAOC,EACrB,EAKAnR,EAAGzI,UAAUga,OAAS,SAAiBJ,EAAMK,EAAMC,GAEjD,IAAIC,EADJnS,EAAuB,kBAAT4R,GAAqBA,GAAQ,GAGzCO,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAIlW,EAAI6V,EAAO,GACXzC,EAAIjN,KAAKC,KAAKyP,EAAO7V,GAAK,GAAId,KAAK5D,QACnC+a,EAAO,SAAc,WAAcrW,GAAMA,EACzCsW,EAAcH,EAMlB,GAJAC,GAAKhD,EACLgD,EAAIjQ,KAAKM,IAAI,EAAG2P,GAGZE,EAAa,CACf,IAAK,IAAI/a,EAAI,EAAGA,EAAI6X,EAAG7X,IACrB+a,EAAYtR,MAAMzJ,GAAK2D,KAAK8F,MAAMzJ,GAEpC+a,EAAYhb,OAAS8X,CACvB,CAEA,GAAU,IAANA,QAEG,GAAIlU,KAAK5D,OAAS8X,EAEvB,IADAlU,KAAK5D,QAAU8X,EACV7X,EAAI,EAAGA,EAAI2D,KAAK5D,OAAQC,IAC3B2D,KAAK8F,MAAMzJ,GAAK2D,KAAK8F,MAAMzJ,EAAI6X,QAGjClU,KAAK8F,MAAM,GAAK,EAChB9F,KAAK5D,OAAS,EAGhB,IAAIsN,EAAQ,EACZ,IAAKrN,EAAI2D,KAAK5D,OAAS,EAAGC,GAAK,IAAgB,IAAVqN,GAAerN,GAAK6a,GAAI7a,IAAK,CAChE,IAAIqM,EAAuB,EAAhB1I,KAAK8F,MAAMzJ,GACtB2D,KAAK8F,MAAMzJ,GAAMqN,GAAU,GAAK5I,EAAO4H,IAAS5H,EAChD4I,EAAQhB,EAAOyO,CACjB,CAYA,OATIC,GAAyB,IAAV1N,IACjB0N,EAAYtR,MAAMsR,EAAYhb,UAAYsN,GAGxB,IAAhB1J,KAAK5D,SACP4D,KAAK8F,MAAM,GAAK,EAChB9F,KAAK5D,OAAS,GAGT4D,KAAKqI,QACd,EAEA7C,EAAGzI,UAAUsa,MAAQ,SAAgBV,EAAMK,EAAMC,GAG/C,OADAlS,EAAyB,IAAlB/E,KAAK6F,UACL7F,KAAK+W,OAAOJ,EAAMK,EAAMC,EACjC,EAGAzR,EAAGzI,UAAUua,KAAO,SAAeX,GACjC,OAAO3W,KAAK+I,QAAQ+N,MAAMH,EAC5B,EAEAnR,EAAGzI,UAAUwa,MAAQ,SAAgBZ,GACnC,OAAO3W,KAAK+I,QAAQ2N,OAAOC,EAC7B,EAGAnR,EAAGzI,UAAUya,KAAO,SAAeb,GACjC,OAAO3W,KAAK+I,QAAQsO,MAAMV,EAC5B,EAEAnR,EAAGzI,UAAU0a,MAAQ,SAAgBd,GACnC,OAAO3W,KAAK+I,QAAQgO,OAAOJ,EAC7B,EAGAnR,EAAGzI,UAAUmP,MAAQ,SAAgBoB,GACnCvI,EAAsB,kBAARuI,GAAoBA,GAAO,GACzC,IAAIxM,EAAIwM,EAAM,GACV4G,GAAK5G,EAAMxM,GAAK,GAChB2V,EAAI,GAAK3V,EAGb,QAAId,KAAK5D,QAAU8X,OAGXlU,KAAK8F,MAAMoO,GAELuC,EAChB,EAGAjR,EAAGzI,UAAU2a,OAAS,SAAiBf,GACrC5R,EAAuB,kBAAT4R,GAAqBA,GAAQ,GAC3C,IAAI7V,EAAI6V,EAAO,GACXzC,GAAKyC,EAAO7V,GAAK,GAIrB,GAFAiE,EAAyB,IAAlB/E,KAAK6F,SAAgB,2CAExB7F,KAAK5D,QAAU8X,EACjB,OAAOlU,KAQT,GALU,IAANc,GACFoT,IAEFlU,KAAK5D,OAAS6K,KAAKC,IAAIgN,EAAGlU,KAAK5D,QAErB,IAAN0E,EAAS,CACX,IAAIqW,EAAO,SAAc,WAAcrW,GAAMA,EAC7Cd,KAAK8F,MAAM9F,KAAK5D,OAAS,IAAM+a,CACjC,CAEA,OAAOnX,KAAKqI,QACd,EAGA7C,EAAGzI,UAAU4a,MAAQ,SAAgBhB,GACnC,OAAO3W,KAAK+I,QAAQ2O,OAAOf,EAC7B,EAGAnR,EAAGzI,UAAUiP,MAAQ,SAAgB1E,GAGnC,OAFAvC,EAAsB,kBAARuC,GACdvC,EAAOuC,EAAM,UACTA,EAAM,EAAUtH,KAAK4X,OAAOtQ,GAGV,IAAlBtH,KAAK6F,SACa,IAAhB7F,KAAK5D,SAAiC,EAAhB4D,KAAK8F,MAAM,KAAWwB,GAC9CtH,KAAK8F,MAAM,GAAKwB,GAAuB,EAAhBtH,KAAK8F,MAAM,IAClC9F,KAAK6F,SAAW,EACT7F,OAGTA,KAAK6F,SAAW,EAChB7F,KAAK4X,MAAMtQ,GACXtH,KAAK6F,SAAW,EACT7F,MAIFA,KAAK4I,OAAOtB,EACrB,EAEA9B,EAAGzI,UAAU6L,OAAS,SAAiBtB,GACrCtH,KAAK8F,MAAM,IAAMwB,EAGjB,IAAK,IAAIjL,EAAI,EAAGA,EAAI2D,KAAK5D,QAAU4D,KAAK8F,MAAMzJ,IAAM,SAAWA,IAC7D2D,KAAK8F,MAAMzJ,IAAM,SACbA,IAAM2D,KAAK5D,OAAS,EACtB4D,KAAK8F,MAAMzJ,EAAI,GAAK,EAEpB2D,KAAK8F,MAAMzJ,EAAI,KAKnB,OAFA2D,KAAK5D,OAAS6K,KAAKM,IAAIvH,KAAK5D,OAAQC,EAAI,GAEjC2D,IACT,EAGAwF,EAAGzI,UAAU6a,MAAQ,SAAgBtQ,GAGnC,GAFAvC,EAAsB,kBAARuC,GACdvC,EAAOuC,EAAM,UACTA,EAAM,EAAG,OAAOtH,KAAKgM,OAAO1E,GAEhC,GAAsB,IAAlBtH,KAAK6F,SAIP,OAHA7F,KAAK6F,SAAW,EAChB7F,KAAKgM,MAAM1E,GACXtH,KAAK6F,SAAW,EACT7F,KAKT,GAFAA,KAAK8F,MAAM,IAAMwB,EAEG,IAAhBtH,KAAK5D,QAAgB4D,KAAK8F,MAAM,GAAK,EACvC9F,KAAK8F,MAAM,IAAM9F,KAAK8F,MAAM,GAC5B9F,KAAK6F,SAAW,OAGhB,IAAK,IAAIxJ,EAAI,EAAGA,EAAI2D,KAAK5D,QAAU4D,KAAK8F,MAAMzJ,GAAK,EAAGA,IACpD2D,KAAK8F,MAAMzJ,IAAM,SACjB2D,KAAK8F,MAAMzJ,EAAI,IAAM,EAIzB,OAAO2D,KAAKqI,QACd,EAEA7C,EAAGzI,UAAU8a,KAAO,SAAevQ,GACjC,OAAOtH,KAAK+I,QAAQiD,MAAM1E,EAC5B,EAEA9B,EAAGzI,UAAU+a,KAAO,SAAexQ,GACjC,OAAOtH,KAAK+I,QAAQ6O,MAAMtQ,EAC5B,EAEA9B,EAAGzI,UAAUgb,KAAO,WAGlB,OAFA/X,KAAK6F,SAAW,EAET7F,IACT,EAEAwF,EAAGzI,UAAU+O,IAAM,WACjB,OAAO9L,KAAK+I,QAAQgP,MACtB,EAEAvS,EAAGzI,UAAUib,aAAe,SAAuB1Q,EAAKR,EAAKsE,GAC3D,IACI/O,EAIA8L,EALAnB,EAAMM,EAAIlL,OAASgP,EAGvBpL,KAAKgJ,QAAQhC,GAGb,IAAI0C,EAAQ,EACZ,IAAKrN,EAAI,EAAGA,EAAIiL,EAAIlL,OAAQC,IAAK,CAC/B8L,GAA6B,EAAxBnI,KAAK8F,MAAMzJ,EAAI+O,IAAc1B,EAClC,IAAIjC,GAAwB,EAAfH,EAAIxB,MAAMzJ,IAAUyK,EAEjC4C,IADAvB,GAAa,SAARV,IACS,KAAQA,EAAQ,SAAa,GAC3CzH,KAAK8F,MAAMzJ,EAAI+O,GAAa,SAAJjD,CAC1B,CACA,KAAO9L,EAAI2D,KAAK5D,OAASgP,EAAO/O,IAE9BqN,GADAvB,GAA6B,EAAxBnI,KAAK8F,MAAMzJ,EAAI+O,IAAc1B,IACrB,GACb1J,KAAK8F,MAAMzJ,EAAI+O,GAAa,SAAJjD,EAG1B,GAAc,IAAVuB,EAAa,OAAO1J,KAAKqI,SAK7B,IAFAtD,GAAkB,IAAX2E,GACPA,EAAQ,EACHrN,EAAI,EAAGA,EAAI2D,KAAK5D,OAAQC,IAE3BqN,GADAvB,IAAsB,EAAhBnI,KAAK8F,MAAMzJ,IAAUqN,IACd,GACb1J,KAAK8F,MAAMzJ,GAAS,SAAJ8L,EAIlB,OAFAnI,KAAK6F,SAAW,EAET7F,KAAKqI,QACd,EAEA7C,EAAGzI,UAAUkb,SAAW,SAAmB3Q,EAAK4Q,GAC9C,IAAI9M,GAAQpL,KAAK5D,OAASkL,EAAIlL,QAE1B6E,EAAIjB,KAAK+I,QACThC,EAAIO,EAGJ6Q,EAA8B,EAAxBpR,EAAEjB,MAAMiB,EAAE3K,OAAS,GAGf,KADdgP,EAAQ,GADMpL,KAAKuL,WAAW4M,MAG5BpR,EAAIA,EAAEwQ,MAAMnM,GACZnK,EAAEyV,OAAOtL,GACT+M,EAA8B,EAAxBpR,EAAEjB,MAAMiB,EAAE3K,OAAS,IAI3B,IACIqa,EADAvB,EAAIjU,EAAE7E,OAAS2K,EAAE3K,OAGrB,GAAa,QAAT8b,EAAgB,EAClBzB,EAAI,IAAIjR,EAAG,OACTpJ,OAAS8Y,EAAI,EACfuB,EAAE3Q,MAAQ,IAAIhJ,MAAM2Z,EAAEra,QACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIoa,EAAEra,OAAQC,IAC5Boa,EAAE3Q,MAAMzJ,GAAK,CAEjB,CAEA,IAAI+b,EAAOnX,EAAE8H,QAAQiP,aAAajR,EAAG,EAAGmO,GAClB,IAAlBkD,EAAKvS,WACP5E,EAAImX,EACA3B,IACFA,EAAE3Q,MAAMoP,GAAK,IAIjB,IAAK,IAAIvT,EAAIuT,EAAI,EAAGvT,GAAK,EAAGA,IAAK,CAC/B,IAAI0W,EAAmC,UAAL,EAAxBpX,EAAE6E,MAAMiB,EAAE3K,OAASuF,KACE,EAA5BV,EAAE6E,MAAMiB,EAAE3K,OAASuF,EAAI,IAO1B,IAHA0W,EAAKpR,KAAKC,IAAKmR,EAAKF,EAAO,EAAG,UAE9BlX,EAAE+W,aAAajR,EAAGsR,EAAI1W,GACA,IAAfV,EAAE4E,UACPwS,IACApX,EAAE4E,SAAW,EACb5E,EAAE+W,aAAajR,EAAG,EAAGpF,GAChBV,EAAE4I,WACL5I,EAAE4E,UAAY,GAGd4Q,IACFA,EAAE3Q,MAAMnE,GAAK0W,EAEjB,CAWA,OAVI5B,GACFA,EAAEpO,SAEJpH,EAAEoH,SAGW,QAAT6P,GAA4B,IAAV9M,GACpBnK,EAAE8V,OAAO3L,GAGJ,CACLkN,IAAK7B,GAAK,KACVhO,IAAKxH,EAET,EAMAuE,EAAGzI,UAAUwb,OAAS,SAAiBjR,EAAK4Q,EAAMM,GAGhD,OAFAzT,GAAQuC,EAAIuC,UAER7J,KAAK6J,SACA,CACLyO,IAAK,IAAI9S,EAAG,GACZiD,IAAK,IAAIjD,EAAG,IAKM,IAAlBxF,KAAK6F,UAAmC,IAAjByB,EAAIzB,UAC7BkF,EAAM/K,KAAKsM,MAAMiM,OAAOjR,EAAK4Q,GAEhB,QAATA,IACFI,EAAMvN,EAAIuN,IAAIhM,OAGH,QAAT4L,IACFzP,EAAMsC,EAAItC,IAAI6D,MACVkM,GAA6B,IAAjB/P,EAAI5C,UAClB4C,EAAI+E,KAAKlG,IAIN,CACLgR,IAAKA,EACL7P,IAAKA,IAIa,IAAlBzI,KAAK6F,UAAmC,IAAjByB,EAAIzB,UAC7BkF,EAAM/K,KAAKuY,OAAOjR,EAAIgF,MAAO4L,GAEhB,QAATA,IACFI,EAAMvN,EAAIuN,IAAIhM,OAGT,CACLgM,IAAKA,EACL7P,IAAKsC,EAAItC,MAI0B,KAAlCzI,KAAK6F,SAAWyB,EAAIzB,WACvBkF,EAAM/K,KAAKsM,MAAMiM,OAAOjR,EAAIgF,MAAO4L,GAEtB,QAATA,IACFzP,EAAMsC,EAAItC,IAAI6D,MACVkM,GAA6B,IAAjB/P,EAAI5C,UAClB4C,EAAIgF,KAAKnG,IAIN,CACLgR,IAAKvN,EAAIuN,IACT7P,IAAKA,IAOLnB,EAAIlL,OAAS4D,KAAK5D,QAAU4D,KAAK0H,IAAIJ,GAAO,EACvC,CACLgR,IAAK,IAAI9S,EAAG,GACZiD,IAAKzI,MAKU,IAAfsH,EAAIlL,OACO,QAAT8b,EACK,CACLI,IAAKtY,KAAKyY,KAAKnR,EAAIxB,MAAM,IACzB2C,IAAK,MAII,QAATyP,EACK,CACLI,IAAK,KACL7P,IAAK,IAAIjD,EAAGxF,KAAK8J,MAAMxC,EAAIxB,MAAM,MAI9B,CACLwS,IAAKtY,KAAKyY,KAAKnR,EAAIxB,MAAM,IACzB2C,IAAK,IAAIjD,EAAGxF,KAAK8J,MAAMxC,EAAIxB,MAAM,MAI9B9F,KAAKiY,SAAS3Q,EAAK4Q,GAlF1B,IAAII,EAAK7P,EAAKsC,CAmFhB,EAGAvF,EAAGzI,UAAUub,IAAM,SAAchR,GAC/B,OAAOtH,KAAKuY,OAAOjR,EAAK,OAAO,GAAOgR,GACxC,EAGA9S,EAAGzI,UAAU0L,IAAM,SAAcnB,GAC/B,OAAOtH,KAAKuY,OAAOjR,EAAK,OAAO,GAAOmB,GACxC,EAEAjD,EAAGzI,UAAU2b,KAAO,SAAepR,GACjC,OAAOtH,KAAKuY,OAAOjR,EAAK,OAAO,GAAMmB,GACvC,EAGAjD,EAAGzI,UAAU4b,SAAW,SAAmBrR,GACzC,IAAIsR,EAAK5Y,KAAKuY,OAAOjR,GAGrB,GAAIsR,EAAGnQ,IAAIoB,SAAU,OAAO+O,EAAGN,IAE/B,IAAI7P,EAA0B,IAApBmQ,EAAGN,IAAIzS,SAAiB+S,EAAGnQ,IAAIgF,KAAKnG,GAAOsR,EAAGnQ,IAEpDoQ,EAAOvR,EAAImQ,MAAM,GACjBqB,EAAKxR,EAAIyR,MAAM,GACfrR,EAAMe,EAAIf,IAAImR,GAGlB,OAAInR,EAAM,GAAa,IAAPoR,GAAoB,IAARpR,EAAmBkR,EAAGN,IAGvB,IAApBM,EAAGN,IAAIzS,SAAiB+S,EAAGN,IAAIV,MAAM,GAAKgB,EAAGN,IAAItM,MAAM,EAChE,EAEAxG,EAAGzI,UAAU+M,MAAQ,SAAgBxC,GACnC,IAAI8O,EAAW9O,EAAM,EACjB8O,IAAU9O,GAAOA,GAErBvC,EAAOuC,GAAO,UAId,IAHA,IAAIkN,GAAK,GAAK,IAAMlN,EAEhB0R,EAAM,EACD3c,EAAI2D,KAAK5D,OAAS,EAAGC,GAAK,EAAGA,IACpC2c,GAAOxE,EAAIwE,GAAuB,EAAhBhZ,KAAK8F,MAAMzJ,KAAWiL,EAG1C,OAAO8O,GAAY4C,EAAMA,CAC3B,EAGAxT,EAAGzI,UAAUkc,KAAO,SAAe3R,GACjC,OAAOtH,KAAK8J,MAAMxC,EACpB,EAGA9B,EAAGzI,UAAUgN,MAAQ,SAAgBzC,GACnC,IAAI8O,EAAW9O,EAAM,EACjB8O,IAAU9O,GAAOA,GAErBvC,EAAOuC,GAAO,UAGd,IADA,IAAIoC,EAAQ,EACHrN,EAAI2D,KAAK5D,OAAS,EAAGC,GAAK,EAAGA,IAAK,CACzC,IAAI8L,GAAqB,EAAhBnI,KAAK8F,MAAMzJ,IAAkB,SAARqN,EAC9B1J,KAAK8F,MAAMzJ,GAAM8L,EAAIb,EAAO,EAC5BoC,EAAQvB,EAAIb,CACd,CAGA,OADAtH,KAAKqI,SACE+N,EAAWpW,KAAKoM,OAASpM,IAClC,EAEAwF,EAAGzI,UAAU0b,KAAO,SAAenR,GACjC,OAAOtH,KAAK+I,QAAQgB,MAAMzC,EAC5B,EAEA9B,EAAGzI,UAAUmc,KAAO,SAAe1E,GACjCzP,EAAsB,IAAfyP,EAAE3O,UACTd,GAAQyP,EAAE3K,UAEV,IAAIsJ,EAAInT,KACJoT,EAAIoB,EAAEzL,QAGRoK,EADiB,IAAfA,EAAEtN,SACAsN,EAAEuF,KAAKlE,GAEPrB,EAAEpK,QAaR,IATA,IAAIoQ,EAAI,IAAI3T,EAAG,GACX4T,EAAI,IAAI5T,EAAG,GAGX6T,EAAI,IAAI7T,EAAG,GACX8T,EAAI,IAAI9T,EAAG,GAEX+T,EAAI,EAEDpG,EAAEqG,UAAYpG,EAAEoG,UACrBrG,EAAE4D,OAAO,GACT3D,EAAE2D,OAAO,KACPwC,EAMJ,IAHA,IAAIE,EAAKrG,EAAErK,QACP2Q,EAAKvG,EAAEpK,SAEHoK,EAAEtJ,UAAU,CAClB,IAAK,IAAIxN,EAAI,EAAGsd,EAAK,EAAyB,KAArBxG,EAAErN,MAAM,GAAK6T,IAAatd,EAAI,KAAMA,EAAGsd,IAAO,GACvE,GAAItd,EAAI,EAEN,IADA8W,EAAE4D,OAAO1a,GACFA,KAAM,IACP8c,EAAES,SAAWR,EAAEQ,WACjBT,EAAE3L,KAAKiM,GACPL,EAAE3L,KAAKiM,IAGTP,EAAEpC,OAAO,GACTqC,EAAErC,OAAO,GAIb,IAAK,IAAIpV,EAAI,EAAGkY,EAAK,EAAyB,KAArBzG,EAAEtN,MAAM,GAAK+T,IAAalY,EAAI,KAAMA,EAAGkY,IAAO,GACvE,GAAIlY,EAAI,EAEN,IADAyR,EAAE2D,OAAOpV,GACFA,KAAM,IACP0X,EAAEO,SAAWN,EAAEM,WACjBP,EAAE7L,KAAKiM,GACPH,EAAE7L,KAAKiM,IAGTL,EAAEtC,OAAO,GACTuC,EAAEvC,OAAO,GAIT5D,EAAEzL,IAAI0L,IAAM,GACdD,EAAE1F,KAAK2F,GACP+F,EAAE1L,KAAK4L,GACPD,EAAE3L,KAAK6L,KAEPlG,EAAE3F,KAAK0F,GACPkG,EAAE5L,KAAK0L,GACPG,EAAE7L,KAAK2L,GAEX,CAEA,MAAO,CACLnY,EAAGoY,EACHtS,EAAGuS,EACHQ,IAAK1G,EAAEsD,OAAO6C,GAElB,EAKA/T,EAAGzI,UAAUgd,OAAS,SAAiBvF,GACrCzP,EAAsB,IAAfyP,EAAE3O,UACTd,GAAQyP,EAAE3K,UAEV,IAAI5I,EAAIjB,KACJ+G,EAAIyN,EAAEzL,QAGR9H,EADiB,IAAfA,EAAE4E,SACA5E,EAAEyX,KAAKlE,GAEPvT,EAAE8H,QAQR,IALA,IAuCIgC,EAvCAiP,EAAK,IAAIxU,EAAG,GACZyU,EAAK,IAAIzU,EAAG,GAEZ0U,EAAQnT,EAAEgC,QAEP9H,EAAEkZ,KAAK,GAAK,GAAKpT,EAAEoT,KAAK,GAAK,GAAG,CACrC,IAAK,IAAI9d,EAAI,EAAGsd,EAAK,EAAyB,KAArB1Y,EAAE6E,MAAM,GAAK6T,IAAatd,EAAI,KAAMA,EAAGsd,IAAO,GACvE,GAAItd,EAAI,EAEN,IADA4E,EAAE8V,OAAO1a,GACFA,KAAM,GACP2d,EAAGJ,SACLI,EAAGxM,KAAK0M,GAGVF,EAAGjD,OAAO,GAId,IAAK,IAAIpV,EAAI,EAAGkY,EAAK,EAAyB,KAArB9S,EAAEjB,MAAM,GAAK+T,IAAalY,EAAI,KAAMA,EAAGkY,IAAO,GACvE,GAAIlY,EAAI,EAEN,IADAoF,EAAEgQ,OAAOpV,GACFA,KAAM,GACPsY,EAAGL,SACLK,EAAGzM,KAAK0M,GAGVD,EAAGlD,OAAO,GAIV9V,EAAEyG,IAAIX,IAAM,GACd9F,EAAEwM,KAAK1G,GACPiT,EAAGvM,KAAKwM,KAERlT,EAAE0G,KAAKxM,GACPgZ,EAAGxM,KAAKuM,GAEZ,CAaA,OATEjP,EADgB,IAAd9J,EAAEkZ,KAAK,GACHH,EAEAC,GAGAE,KAAK,GAAK,GAChBpP,EAAIyC,KAAKgH,GAGJzJ,CACT,EAEAvF,EAAGzI,UAAU+c,IAAM,SAAcxS,GAC/B,GAAItH,KAAK6J,SAAU,OAAOvC,EAAIwE,MAC9B,GAAIxE,EAAIuC,SAAU,OAAO7J,KAAK8L,MAE9B,IAAI7K,EAAIjB,KAAK+I,QACThC,EAAIO,EAAIyB,QACZ9H,EAAE4E,SAAW,EACbkB,EAAElB,SAAW,EAGb,IAAK,IAAIuF,EAAQ,EAAGnK,EAAEuY,UAAYzS,EAAEyS,SAAUpO,IAC5CnK,EAAE8V,OAAO,GACThQ,EAAEgQ,OAAO,GAGX,OAAG,CACD,KAAO9V,EAAEuY,UACPvY,EAAE8V,OAAO,GAEX,KAAOhQ,EAAEyS,UACPzS,EAAEgQ,OAAO,GAGX,IAAIjW,EAAIG,EAAEyG,IAAIX,GACd,GAAIjG,EAAI,EAAG,CAET,IAAID,EAAII,EACRA,EAAI8F,EACJA,EAAIlG,CACN,MAAO,GAAU,IAANC,GAAyB,IAAdiG,EAAEoT,KAAK,GAC3B,MAGFlZ,EAAEwM,KAAK1G,EACT,CAEA,OAAOA,EAAE2P,OAAOtL,EAClB,EAGA5F,EAAGzI,UAAUqd,KAAO,SAAe9S,GACjC,OAAOtH,KAAKkZ,KAAK5R,GAAKrG,EAAEyX,KAAKpR,EAC/B,EAEA9B,EAAGzI,UAAUyc,OAAS,WACpB,OAA+B,KAAP,EAAhBxZ,KAAK8F,MAAM,GACrB,EAEAN,EAAGzI,UAAU6c,MAAQ,WACnB,OAA+B,KAAP,EAAhB5Z,KAAK8F,MAAM,GACrB,EAGAN,EAAGzI,UAAUgc,MAAQ,SAAgBzR,GACnC,OAAOtH,KAAK8F,MAAM,GAAKwB,CACzB,EAGA9B,EAAGzI,UAAUsd,MAAQ,SAAgB/M,GACnCvI,EAAsB,kBAARuI,GACd,IAAIxM,EAAIwM,EAAM,GACV4G,GAAK5G,EAAMxM,GAAK,GAChB2V,EAAI,GAAK3V,EAGb,GAAId,KAAK5D,QAAU8X,EAGjB,OAFAlU,KAAKgJ,QAAQkL,EAAI,GACjBlU,KAAK8F,MAAMoO,IAAMuC,EACVzW,KAKT,IADA,IAAI0J,EAAQ+M,EACHpa,EAAI6X,EAAa,IAAVxK,GAAerN,EAAI2D,KAAK5D,OAAQC,IAAK,CACnD,IAAI8L,EAAoB,EAAhBnI,KAAK8F,MAAMzJ,GAEnBqN,GADAvB,GAAKuB,KACS,GACdvB,GAAK,SACLnI,KAAK8F,MAAMzJ,GAAK8L,CAClB,CAKA,OAJc,IAAVuB,IACF1J,KAAK8F,MAAMzJ,GAAKqN,EAChB1J,KAAK5D,UAEA4D,IACT,EAEAwF,EAAGzI,UAAU8M,OAAS,WACpB,OAAuB,IAAhB7J,KAAK5D,QAAkC,IAAlB4D,KAAK8F,MAAM,EACzC,EAEAN,EAAGzI,UAAUod,KAAO,SAAe7S,GACjC,IAOIyD,EAPAlF,EAAWyB,EAAM,EAErB,GAAsB,IAAlBtH,KAAK6F,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlB7F,KAAK6F,UAAkBA,EAAU,OAAO,EAK5C,GAHA7F,KAAKqI,SAGDrI,KAAK5D,OAAS,EAChB2O,EAAM,MACD,CACDlF,IACFyB,GAAOA,GAGTvC,EAAOuC,GAAO,SAAW,qBAEzB,IAAIa,EAAoB,EAAhBnI,KAAK8F,MAAM,GACnBiF,EAAM5C,IAAMb,EAAM,EAAIa,EAAIb,GAAO,EAAI,CACvC,CACA,OAAsB,IAAlBtH,KAAK6F,SAA8B,GAANkF,EAC1BA,CACT,EAMAvF,EAAGzI,UAAU2K,IAAM,SAAcJ,GAC/B,GAAsB,IAAlBtH,KAAK6F,UAAmC,IAAjByB,EAAIzB,SAAgB,OAAQ,EACvD,GAAsB,IAAlB7F,KAAK6F,UAAmC,IAAjByB,EAAIzB,SAAgB,OAAO,EAEtD,IAAIkF,EAAM/K,KAAKsa,KAAKhT,GACpB,OAAsB,IAAlBtH,KAAK6F,SAA8B,GAANkF,EAC1BA,CACT,EAGAvF,EAAGzI,UAAUud,KAAO,SAAehT,GAEjC,GAAItH,KAAK5D,OAASkL,EAAIlL,OAAQ,OAAO,EACrC,GAAI4D,KAAK5D,OAASkL,EAAIlL,OAAQ,OAAQ,EAGtC,IADA,IAAI2O,EAAM,EACD1O,EAAI2D,KAAK5D,OAAS,EAAGC,GAAK,EAAGA,IAAK,CACzC,IAAI4E,EAAoB,EAAhBjB,KAAK8F,MAAMzJ,GACf0K,EAAmB,EAAfO,EAAIxB,MAAMzJ,GAElB,GAAI4E,IAAM8F,EAAV,CACI9F,EAAI8F,EACNgE,GAAO,EACE9J,EAAI8F,IACbgE,EAAM,GAER,KANqB,CAOvB,CACA,OAAOA,CACT,EAEAvF,EAAGzI,UAAUwd,IAAM,SAAcjT,GAC/B,OAA0B,IAAnBtH,KAAKma,KAAK7S,EACnB,EAEA9B,EAAGzI,UAAUyd,GAAK,SAAalT,GAC7B,OAAyB,IAAlBtH,KAAK0H,IAAIJ,EAClB,EAEA9B,EAAGzI,UAAU0d,KAAO,SAAenT,GACjC,OAAOtH,KAAKma,KAAK7S,IAAQ,CAC3B,EAEA9B,EAAGzI,UAAU2d,IAAM,SAAcpT,GAC/B,OAAOtH,KAAK0H,IAAIJ,IAAQ,CAC1B,EAEA9B,EAAGzI,UAAU4d,IAAM,SAAcrT,GAC/B,OAA2B,IAApBtH,KAAKma,KAAK7S,EACnB,EAEA9B,EAAGzI,UAAU6d,GAAK,SAAatT,GAC7B,OAA0B,IAAnBtH,KAAK0H,IAAIJ,EAClB,EAEA9B,EAAGzI,UAAU8d,KAAO,SAAevT,GACjC,OAAOtH,KAAKma,KAAK7S,IAAQ,CAC3B,EAEA9B,EAAGzI,UAAU+d,IAAM,SAAcxT,GAC/B,OAAOtH,KAAK0H,IAAIJ,IAAQ,CAC1B,EAEA9B,EAAGzI,UAAUge,IAAM,SAAczT,GAC/B,OAA0B,IAAnBtH,KAAKma,KAAK7S,EACnB,EAEA9B,EAAGzI,UAAUie,GAAK,SAAa1T,GAC7B,OAAyB,IAAlBtH,KAAK0H,IAAIJ,EAClB,EAMA9B,EAAGO,IAAM,SAAcuB,GACrB,OAAO,IAAI2T,EAAI3T,EACjB,EAEA9B,EAAGzI,UAAUme,MAAQ,SAAgBC,GAGnC,OAFApW,GAAQ/E,KAAK+F,IAAK,yCAClBhB,EAAyB,IAAlB/E,KAAK6F,SAAgB,iCACrBsV,EAAIC,UAAUpb,MAAMqb,UAAUF,EACvC,EAEA3V,EAAGzI,UAAUue,QAAU,WAErB,OADAvW,EAAO/E,KAAK+F,IAAK,wDACV/F,KAAK+F,IAAIwV,YAAYvb,KAC9B,EAEAwF,EAAGzI,UAAUse,UAAY,SAAoBF,GAE3C,OADAnb,KAAK+F,IAAMoV,EACJnb,IACT,EAEAwF,EAAGzI,UAAUye,SAAW,SAAmBL,GAEzC,OADApW,GAAQ/E,KAAK+F,IAAK,yCACX/F,KAAKqb,UAAUF,EACxB,EAEA3V,EAAGzI,UAAU0e,OAAS,SAAiBnU,GAErC,OADAvC,EAAO/E,KAAK+F,IAAK,sCACV/F,KAAK+F,IAAI2H,IAAI1N,KAAMsH,EAC5B,EAEA9B,EAAGzI,UAAU2e,QAAU,SAAkBpU,GAEvC,OADAvC,EAAO/E,KAAK+F,IAAK,uCACV/F,KAAK+F,IAAIyH,KAAKxN,KAAMsH,EAC7B,EAEA9B,EAAGzI,UAAU4e,OAAS,SAAiBrU,GAErC,OADAvC,EAAO/E,KAAK+F,IAAK,sCACV/F,KAAK+F,IAAI4H,IAAI3N,KAAMsH,EAC5B,EAEA9B,EAAGzI,UAAU6e,QAAU,SAAkBtU,GAEvC,OADAvC,EAAO/E,KAAK+F,IAAK,uCACV/F,KAAK+F,IAAI0H,KAAKzN,KAAMsH,EAC7B,EAEA9B,EAAGzI,UAAU8e,OAAS,SAAiBvU,GAErC,OADAvC,EAAO/E,KAAK+F,IAAK,sCACV/F,KAAK+F,IAAI+V,IAAI9b,KAAMsH,EAC5B,EAEA9B,EAAGzI,UAAUgf,OAAS,SAAiBzU,GAGrC,OAFAvC,EAAO/E,KAAK+F,IAAK,sCACjB/F,KAAK+F,IAAIiW,SAAShc,KAAMsH,GACjBtH,KAAK+F,IAAIe,IAAI9G,KAAMsH,EAC5B,EAEA9B,EAAGzI,UAAUkf,QAAU,SAAkB3U,GAGvC,OAFAvC,EAAO/E,KAAK+F,IAAK,sCACjB/F,KAAK+F,IAAIiW,SAAShc,KAAMsH,GACjBtH,KAAK+F,IAAI6L,KAAK5R,KAAMsH,EAC7B,EAEA9B,EAAGzI,UAAUmf,OAAS,WAGpB,OAFAnX,EAAO/E,KAAK+F,IAAK,sCACjB/F,KAAK+F,IAAIoW,SAASnc,MACXA,KAAK+F,IAAIuQ,IAAItW,KACtB,EAEAwF,EAAGzI,UAAUqf,QAAU,WAGrB,OAFArX,EAAO/E,KAAK+F,IAAK,uCACjB/F,KAAK+F,IAAIoW,SAASnc,MACXA,KAAK+F,IAAIwQ,KAAKvW,KACvB,EAGAwF,EAAGzI,UAAUsf,QAAU,WAGrB,OAFAtX,EAAO/E,KAAK+F,IAAK,uCACjB/F,KAAK+F,IAAIoW,SAASnc,MACXA,KAAK+F,IAAIuW,KAAKtc,KACvB,EAEAwF,EAAGzI,UAAUwf,QAAU,WAGrB,OAFAxX,EAAO/E,KAAK+F,IAAK,uCACjB/F,KAAK+F,IAAIoW,SAASnc,MACXA,KAAK+F,IAAIqU,KAAKpa,KACvB,EAGAwF,EAAGzI,UAAUyf,OAAS,WAGpB,OAFAzX,EAAO/E,KAAK+F,IAAK,sCACjB/F,KAAK+F,IAAIoW,SAASnc,MACXA,KAAK+F,IAAIuG,IAAItM,KACtB,EAEAwF,EAAGzI,UAAU0f,OAAS,SAAiBnV,GAGrC,OAFAvC,EAAO/E,KAAK+F,MAAQuB,EAAIvB,IAAK,qBAC7B/F,KAAK+F,IAAIoW,SAASnc,MACXA,KAAK+F,IAAI8C,IAAI7I,KAAMsH,EAC5B,EAGA,IAAIoV,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQngB,EAAM4X,GAErBxU,KAAKpD,KAAOA,EACZoD,KAAKwU,EAAI,IAAIhP,EAAGgP,EAAG,IACnBxU,KAAKiV,EAAIjV,KAAKwU,EAAE/I,YAChBzL,KAAKwK,EAAI,IAAIhF,EAAG,GAAGkR,OAAO1W,KAAKiV,GAAGxH,KAAKzN,KAAKwU,GAE5CxU,KAAKgd,IAAMhd,KAAKid,MAClB,CAgDA,SAASC,IACPH,EAAO/f,KACLgD,KACA,OACA,0EACJ,CA8DA,SAASmd,IACPJ,EAAO/f,KACLgD,KACA,OACA,iEACJ,CAGA,SAASod,IACPL,EAAO/f,KACLgD,KACA,OACA,wDACJ,CAGA,SAASqd,IAEPN,EAAO/f,KACLgD,KACA,QACA,sEACJ,CA6CA,SAASib,EAAK/F,GACZ,GAAiB,kBAANA,EAAgB,CACzB,IAAIoI,EAAQ9X,EAAG+X,OAAOrI,GACtBlV,KAAKkV,EAAIoI,EAAM9I,EACfxU,KAAKsd,MAAQA,CACf,MACEvY,EAAOmQ,EAAEqF,IAAI,GAAI,kCACjBva,KAAKkV,EAAIA,EACTlV,KAAKsd,MAAQ,IAEjB,CAkOA,SAASE,EAAMtI,GACb+F,EAAIje,KAAKgD,KAAMkV,GAEflV,KAAKoL,MAAQpL,KAAKkV,EAAEzJ,YAChBzL,KAAKoL,MAAQ,KAAO,IACtBpL,KAAKoL,OAAS,GAAMpL,KAAKoL,MAAQ,IAGnCpL,KAAKc,EAAI,IAAI0E,EAAG,GAAGkR,OAAO1W,KAAKoL,OAC/BpL,KAAK8Y,GAAK9Y,KAAKyd,KAAKzd,KAAKc,EAAEwV,OAC3BtW,KAAK0d,KAAO1d,KAAKc,EAAEiZ,OAAO/Z,KAAKkV,GAE/BlV,KAAK2d,KAAO3d,KAAK0d,KAAK5W,IAAI9G,KAAKc,GAAG8W,MAAM,GAAGU,IAAItY,KAAKkV,GACpDlV,KAAK2d,KAAO3d,KAAK2d,KAAKjF,KAAK1Y,KAAKc,GAChCd,KAAK2d,KAAO3d,KAAKc,EAAE6M,IAAI3N,KAAK2d,KAC9B,CA/aAZ,EAAOhgB,UAAUkgB,KAAO,WACtB,IAAID,EAAM,IAAIxX,EAAG,MAEjB,OADAwX,EAAIlX,MAAQ,IAAIhJ,MAAMmK,KAAKiB,KAAKlI,KAAKiV,EAAI,KAClC+H,CACT,EAEAD,EAAOhgB,UAAU6gB,QAAU,SAAkBtW,GAG3C,IACIuW,EADA/c,EAAIwG,EAGR,GACEtH,KAAK8d,MAAMhd,EAAGd,KAAKgd,KAGnBa,GADA/c,GADAA,EAAId,KAAK+d,MAAMjd,IACT0M,KAAKxN,KAAKgd,MACPvR,kBACFoS,EAAO7d,KAAKiV,GAErB,IAAIvN,EAAMmW,EAAO7d,KAAKiV,GAAK,EAAInU,EAAEwZ,KAAKta,KAAKwU,GAgB3C,OAfY,IAAR9M,GACF5G,EAAEgF,MAAM,GAAK,EACbhF,EAAE1E,OAAS,GACFsL,EAAM,EACf5G,EAAE2M,KAAKzN,KAAKwU,QAEIwJ,IAAZld,EAAE+C,MAEJ/C,EAAE+C,QAGF/C,EAAEuH,SAICvH,CACT,EAEAic,EAAOhgB,UAAU+gB,MAAQ,SAAgBG,EAAOxU,GAC9CwU,EAAMlH,OAAO/W,KAAKiV,EAAG,EAAGxL,EAC1B,EAEAsT,EAAOhgB,UAAUghB,MAAQ,SAAgBzW,GACvC,OAAOA,EAAIsK,KAAK5R,KAAKwK,EACvB,EAQAtF,EAASgY,EAAMH,GAEfG,EAAKngB,UAAU+gB,MAAQ,SAAgBG,EAAOC,GAK5C,IAHA,IAAI/G,EAAO,QAEPgH,EAASlX,KAAKC,IAAI+W,EAAM7hB,OAAQ,GAC3BC,EAAI,EAAGA,EAAI8hB,EAAQ9hB,IAC1B6hB,EAAOpY,MAAMzJ,GAAK4hB,EAAMnY,MAAMzJ,GAIhC,GAFA6hB,EAAO9hB,OAAS+hB,EAEZF,EAAM7hB,QAAU,EAGlB,OAFA6hB,EAAMnY,MAAM,GAAK,OACjBmY,EAAM7hB,OAAS,GAKjB,IAAIgiB,EAAOH,EAAMnY,MAAM,GAGvB,IAFAoY,EAAOpY,MAAMoY,EAAO9hB,UAAYgiB,EAAOjH,EAElC9a,EAAI,GAAIA,EAAI4hB,EAAM7hB,OAAQC,IAAK,CAClC,IAAIgiB,EAAwB,EAAjBJ,EAAMnY,MAAMzJ,GACvB4hB,EAAMnY,MAAMzJ,EAAI,KAAQgiB,EAAOlH,IAAS,EAAMiH,IAAS,GACvDA,EAAOC,CACT,CACAD,KAAU,GACVH,EAAMnY,MAAMzJ,EAAI,IAAM+hB,EACT,IAATA,GAAcH,EAAM7hB,OAAS,GAC/B6hB,EAAM7hB,QAAU,GAEhB6hB,EAAM7hB,QAAU,CAEpB,EAEA8gB,EAAKngB,UAAUghB,MAAQ,SAAgBzW,GAErCA,EAAIxB,MAAMwB,EAAIlL,QAAU,EACxBkL,EAAIxB,MAAMwB,EAAIlL,OAAS,GAAK,EAC5BkL,EAAIlL,QAAU,EAId,IADA,IAAImO,EAAK,EACAlO,EAAI,EAAGA,EAAIiL,EAAIlL,OAAQC,IAAK,CACnC,IAAI8L,EAAmB,EAAfb,EAAIxB,MAAMzJ,GAClBkO,GAAU,IAAJpC,EACNb,EAAIxB,MAAMzJ,GAAU,SAALkO,EACfA,EAAS,GAAJpC,GAAaoC,EAAK,SAAa,EACtC,CASA,OANkC,IAA9BjD,EAAIxB,MAAMwB,EAAIlL,OAAS,KACzBkL,EAAIlL,SAC8B,IAA9BkL,EAAIxB,MAAMwB,EAAIlL,OAAS,IACzBkL,EAAIlL,UAGDkL,CACT,EAQApC,EAASiY,EAAMJ,GAQf7X,EAASkY,EAAML,GASf7X,EAASmY,EAAQN,GAEjBM,EAAOtgB,UAAUghB,MAAQ,SAAgBzW,GAGvC,IADA,IAAIoC,EAAQ,EACHrN,EAAI,EAAGA,EAAIiL,EAAIlL,OAAQC,IAAK,CACnC,IAAIqP,EAA0B,IAAL,EAAfpE,EAAIxB,MAAMzJ,IAAiBqN,EACjCa,EAAU,SAALmB,EACTA,KAAQ,GAERpE,EAAIxB,MAAMzJ,GAAKkO,EACfb,EAAQgC,CACV,CAIA,OAHc,IAAVhC,IACFpC,EAAIxB,MAAMwB,EAAIlL,UAAYsN,GAErBpC,CACT,EAGA9B,EAAG+X,OAAS,SAAgB3gB,GAE1B,GAAI8f,EAAO9f,GAAO,OAAO8f,EAAO9f,GAEhC,IAAI0gB,EACJ,GAAa,SAAT1gB,EACF0gB,EAAQ,IAAIJ,OACP,GAAa,SAATtgB,EACT0gB,EAAQ,IAAIH,OACP,GAAa,SAATvgB,EACT0gB,EAAQ,IAAIF,MACP,IAAa,WAATxgB,EAGT,MAAM,IAAIM,MAAM,iBAAmBN,GAFnC0gB,EAAQ,IAAID,CAGd,CAGA,OAFAX,EAAO9f,GAAQ0gB,EAERA,CACT,EAiBArC,EAAIle,UAAUof,SAAW,SAAmBlb,GAC1C8D,EAAsB,IAAf9D,EAAE4E,SAAgB,iCACzBd,EAAO9D,EAAE8E,IAAK,kCAChB,EAEAkV,EAAIle,UAAUif,SAAW,SAAmB/a,EAAG8F,GAC7ChC,EAAqC,KAA7B9D,EAAE4E,SAAWkB,EAAElB,UAAiB,iCACxCd,EAAO9D,EAAE8E,KAAO9E,EAAE8E,MAAQgB,EAAEhB,IAC1B,kCACJ,EAEAkV,EAAIle,UAAU0gB,KAAO,SAAexc,GAClC,OAAIjB,KAAKsd,MAActd,KAAKsd,MAAMM,QAAQ3c,GAAGoa,UAAUrb,OAEvDmH,EAAKlG,EAAGA,EAAEyX,KAAK1Y,KAAKkV,GAAGmG,UAAUrb,OAC1BiB,EACT,EAEAga,EAAIle,UAAUuP,IAAM,SAAcrL,GAChC,OAAIA,EAAE4I,SACG5I,EAAE8H,QAGJ/I,KAAKkV,EAAEvH,IAAI1M,GAAGoa,UAAUrb,KACjC,EAEAib,EAAIle,UAAU2Q,IAAM,SAAczM,EAAG8F,GACnC/G,KAAKgc,SAAS/a,EAAG8F,GAEjB,IAAIgE,EAAM9J,EAAEyM,IAAI3G,GAIhB,OAHIgE,EAAIrD,IAAI1H,KAAKkV,IAAM,GACrBnK,EAAI0C,KAAKzN,KAAKkV,GAETnK,EAAIsQ,UAAUrb,KACvB,EAEAib,EAAIle,UAAUyQ,KAAO,SAAevM,EAAG8F,GACrC/G,KAAKgc,SAAS/a,EAAG8F,GAEjB,IAAIgE,EAAM9J,EAAEuM,KAAKzG,GAIjB,OAHIgE,EAAIrD,IAAI1H,KAAKkV,IAAM,GACrBnK,EAAI0C,KAAKzN,KAAKkV,GAETnK,CACT,EAEAkQ,EAAIle,UAAU4Q,IAAM,SAAc1M,EAAG8F,GACnC/G,KAAKgc,SAAS/a,EAAG8F,GAEjB,IAAIgE,EAAM9J,EAAE0M,IAAI5G,GAIhB,OAHIgE,EAAIoP,KAAK,GAAK,GAChBpP,EAAIyC,KAAKxN,KAAKkV,GAETnK,EAAIsQ,UAAUrb,KACvB,EAEAib,EAAIle,UAAU0Q,KAAO,SAAexM,EAAG8F,GACrC/G,KAAKgc,SAAS/a,EAAG8F,GAEjB,IAAIgE,EAAM9J,EAAEwM,KAAK1G,GAIjB,OAHIgE,EAAIoP,KAAK,GAAK,GAChBpP,EAAIyC,KAAKxN,KAAKkV,GAETnK,CACT,EAEAkQ,EAAIle,UAAU+e,IAAM,SAAc7a,EAAGqG,GAEnC,OADAtH,KAAKmc,SAASlb,GACPjB,KAAKyd,KAAKxc,EAAEsW,MAAMjQ,GAC3B,EAEA2T,EAAIle,UAAU6U,KAAO,SAAe3Q,EAAG8F,GAErC,OADA/G,KAAKgc,SAAS/a,EAAG8F,GACV/G,KAAKyd,KAAKxc,EAAE2Q,KAAK7K,GAC1B,EAEAkU,EAAIle,UAAU+J,IAAM,SAAc7F,EAAG8F,GAEnC,OADA/G,KAAKgc,SAAS/a,EAAG8F,GACV/G,KAAKyd,KAAKxc,EAAE6F,IAAIC,GACzB,EAEAkU,EAAIle,UAAUwZ,KAAO,SAAetV,GAClC,OAAOjB,KAAK4R,KAAK3Q,EAAGA,EAAE8H,QACxB,EAEAkS,EAAIle,UAAUuZ,IAAM,SAAcrV,GAChC,OAAOjB,KAAK8G,IAAI7F,EAAGA,EACrB,EAEAga,EAAIle,UAAUuf,KAAO,SAAerb,GAClC,GAAIA,EAAE4I,SAAU,OAAO5I,EAAE8H,QAEzB,IAAIuV,EAAOte,KAAKkV,EAAE6D,MAAM,GAIxB,GAHAhU,EAAOuZ,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,IAAIzV,EAAM7I,KAAKkV,EAAExH,IAAI,IAAIlI,EAAG,IAAIuR,OAAO,GACvC,OAAO/W,KAAK6I,IAAI5H,EAAG4H,EACrB,CAOA,IAFA,IAAI4N,EAAIzW,KAAKkV,EAAE4C,KAAK,GAChB5D,EAAI,GACAuC,EAAE5M,UAA2B,IAAf4M,EAAEsC,MAAM,IAC5B7E,IACAuC,EAAEM,OAAO,GAEXhS,GAAQ0R,EAAE5M,UAEV,IAAI0U,EAAM,IAAI/Y,EAAG,GAAG0V,MAAMlb,MACtBwe,EAAOD,EAAI/B,SAIXiC,EAAOze,KAAKkV,EAAE4C,KAAK,GAAGf,OAAO,GAC7B2H,EAAI1e,KAAKkV,EAAEzJ,YAGf,IAFAiT,EAAI,IAAIlZ,EAAG,EAAIkZ,EAAIA,GAAGxD,MAAMlb,MAEW,IAAhCA,KAAK6I,IAAI6V,EAAGD,GAAM/W,IAAI8W,IAC3BE,EAAEhD,QAAQ8C,GAOZ,IAJA,IAAIvgB,EAAI+B,KAAK6I,IAAI6V,EAAGjI,GAChB3V,EAAId,KAAK6I,IAAI5H,EAAGwV,EAAEoB,KAAK,GAAGd,OAAO,IACjClW,EAAIb,KAAK6I,IAAI5H,EAAGwV,GAChBvB,EAAIhB,EACc,IAAfrT,EAAE6G,IAAI6W,IAAY,CAEvB,IADA,IAAIvB,EAAMnc,EACDxE,EAAI,EAAoB,IAAjB2gB,EAAItV,IAAI6W,GAAYliB,IAClC2gB,EAAMA,EAAId,SAEZnX,EAAO1I,EAAI6Y,GACX,IAAInO,EAAI/G,KAAK6I,IAAI5K,EAAG,IAAIuH,EAAG,GAAGkR,OAAOxB,EAAI7Y,EAAI,IAE7CyE,EAAIA,EAAEib,OAAOhV,GACb9I,EAAI8I,EAAEmV,SACNrb,EAAIA,EAAEkb,OAAO9d,GACbiX,EAAI7Y,CACN,CAEA,OAAOyE,CACT,EAEAma,EAAIle,UAAUqd,KAAO,SAAenZ,GAClC,IAAI0d,EAAM1d,EAAE8Y,OAAO/Z,KAAKkV,GACxB,OAAqB,IAAjByJ,EAAI9Y,UACN8Y,EAAI9Y,SAAW,EACR7F,KAAKyd,KAAKkB,GAAKnC,UAEfxc,KAAKyd,KAAKkB,EAErB,EAEA1D,EAAIle,UAAU8L,IAAM,SAAc5H,EAAGqG,GACnC,GAAIA,EAAIuC,SAAU,OAAO,IAAIrE,EAAG,GAAG0V,MAAMlb,MACzC,GAAoB,IAAhBsH,EAAI6S,KAAK,GAAU,OAAOlZ,EAAE8H,QAEhC,IACI6V,EAAM,IAAI9hB,MAAM,IACpB8hB,EAAI,GAAK,IAAIpZ,EAAG,GAAG0V,MAAMlb,MACzB4e,EAAI,GAAK3d,EACT,IAAK,IAAI5E,EAAI,EAAGA,EAAIuiB,EAAIxiB,OAAQC,IAC9BuiB,EAAIviB,GAAK2D,KAAK8G,IAAI8X,EAAIviB,EAAI,GAAI4E,GAGhC,IAAI8J,EAAM6T,EAAI,GACVC,EAAU,EACVC,EAAa,EACblY,EAAQU,EAAImE,YAAc,GAK9B,IAJc,IAAV7E,IACFA,EAAQ,IAGLvK,EAAIiL,EAAIlL,OAAS,EAAGC,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAIqM,EAAOpB,EAAIxB,MAAMzJ,GACZsF,EAAIiF,EAAQ,EAAGjF,GAAK,EAAGA,IAAK,CACnC,IAAI2L,EAAO5E,GAAQ/G,EAAK,EACpBoJ,IAAQ6T,EAAI,KACd7T,EAAM/K,KAAKsW,IAAIvL,IAGL,IAARuC,GAAyB,IAAZuR,GAKjBA,IAAY,EACZA,GAAWvR,GA9BE,MA+BbwR,GACwC,IAANziB,GAAiB,IAANsF,KAE7CoJ,EAAM/K,KAAK8G,IAAIiE,EAAK6T,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,CAYjB,CACAlY,EAAQ,EACV,CAEA,OAAOmE,CACT,EAEAkQ,EAAIle,UAAUqe,UAAY,SAAoB9T,GAC5C,IAAIxG,EAAIwG,EAAIoR,KAAK1Y,KAAKkV,GAEtB,OAAOpU,IAAMwG,EAAMxG,EAAEiI,QAAUjI,CACjC,EAEAma,EAAIle,UAAUwe,YAAc,SAAsBjU,GAChD,IAAIyD,EAAMzD,EAAIyB,QAEd,OADAgC,EAAIhF,IAAM,KACHgF,CACT,EAMAvF,EAAGuZ,KAAO,SAAezX,GACvB,OAAO,IAAIkW,EAAKlW,EAClB,EAkBApC,EAASsY,EAAMvC,GAEfuC,EAAKzgB,UAAUqe,UAAY,SAAoB9T,GAC7C,OAAOtH,KAAKyd,KAAKnW,EAAIiQ,MAAMvX,KAAKoL,OAClC,EAEAoS,EAAKzgB,UAAUwe,YAAc,SAAsBjU,GACjD,IAAIxG,EAAId,KAAKyd,KAAKnW,EAAIR,IAAI9G,KAAK0d,OAE/B,OADA5c,EAAEiF,IAAM,KACDjF,CACT,EAEA0c,EAAKzgB,UAAU6U,KAAO,SAAe3Q,EAAG8F,GACtC,GAAI9F,EAAE4I,UAAY9C,EAAE8C,SAGlB,OAFA5I,EAAE6E,MAAM,GAAK,EACb7E,EAAE7E,OAAS,EACJ6E,EAGT,IAAIJ,EAAII,EAAE2Q,KAAK7K,GACX9I,EAAI4C,EAAE8W,MAAM3X,KAAKoL,OAAOtE,IAAI9G,KAAK2d,MAAMjG,OAAO1X,KAAKoL,OAAOtE,IAAI9G,KAAKkV,GACnE8J,EAAIne,EAAE4M,KAAKxP,GAAG8Y,OAAO/W,KAAKoL,OAC1BL,EAAMiU,EAQV,OANIA,EAAEtX,IAAI1H,KAAKkV,IAAM,EACnBnK,EAAMiU,EAAEvR,KAAKzN,KAAKkV,GACT8J,EAAE7E,KAAK,GAAK,IACrBpP,EAAMiU,EAAExR,KAAKxN,KAAKkV,IAGbnK,EAAIsQ,UAAUrb,KACvB,EAEAwd,EAAKzgB,UAAU+J,IAAM,SAAc7F,EAAG8F,GACpC,GAAI9F,EAAE4I,UAAY9C,EAAE8C,SAAU,OAAO,IAAIrE,EAAG,GAAG6V,UAAUrb,MAEzD,IAAIa,EAAII,EAAE6F,IAAIC,GACV9I,EAAI4C,EAAE8W,MAAM3X,KAAKoL,OAAOtE,IAAI9G,KAAK2d,MAAMjG,OAAO1X,KAAKoL,OAAOtE,IAAI9G,KAAKkV,GACnE8J,EAAIne,EAAE4M,KAAKxP,GAAG8Y,OAAO/W,KAAKoL,OAC1BL,EAAMiU,EAOV,OANIA,EAAEtX,IAAI1H,KAAKkV,IAAM,EACnBnK,EAAMiU,EAAEvR,KAAKzN,KAAKkV,GACT8J,EAAE7E,KAAK,GAAK,IACrBpP,EAAMiU,EAAExR,KAAKxN,KAAKkV,IAGbnK,EAAIsQ,UAAUrb,KACvB,EAEAwd,EAAKzgB,UAAUqd,KAAO,SAAenZ,GAGnC,OADUjB,KAAKyd,KAAKxc,EAAE8Y,OAAO/Z,KAAKkV,GAAGpO,IAAI9G,KAAK8Y,KACnCuC,UAAUrb,KACvB,CACD,CA19GD,C,WA09G4CA,K,2LCl9GtCif,EAAa,IAAIC,OAAO,mBACxBC,EAAc,IAAID,OAAO,qBACzBE,EAAa,IAAIF,OAAO,wBAMxBjb,EAAS,IAAIC,EAAAA,GChBI,kBDmBvB,SAASmb,EAAMC,EAActjB,EAAYiB,GACrC,OAAOqiB,GACH,IAAK,UACD,OAAIriB,GAAkBsiB,EAAAA,EAAAA,IAAQvjB,EAAO,KAC9BsI,EAAAA,EAAAA,IAAStI,GACpB,IAAK,SACD,OAAOwjB,EAAAA,EAAAA,IAAYxjB,GACvB,IAAK,QACD,OAAOsI,EAAAA,EAAAA,IAAStI,GACpB,IAAK,OAED,OADAA,EAASA,EAAQ,OAAQ,OACrBiB,GAAkBsiB,EAAAA,EAAAA,IAAQvjB,EAAO,KAC9BsI,EAAAA,EAAAA,IAAStI,GAGxB,IAAIyjB,EAASH,EAAKG,MAAMN,GACxB,GAAIM,EAAO,CAEP,IAAIxW,EAAOhN,SAASwjB,EAAM,IAAM,OAUhC,OARKA,EAAM,IAAMlhB,OAAO0K,KAAUwW,EAAM,IAAQxW,EAAO,IAAM,GAAe,IAATA,GAAcA,EAAO,MACpFhF,EAAOyb,mBAAmB,sBAAuB,OAAQJ,GAGzDriB,IAAWgM,EAAO,KAEtBjN,EAAQ2jB,EAAAA,GAAAA,KAAe3jB,GAAO4P,OAAO3C,IAE9BsW,EAAAA,EAAAA,IAAQvjB,EAAOiN,EAAO,E,CAIjC,GADAwW,EAAQH,EAAKG,MAAMR,GACR,CACP,IAAMhW,EAAOhN,SAASwjB,EAAM,IAQ5B,OANIlhB,OAAO0K,KAAUwW,EAAM,IAAe,IAATxW,GAAcA,EAAO,KAClDhF,EAAOyb,mBAAmB,qBAAsB,OAAQJ,IAExDhb,EAAAA,EAAAA,IAAStI,GAAO6O,aAAe5B,GAC/BhF,EAAOyb,mBAAmB,qBAAD,OAAuBJ,GAAS,QAAStjB,GAElEiB,GAAkBqH,EAAAA,EAAAA,KAAUtI,EAhD1B,oEAgDyC4jB,UAAU,EAAG,KACrD5jB,C,CAIX,IADAyjB,EAAQH,EAAKG,MAAML,KACNtiB,MAAMG,QAAQjB,GAAQ,CAC/B,IAAM6jB,EAAWJ,EAAM,GACTxjB,SAASwjB,EAAM,IAAMlhB,OAAOvC,EAAMI,UACnCJ,EAAMI,QACf6H,EAAOyb,mBAAmB,4BAAD,OAA8BJ,GAAS,QAAStjB,GAE7E,IAAM+B,EAA4B,GAIlC,OAHA/B,EAAM8jB,SAAQ,SAAS9jB,GACnB+B,EAAOI,KAAKkhB,EAAMQ,EAAU7jB,GAAO,GACvC,KACO+jB,EAAAA,EAAAA,IAAOhiB,E,CAGlB,OAAOkG,EAAOyb,mBAAmB,eAAgB,OAAQJ,EAC7D,CAIM,SAAUU,EAAKC,EAA8BC,GAC3CD,EAAM7jB,QAAU8jB,EAAO9jB,QACvB6H,EAAOyb,mBAAmB,qDAAsD,SAAUQ,GAE9F,IAAMC,EAA2B,GAIjC,OAHAF,EAAMH,SAAQ,SAASR,EAAM/e,GACzB4f,EAAMhiB,KAAKkhB,EAAMC,EAAMY,EAAO3f,IAClC,KACO6f,EAAAA,EAAAA,KAAQL,EAAAA,EAAAA,IAAOI,GAC1B,CAEM,SAAUE,EAAUJ,EAA8BC,GACpD,OAAOI,EAAAA,EAAAA,GAAcN,EAAKC,EAAOC,GACrC,CAEM,SAAU1b,EAAOyb,EAA8BC,GACjD,OAAOK,EAAAA,EAAAA,IAAWP,EAAKC,EAAOC,GAClC,C,iCE/FA,IAJA,IAAIM,EAAW,mCAGXC,EAAe,CAAC,EACX/B,EAAI,EAAGA,EAAI8B,EAASpkB,OAAQsiB,IAAK,CACxC,IAAIvL,EAAIqN,EAASE,OAAOhC,GAExB,QAAwBV,IAApByC,EAAatN,GAAkB,MAAM,IAAIwN,UAAUxN,EAAI,iBAC3DsN,EAAatN,GAAKuL,CACpB,CAEA,SAASkC,EAAaC,GACpB,IAAI9Z,EAAI8Z,GAAO,GACf,OAAe,SAANA,IAAoB,EACR,YAAf9Z,GAAK,EAAK,GACK,YAAfA,GAAK,EAAK,GACK,YAAfA,GAAK,EAAK,GACK,aAAfA,GAAK,EAAK,GACK,YAAfA,GAAK,EAAK,EAClB,CAEA,SAAS+Z,EAAWC,GAElB,IADA,IAAIC,EAAM,EACD3kB,EAAI,EAAGA,EAAI0kB,EAAO3kB,SAAUC,EAAG,CACtC,IAAI4B,EAAI8iB,EAAO7iB,WAAW7B,GAC1B,GAAI4B,EAAI,IAAMA,EAAI,IAAK,MAAO,mBAAqB8iB,EAAS,IAE5DC,EAAMJ,EAAYI,GAAQ/iB,GAAK,CACjC,CAGA,IAFA+iB,EAAMJ,EAAYI,GAEb3kB,EAAI,EAAGA,EAAI0kB,EAAO3kB,SAAUC,EAAG,CAClC,IAAIuC,EAAImiB,EAAO7iB,WAAW7B,GAC1B2kB,EAAMJ,EAAYI,GAAY,GAAJpiB,CAC5B,CACA,OAAOoiB,CACT,CAkCA,SAASC,EAAUta,EAAKua,GAEtB,GADAA,EAAQA,GAAS,GACbva,EAAIvK,OAAS,EAAG,OAAOuK,EAAM,aACjC,GAAIA,EAAIvK,OAAS8kB,EAAO,MAAO,uBAG/B,IAAIC,EAAUxa,EAAIya,cACdC,EAAU1a,EAAI2a,cAClB,GAAI3a,IAAQwa,GAAWxa,IAAQ0a,EAAS,MAAO,qBAAuB1a,EAGtE,IAAImX,GAFJnX,EAAMwa,GAEUI,YAAY,KAC5B,IAAe,IAAXzD,EAAc,MAAO,8BAAgCnX,EACzD,GAAc,IAAVmX,EAAa,MAAO,sBAAwBnX,EAEhD,IAAIoa,EAASpa,EAAI9J,MAAM,EAAGihB,GACtB0D,EAAY7a,EAAI9J,MAAMihB,EAAQ,GAClC,GAAI0D,EAAUplB,OAAS,EAAG,MAAO,iBAEjC,IAAI4kB,EAAMF,EAAUC,GACpB,GAAmB,kBAARC,EAAkB,OAAOA,EAGpC,IADA,IAAIlb,EAAQ,GACHzJ,EAAI,EAAGA,EAAImlB,EAAUplB,SAAUC,EAAG,CACzC,IAAI4B,EAAIujB,EAAUd,OAAOrkB,GACrBuC,EAAI6hB,EAAaxiB,GACrB,QAAU+f,IAANpf,EAAiB,MAAO,qBAAuBX,EACnD+iB,EAAMJ,EAAYI,GAAOpiB,EAGrBvC,EAAI,GAAKmlB,EAAUplB,QACvB0J,EAAM3H,KAAKS,EACb,CAEA,OAAY,IAARoiB,EAAkB,wBAA0Bra,EACzC,CAAEoa,OAAQA,EAAQjb,MAAOA,EAClC,CAcA,SAAS2b,EAAS9d,EAAM+d,EAAQC,EAASje,GAMvC,IALA,IAAI1H,EAAQ,EACR2a,EAAO,EACPiL,GAAQ,GAAKD,GAAW,EAExB5jB,EAAS,GACJ1B,EAAI,EAAGA,EAAIsH,EAAKvH,SAAUC,EAIjC,IAHAL,EAASA,GAAS0lB,EAAU/d,EAAKtH,GACjCsa,GAAQ+K,EAED/K,GAAQgL,GACbhL,GAAQgL,EACR5jB,EAAOI,KAAMnC,GAAS2a,EAAQiL,GAIlC,GAAIle,EACEiT,EAAO,GACT5Y,EAAOI,KAAMnC,GAAU2lB,EAAUhL,EAASiL,OAEvC,CACL,GAAIjL,GAAQ+K,EAAQ,MAAO,iBAC3B,GAAK1lB,GAAU2lB,EAAUhL,EAASiL,EAAM,MAAO,kBACjD,CAEA,OAAO7jB,CACT,CA0BAgG,EAAOC,QAAU,CACf6d,aAjEF,WACE,IAAI9W,EAAMkW,EAASa,MAAM,KAAMC,WAC/B,GAAmB,kBAARhX,EAAkB,OAAOA,CACtC,EA+DEiX,OA7DF,SAAiBrb,GACf,IAAIoE,EAAMkW,EAASa,MAAM,KAAMC,WAC/B,GAAmB,kBAARhX,EAAkB,OAAOA,EAEpC,MAAM,IAAI7N,MAAM6N,EAClB,EAyDEkX,OAzIF,SAAiBlB,EAAQjb,EAAOob,GAE9B,GADAA,EAAQA,GAAS,GACZH,EAAO3kB,OAAS,EAAI0J,EAAM1J,OAAU8kB,EAAO,MAAM,IAAIP,UAAU,wBAKpE,IAAIK,EAAMF,EAHVC,EAASA,EAAOK,eAIhB,GAAmB,kBAARJ,EAAkB,MAAM,IAAI9jB,MAAM8jB,GAG7C,IADA,IAAIjjB,EAASgjB,EAAS,IACb1kB,EAAI,EAAGA,EAAIyJ,EAAM1J,SAAUC,EAAG,CACrC,IAAI8W,EAAIrN,EAAMzJ,GACd,GAAK8W,GAAK,IAAO,EAAG,MAAM,IAAIjW,MAAM,kBAEpC8jB,EAAMJ,EAAYI,GAAO7N,EACzBpV,GAAUyiB,EAASE,OAAOvN,EAC5B,CAEA,IAAK9W,EAAI,EAAGA,EAAI,IAAKA,EACnB2kB,EAAMJ,EAAYI,GAIpB,IAFAA,GAAO,EAEF3kB,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAEtB0B,GAAUyiB,EAASE,OADVM,GAAkB,GAAT,EAAI3kB,GAAW,GAEnC,CAEA,OAAO0B,CACT,EA4GEmkB,cA5BF,SAAwB5jB,GACtB,IAAIyM,EAAM0W,EAAQnjB,EAAO,EAAG,GAAG,GAC/B,GAAIxB,MAAMG,QAAQ8N,GAAM,OAAOA,CACjC,EA0BEoX,QAxBF,SAAkB7jB,GAChB,IAAIyM,EAAM0W,EAAQnjB,EAAO,EAAG,GAAG,GAC/B,GAAIxB,MAAMG,QAAQ8N,GAAM,OAAOA,EAE/B,MAAM,IAAI7N,MAAM6N,EAClB,EAoBEqX,gBAlBF,SAA0Btc,GACxB,IAAIiF,EAAM0W,EAAQ3b,EAAO,EAAG,GAAG,GAC/B,GAAIhJ,MAAMG,QAAQ8N,GAAM,OAAOA,CACjC,EAgBEsX,UAdF,SAAoBvc,GAClB,IAAIiF,EAAM0W,EAAQ3b,EAAO,EAAG,GAAG,GAC/B,GAAIhJ,MAAMG,QAAQ8N,GAAM,OAAOA,EAE/B,MAAM,IAAI7N,MAAM6N,EAClB,E,opNChKM9G,EAAS,IAAIC,EAAAA,GCXI,2BDsJDoe,EAAU,qGAO3B,OAP2B,wCAK5B,SAAmBtmB,GACf,SAAUA,IAASA,EAAMumB,aAC7B,KAAC,EAP2B,CAAQC,EAAAA,IA4ElBC,EAAQ,WAgF1B,6BACIxe,EAAOye,cAAc,gBAAD,0BAAaD,IACjCE,EAAAA,EAAAA,IAAe3iB,KAAM,eAAe,EACxC,CAIC,OAJA,kCA3EK,W,+IAC0B,O,UAAM4iB,EAAAA,EAAAA,IAAkB,CAChDrhB,MAAOvB,KAAK6iB,SAAS,UACrBC,SAAU9iB,KAAK+iB,cAAcC,OAAM,SAACC,GAGhC,OAAO,IACX,MACF,OAWD,OAXC,SAPM1hB,EAAK,EAALA,MAAOuhB,EAAQ,EAARA,SASXI,EAAoB,KAAMC,EAAe,KAAMC,EAAuB,KAEtE7hB,GAASA,EAAM8hB,gBAIfH,EAAoB3hB,EAAM8hB,cAC1BD,EAAuBzD,EAAAA,GAAAA,KAAe,cACtCwD,EAAe5hB,EAAM8hB,cAAcvc,IAAI,GAAG4G,IAAI0V,IACjD,kBAEM,CAAEF,kBAAAA,EAAmBC,aAAAA,EAAcC,qBAAAA,EAAsBN,SAAAA,IAAU,+C,GAoC9E,yBACA,SAAYQ,EAAsBC,GAC9B,OAAOvjB,KAAKwjB,GAAGF,EAAWC,EAC9B,GAEA,4BACA,SAAeD,EAAsBC,GACjC,OAAOvjB,KAAKoI,IAAIkb,EAAWC,EAC/B,IAAC,yBAYD,SAAkBvnB,GACd,SAAUA,IAASA,EAAMynB,YAC7B,KAAC,EAvFyB,G,sSEzNxBxf,EAAS,IAAIC,EAAAA,GCTI,yBDWjBwf,EAAwC,CAC1C,aAAc,kBAAmB,UAAW,aAAc,OAAQ,OAAQ,WAAY,WAAY,eAAgB,uBAAwB,QAAS,KAAM,OAAQ,SAG/JC,EAAgB,CAClBzf,EAAAA,GAAAA,OAAAA,mBACAA,EAAAA,GAAAA,OAAAA,cACAA,EAAAA,GAAAA,OAAAA,yBAuCkB0f,EAAM,WA8BxB,6BACI3f,EAAOye,cAAc,gBAAD,0BAAakB,IACjCjB,EAAAA,EAAAA,IAAe3iB,KAAM,aAAa,EACtC,CAsPC,OAlPD,kCAEM,SAAW6jB,G,+HAEN,OADP7jB,KAAK8jB,eAAe,cAAc,SACrB9jB,KAAK+jB,SAASC,WAAWhkB,KAAKikB,aAAcJ,GAAS,uF,GACrE,iCAEK,SAAoBA,G,+HAEf,OADP7jB,KAAK8jB,eAAe,uBAAuB,SAC9B9jB,KAAK+jB,SAASG,oBAAoBlkB,KAAKikB,aAAcJ,GAAS,uF,GAG/E,yBACM,SAAYM,G,qIAEH,OADXnkB,KAAK8jB,eAAe,eAAe,UAClBlB,EAAAA,EAAAA,IAAkB5iB,KAAKokB,iBAAiBD,IAAa,OAC/D,OADDE,EAAK,EAAH,cACKrkB,KAAK+jB,SAASO,YAAYD,GAAG,uF,GAG9C,kBACM,SAAKF,EAA6CN,G,qIAEzC,OADX7jB,KAAK8jB,eAAe,QAAQ,UACXlB,EAAAA,EAAAA,IAAkB5iB,KAAKokB,iBAAiBD,IAAa,OAC/D,OADDE,EAAK,EAAH,cACKrkB,KAAK+jB,SAAS/mB,KAAKqnB,EAAIR,GAAS,uF,GAGjD,6BACM,SAAgBM,G,uIAEP,OADXnkB,KAAK8jB,eAAe,mBAAmB,SACtB9jB,KAAKukB,oBAAoBJ,GAAY,OACrC,OADXE,EAAK,EAAH,cACerkB,KAAKwkB,gBAAgBH,GAAG,OACxC,OADDI,EAAW,EAAH,cACDzkB,KAAK+jB,SAASW,gBAAgBD,GAAS,wF,GACvD,wBAEK,W,qIAEc,OADhBzkB,KAAK8jB,eAAe,cAAc,SACZ9jB,KAAK+jB,SAASY,aAAY,OAAnC,OAAPC,EAAU,EAAH,uBACNA,EAAQC,SAAO,+C,GACzB,yBAEK,W,+HAEK,OADP7kB,KAAK8jB,eAAe,eAAe,SACtB9jB,KAAK+jB,SAAShB,cAAa,uF,GAC3C,wBAEK,W,+HAEK,OADP/iB,KAAK8jB,eAAe,cAAc,SACrB9jB,KAAK+jB,SAASe,aAAY,uF,GAC1C,yBAGK,SAAYloB,G,+HAEP,OADPoD,KAAK8jB,eAAe,eAAe,SACtB9jB,KAAK+jB,SAASgB,YAAYnoB,GAAK,uF,GAahD,8BACA,SAAiBunB,GACb,IAAK,IAAMpkB,KAAOokB,GAC+B,IAAzCT,EAAuBsB,QAAQjlB,IAC/BkE,EAAOyb,mBAAmB,4BAA8B3f,EAAK,cAAeokB,GAIpF,IAAME,GAAKY,EAAAA,EAAAA,IAAYd,GAkBvB,OAhBe,MAAXE,EAAGa,KACHb,EAAGa,KAAOllB,KAAKikB,aAIfI,EAAGa,KAAOC,QAAQC,IAAI,CAClBD,QAAQE,QAAQhB,EAAGa,MACnBllB,KAAKikB,eACNqB,MAAK,SAACvnB,GAIL,OAHIA,EAAO,GAAGqjB,gBAAkBrjB,EAAO,GAAGqjB,eACtCnd,EAAOyb,mBAAmB,wBAAyB,cAAeyE,GAE/DpmB,EAAO,EAClB,IAGGsmB,CACX,GAQA,iCACM,SAAoBF,G,kJAEqB,O,UAAMvB,EAAAA,EAAAA,IAAkB5iB,KAAKokB,iBAAiBD,IAAa,OAsBrG,GApBY,OAFPE,EAAE,QAEDkB,KACHlB,EAAGkB,GAAKJ,QAAQE,QAAQhB,EAAGkB,IAAID,MAAK,SAAOC,GAAE,OAAIC,EAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,+EACnC,MAAND,EAAU,yCAAW,MAAI,OACb,OADa,SACPvlB,KAAK+kB,YAAYQ,GAAG,OAGzC,OAFc,OADTE,EAAU,EAAH,OAETxhB,EAAOyb,mBAAmB,qCAAsC,QAAS6F,GAC5E,kBACME,GAAO,+CACjB,IAGDpB,EAAGkB,GAAGvC,OAAM,SAACC,GAAa,KAIxByC,EAAiC,MAAnBrB,EAAGlB,cAAmD,MAA3BkB,EAAGjB,qBAC/B,MAAfiB,EAAGvB,UAAiC,IAAZuB,EAAG/E,OAAcoG,EAErB,IAAZrB,EAAG/E,MAA0B,IAAZ+E,EAAG/E,OAAeoG,GAC3CzhB,EAAOyb,mBAAmB,4EAA6E,cAAeyE,GAFtHlgB,EAAOyb,mBAAmB,+CAAgD,cAAeyE,GAK5E,IAAZE,EAAG/E,MAAyB,MAAX+E,EAAG/E,MAAqC,MAAnB+E,EAAGlB,cAAmD,MAA3BkB,EAAGjB,qBAA6B,iBAElGiB,EAAG/E,KAAO,EAAE,2BAEO,IAAZ+E,EAAG/E,MAA0B,IAAZ+E,EAAG/E,KAAU,iBAIlB,MAAf+E,EAAGvB,WAAoBuB,EAAGvB,SAAW9iB,KAAK+iB,eAAgB,wBAK9C,OAL8C,UAKxC/iB,KAAK8kB,aAAY,QAAjCa,EAAU,EAAH,KAEE,MAAXtB,EAAG/E,KAGyB,MAAxBqG,EAAQxC,cAAwD,MAAhCwC,EAAQvC,sBAIxCiB,EAAG/E,KAAO,EAES,MAAf+E,EAAGvB,UAGGA,EAAWuB,EAAGvB,gBACbuB,EAAGvB,SACVuB,EAAGlB,aAAeL,EAClBuB,EAAGjB,qBAAuBN,IAIH,MAAnBuB,EAAGlB,eAAwBkB,EAAGlB,aAAewC,EAAQxC,cAC1B,MAA3BkB,EAAGjB,uBAAgCiB,EAAGjB,qBAAuBuC,EAAQvC,wBAGlD,MAApBuC,EAAQ7C,UAIX4C,GACAzhB,EAAOY,WAAW,oCAAqCX,EAAAA,GAAAA,OAAAA,sBAAqC,CACxFY,UAAW,wBAKA,MAAfuf,EAAGvB,WAAoBuB,EAAGvB,SAAW6C,EAAQ7C,UAGjDuB,EAAG/E,KAAO,GAIVrb,EAAOY,WAAW,oCAAqCX,EAAAA,GAAAA,OAAAA,sBAAqC,CACxFY,UAAW,sBAIA,IAAZuf,EAAG/E,OAIa,MAAnB+E,EAAGlB,eAAwBkB,EAAGlB,aAAewC,EAAQxC,cAC1B,MAA3BkB,EAAGjB,uBAAgCiB,EAAGjB,qBAAuBuC,EAAQvC,uBAC5E,QAgCE,OA7BS,MAAZiB,EAAGuB,QAAiBvB,EAAGuB,MAAQ5lB,KAAKkkB,oBAAoB,YAEzC,MAAfG,EAAGwB,WACHxB,EAAGwB,SAAW7lB,KAAKskB,YAAYD,GAAIrB,OAAM,SAACC,GACtC,GAAIU,EAAcqB,QAAQ/B,EAAM6C,OAAS,EACrC,MAAM7C,EAGV,OAAOhf,EAAOY,WAAW,4EAA6EX,EAAAA,GAAAA,OAAAA,wBAAuC,CACzI+e,MAAOA,EACPoB,GAAIA,GAEZ,KAGc,MAAdA,EAAGQ,QACHR,EAAGQ,QAAU7kB,KAAK+lB,aAElB1B,EAAGQ,QAAUM,QAAQC,IAAI,CACrBD,QAAQE,QAAQhB,EAAGQ,SACnB7kB,KAAK+lB,eACNT,MAAK,SAACU,GAIL,OAHmB,IAAfA,EAAQ,IAAYA,EAAQ,KAAOA,EAAQ,IAC3C/hB,EAAOyb,mBAAmB,2BAA4B,cAAeyE,GAElE6B,EAAQ,EACnB,IACH,WAEYpD,EAAAA,EAAAA,IAAkByB,GAAG,yF,GAKtC,4BAEA,SAAevf,GACN9E,KAAK+jB,UAAY9f,EAAOY,WAAW,mBAAoBX,EAAAA,GAAAA,OAAAA,sBAAqC,CAC7FY,UAAYA,GAAa,kBAEjC,IAAC,uBAED,SAAgB9I,GACZ,SAAUA,IAASA,EAAMiqB,UAC7B,KAAC,EAvRuB,GA0RfC,EAAW,0CAGpB,WAAYT,EAAiB1B,GAAmB,MAGO,OAHP,eAC5C,gBACApB,EAAAA,EAAAA,KAAe,UAAM,UAAW8C,IAChC9C,EAAAA,EAAAA,KAAe,UAAM,WAAYoB,GAAY,MAAM,CACvD,CA0BC,OA1BA,kCAED,WACI,OAAOoB,QAAQE,QAAQrlB,KAAKylB,QAChC,GAAC,mBAED,SAAMU,EAAiBrhB,GACnB,OAAOqgB,QAAQE,UAAUC,MAAK,WAC1BrhB,EAAOY,WAAWshB,EAASjiB,EAAAA,GAAAA,OAAAA,sBAAqC,CAAEY,UAAWA,GACjF,GACJ,GAAC,yBAED,SAAYqhB,GACR,OAAOnmB,KAAKomB,MAAM,kCAAmC,cACzD,GAAC,6BAED,SAAgBjC,GACZ,OAAOnkB,KAAKomB,MAAM,sCAAuC,kBAC7D,GAAC,4BAED,SAAeC,EAAyBpG,EAA8CjkB,GAClF,OAAOgE,KAAKomB,MAAM,oCAAqC,gBAC3D,GAAC,qBAED,SAAQrC,GACJ,OAAO,IAAImC,EAAWlmB,KAAKylB,QAAS1B,EACxC,KAAC,EAjCmB,CAAQH,G,sdEnVhC,MAAiB7e,EAEjB,SAASA,EAAOC,EAAKC,GACnB,IAAKD,EACH,MAAM,IAAI9H,MAAM+H,GAAO,mBAC3B,CAEAF,EAAOuhB,MAAQ,SAAqB9S,EAAG1S,EAAGmE,GACxC,GAAIuO,GAAK1S,EACP,MAAM,IAAI5D,MAAM+H,GAAQ,qBAAuBuO,EAAI,OAAS1S,EAChE,E,uBCRA,IAAIuC,EAAQW,EAkCZ,SAASuiB,EAAM7d,GACb,OAAoB,IAAhBA,EAAKtM,OACA,IAAMsM,EAENA,CACX,CAGA,SAAS8d,EAAMvhB,GAEb,IADA,IAAI8F,EAAM,GACD1O,EAAI,EAAGA,EAAI4I,EAAI7I,OAAQC,IAC9B0O,GAAOwb,EAAMthB,EAAI5I,GAAGwL,SAAS,KAC/B,OAAOkD,CACT,CAfA1H,EAAM4E,QA9BN,SAAiBhD,EAAKwhB,GACpB,GAAI3pB,MAAMG,QAAQgI,GAChB,OAAOA,EAAIpI,QACb,IAAKoI,EACH,MAAO,GACT,IAAI8F,EAAM,GACV,GAAmB,kBAAR9F,EAAkB,CAC3B,IAAK,IAAI5I,EAAI,EAAGA,EAAI4I,EAAI7I,OAAQC,IAC9B0O,EAAI1O,GAAc,EAAT4I,EAAI5I,GACf,OAAO0O,CACX,CACE,GAAY,QAAR0b,EAAe,EACjBxhB,EAAMA,EAAI6C,QAAQ,eAAgB,KAC1B1L,OAAS,IAAM,IACrB6I,EAAM,IAAMA,GACd,IAAS5I,EAAI,EAAGA,EAAI4I,EAAI7I,OAAQC,GAAK,EACnC0O,EAAI5M,KAAKlC,SAASgJ,EAAI5I,GAAK4I,EAAI5I,EAAI,GAAI,IAC7C,MACI,IAASA,EAAI,EAAGA,EAAI4I,EAAI7I,OAAQC,IAAK,CACnC,IAAI4B,EAAIgH,EAAI/G,WAAW7B,GACnBqP,EAAKzN,GAAK,EACVsM,EAAS,IAAJtM,EACLyN,EACFX,EAAI5M,KAAKuN,EAAInB,GAEbQ,EAAI5M,KAAKoM,EACjB,CAEE,OAAOQ,CACT,EASA1H,EAAMkjB,MAAQA,EAQdljB,EAAMmjB,MAAQA,EAEdnjB,EAAM4e,OAAS,SAAgByE,EAAKD,GAClC,MAAY,QAARA,EACKD,EAAME,GAENA,CACX,C,uBCvDA,IAAIrjB,EAAQW,EAKZX,EAAM0B,OAAS4hB,EACftjB,EAAM4E,QAAU2e,EAAS3e,QACzB5E,EAAMkjB,MAAQK,EAASL,MACvBljB,EAAMmjB,MAAQI,EAASJ,MACvBnjB,EAAM4e,OAAS2E,EAAS3E,OA6BxB5e,EAAMwjB,OA1BN,SAAgBvf,EAAKa,EAAGwO,GACtB,IAAImQ,EAAM,IAAIhqB,MAAMmK,KAAKM,IAAID,EAAImE,YAAakL,GAAQ,GACtDmQ,EAAIC,KAAK,GAKT,IAHA,IAAIzR,EAAK,GAAMnN,EAAI,EACfqC,EAAIlD,EAAIyB,QAEH1M,EAAI,EAAGA,EAAIyqB,EAAI1qB,OAAQC,IAAK,CACnC,IAAIqiB,EACAjW,EAAM+B,EAAEuO,MAAMzD,EAAK,GACnB9K,EAAEoP,SAEF8E,EADEjW,GAAO6M,GAAM,GAAK,GACfA,GAAM,GAAK7M,EAEZA,EACN+B,EAAEoN,MAAM8G,IAERA,EAAI,EAGNoI,EAAIzqB,GAAKqiB,EACTlU,EAAEuM,OAAO,EACb,CAEE,OAAO+P,CACT,EA0DAzjB,EAAM2jB,OAtDN,SAAgBC,EAAIC,GAClB,IAAIC,EAAM,CACR,GACA,IAGFF,EAAKA,EAAGle,QACRme,EAAKA,EAAGne,QAIR,IAHA,IAEIqe,EAFAC,EAAK,EACLC,EAAK,EAEFL,EAAG9M,MAAMkN,GAAM,GAAKH,EAAG/M,MAAMmN,GAAM,GAAG,CAE3C,IAMIC,EAYAC,EAlBAC,EAAOR,EAAGlO,MAAM,GAAKsO,EAAM,EAC3BK,EAAOR,EAAGnO,MAAM,GAAKuO,EAAM,EACnB,IAARG,IACFA,GAAO,GACG,IAARC,IACFA,GAAO,GAGPH,EADgB,KAAP,EAANE,GACE,EAGO,KADZL,EAAMH,EAAGlO,MAAM,GAAKsO,EAAM,IACF,IAAPD,GAAqB,IAARM,EAGvBD,GAFCA,EAIVN,EAAI,GAAGhpB,KAAKopB,GAIVC,EADgB,KAAP,EAANE,GACE,EAGO,KADZN,EAAMF,EAAGnO,MAAM,GAAKuO,EAAM,IACF,IAAPF,GAAqB,IAARK,EAGvBC,GAFCA,EAIVP,EAAI,GAAGhpB,KAAKqpB,GAGR,EAAIH,IAAOE,EAAK,IAClBF,EAAK,EAAIA,GACP,EAAIC,IAAOE,EAAK,IAClBF,EAAK,EAAIA,GACXL,EAAGlQ,OAAO,GACVmQ,EAAGnQ,OAAO,EACd,CAEE,OAAOoQ,CACT,EAUA9jB,EAAMskB,eAPN,SAAwBC,EAAKhrB,EAAMirB,GACjC,IAAI9nB,EAAM,IAAMnD,EAChBgrB,EAAI7qB,UAAUH,GAAQ,WACpB,YAAqBohB,IAAdhe,KAAKD,GAAqBC,KAAKD,GACpCC,KAAKD,GAAO8nB,EAAS7qB,KAAKgD,KAChC,CACA,EAOAqD,EAAMykB,WAJN,SAAoBxpB,GAClB,MAAwB,kBAAVA,EAAqB+E,EAAM4E,QAAQ3J,EAAO,OACtDA,CACJ,EAMA+E,EAAM0kB,UAHN,SAAmBzpB,GACjB,OAAO,IAAIkH,IAAJ,CAAOlH,EAAO,MAAO,KAC9B,C,IChHIuoB,EAASxjB,EAAMwjB,OACfG,EAAS3jB,EAAM2jB,OACfjiB,EAAS1B,EAAM0B,OAEnB,SAASijB,EAAU1I,EAAM2I,GACvBjoB,KAAKsf,KAAOA,EACZtf,KAAKwU,EAAI,IAAIhP,IAAJ,CAAOyiB,EAAKzT,EAAG,IAGxBxU,KAAK+F,IAAMkiB,EAAK3K,MAAQ9X,IAAAA,IAAOyiB,EAAK3K,OAAS9X,IAAAA,KAAQxF,KAAKwU,GAG1DxU,KAAKkoB,KAAO,IAAI1iB,IAAJ,CAAO,GAAG0V,MAAMlb,KAAK+F,KACjC/F,KAAKue,IAAM,IAAI/Y,IAAJ,CAAO,GAAG0V,MAAMlb,KAAK+F,KAChC/F,KAAKmoB,IAAM,IAAI3iB,IAAJ,CAAO,GAAG0V,MAAMlb,KAAK+F,KAGhC/F,KAAKiV,EAAIgT,EAAKhT,GAAK,IAAIzP,IAAJ,CAAOyiB,EAAKhT,EAAG,IAClCjV,KAAKuZ,EAAI0O,EAAK1O,GAAKvZ,KAAKooB,cAAcH,EAAK1O,EAAG0O,EAAKI,MAGnDroB,KAAKsoB,QAAU,IAAIxrB,MAAM,GACzBkD,KAAKuoB,QAAU,IAAIzrB,MAAM,GACzBkD,KAAKwoB,QAAU,IAAI1rB,MAAM,GACzBkD,KAAKyoB,QAAU,IAAI3rB,MAAM,GAEzBkD,KAAK0oB,WAAa1oB,KAAKiV,EAAIjV,KAAKiV,EAAExJ,YAAc,EAGhD,IAAIkd,EAAc3oB,KAAKiV,GAAKjV,KAAKwU,EAAE8D,IAAItY,KAAKiV,IACvC0T,GAAeA,EAAYxO,KAAK,KAAO,EAC1Cna,KAAK4oB,KAAO,MAEZ5oB,KAAK6oB,eAAgB,EACrB7oB,KAAK4oB,KAAO5oB,KAAKiV,EAAEiG,MAAMlb,KAAK+F,KAElC,CACA,MAAiBiiB,EAqNjB,SAASc,EAAUC,EAAOzJ,GACxBtf,KAAK+oB,MAAQA,EACb/oB,KAAKsf,KAAOA,EACZtf,KAAKgpB,YAAc,IACrB,CAvNAhB,EAAUjrB,UAAUksB,MAAQ,WAC1B,MAAM,IAAI/rB,MAAM,kBAClB,EAEA8qB,EAAUjrB,UAAUmsB,SAAW,WAC7B,MAAM,IAAIhsB,MAAM,kBAClB,EAEA8qB,EAAUjrB,UAAUosB,aAAe,SAAsB3U,EAAGhK,GAC1DzF,EAAOyP,EAAEwU,aACT,IAAII,EAAU5U,EAAE6U,cAEZvC,EAAMD,EAAOrc,EAAG,EAAGxK,KAAK0oB,YACxBY,GAAK,GAAMF,EAAQG,KAAO,IAAOH,EAAQG,KAAO,IAAM,EAAI,EAAI,GAClED,GAAK,EAGL,IACI3nB,EACA6nB,EAFAC,EAAO,GAGX,IAAK9nB,EAAI,EAAGA,EAAImlB,EAAI1qB,OAAQuF,GAAKynB,EAAQG,KAAM,CAC7CC,EAAO,EACP,IAAK,IAAIhW,EAAI7R,EAAIynB,EAAQG,KAAO,EAAG/V,GAAK7R,EAAG6R,IACzCgW,GAAQA,GAAQ,GAAK1C,EAAItT,GAC3BiW,EAAKtrB,KAAKqrB,EACd,CAIE,IAFA,IAAIvoB,EAAIjB,KAAK0pB,OAAO,KAAM,KAAM,MAC5B3iB,EAAI/G,KAAK0pB,OAAO,KAAM,KAAM,MACvBrtB,EAAIitB,EAAGjtB,EAAI,EAAGA,IAAK,CAC1B,IAAKsF,EAAI,EAAGA,EAAI8nB,EAAKrtB,OAAQuF,KAC3B6nB,EAAOC,EAAK9nB,MACCtF,EACX0K,EAAIA,EAAE4iB,SAASP,EAAQQ,OAAOjoB,IACvB6nB,KAAUntB,IACjB0K,EAAIA,EAAE4iB,SAASP,EAAQQ,OAAOjoB,GAAG2K,QAErCrL,EAAIA,EAAEyM,IAAI3G,EACd,CACE,OAAO9F,EAAE4oB,KACX,EAEA7B,EAAUjrB,UAAU+sB,SAAW,SAAkBtV,EAAGhK,GAClD,IAAIrC,EAAI,EAGJ4hB,EAAYvV,EAAEwV,cAAc7hB,GAChCA,EAAI4hB,EAAUnL,IAQd,IAPA,IAAIA,EAAMmL,EAAUH,OAGhB9C,EAAMD,EAAOrc,EAAGrC,EAAGnI,KAAK0oB,YAGxB1P,EAAMhZ,KAAK0pB,OAAO,KAAM,KAAM,MACzBrtB,EAAIyqB,EAAI1qB,OAAS,EAAGC,GAAK,EAAGA,IAAK,CAExC,IAAK,IAAImX,EAAI,EAAGnX,GAAK,GAAgB,IAAXyqB,EAAIzqB,GAAUA,IACtCmX,IAKF,GAJInX,GAAK,GACPmX,IACFwF,EAAMA,EAAIiR,KAAKzW,GAEXnX,EAAI,EACN,MACF,IAAIqiB,EAAIoI,EAAIzqB,GACZ0I,EAAa,IAAN2Z,GAIH1F,EAHW,WAAXxE,EAAE8K,KAEAZ,EAAI,EACA1F,EAAI2Q,SAAS/K,EAAKF,EAAI,GAAM,IAE5B1F,EAAI2Q,SAAS/K,GAAMF,EAAI,GAAM,GAAGpS,OAGpCoS,EAAI,EACA1F,EAAItL,IAAIkR,EAAKF,EAAI,GAAM,IAEvB1F,EAAItL,IAAIkR,GAAMF,EAAI,GAAM,GAAGpS,MAEzC,CACE,MAAkB,WAAXkI,EAAE8K,KAAoBtG,EAAI6Q,MAAQ7Q,CAC3C,EAEAgP,EAAUjrB,UAAUmtB,YAAc,SAAqBC,EACrDP,EACAQ,EACApjB,EACAqjB,GACA,IAMIhuB,EACAsF,EACA6S,EARA8V,EAAWtqB,KAAKsoB,QAChB1J,EAAM5e,KAAKuoB,QACXzB,EAAM9mB,KAAKwoB,QAGXjhB,EAAM,EAIV,IAAKlL,EAAI,EAAGA,EAAI2K,EAAK3K,IAAK,CAExB,IAAI0tB,GADJvV,EAAIoV,EAAOvtB,IACO2tB,cAAcG,GAChCG,EAASjuB,GAAK0tB,EAAUnL,IACxBA,EAAIviB,GAAK0tB,EAAUH,MACvB,CAGE,IAAKvtB,EAAI2K,EAAM,EAAG3K,GAAK,EAAGA,GAAK,EAAG,CAChC,IAAI4E,EAAI5E,EAAI,EACR0K,EAAI1K,EACR,GAAoB,IAAhBiuB,EAASrpB,IAA4B,IAAhBqpB,EAASvjB,GAAlC,CAQA,IAAIwjB,EAAO,CACTX,EAAO3oB,GACP,KACA,KACA2oB,EAAO7iB,IAI4B,IAAjC6iB,EAAO3oB,GAAGmS,EAAE1L,IAAIkiB,EAAO7iB,GAAGqM,IAC5BmX,EAAK,GAAKX,EAAO3oB,GAAGyM,IAAIkc,EAAO7iB,IAC/BwjB,EAAK,GAAKX,EAAO3oB,GAAGupB,MAAMb,SAASC,EAAO7iB,GAAGuF,QACM,IAA1Csd,EAAO3oB,GAAGmS,EAAE1L,IAAIkiB,EAAO7iB,GAAGqM,EAAEoJ,WACrC+N,EAAK,GAAKX,EAAO3oB,GAAGupB,MAAMb,SAASC,EAAO7iB,IAC1CwjB,EAAK,GAAKX,EAAO3oB,GAAGyM,IAAIkc,EAAO7iB,GAAGuF,SAElCie,EAAK,GAAKX,EAAO3oB,GAAGupB,MAAMb,SAASC,EAAO7iB,IAC1CwjB,EAAK,GAAKX,EAAO3oB,GAAGupB,MAAMb,SAASC,EAAO7iB,GAAGuF,QAG/C,IAAI/L,EAAQ,EACT,GACA,GACA,GACA,EACD,EACA,EACA,EACA,EACA,GAGE4mB,EAAMH,EAAOoD,EAAOnpB,GAAImpB,EAAOrjB,IAInC,IAHAQ,EAAMN,KAAKM,IAAI4f,EAAI,GAAG/qB,OAAQmL,GAC9Buf,EAAI7lB,GAAK,IAAInE,MAAMyK,GACnBuf,EAAI/f,GAAK,IAAIjK,MAAMyK,GACd5F,EAAI,EAAGA,EAAI4F,EAAK5F,IAAK,CACxB,IAAI8oB,EAAiB,EAAZtD,EAAI,GAAGxlB,GACZ+oB,EAAiB,EAAZvD,EAAI,GAAGxlB,GAEhBmlB,EAAI7lB,GAAGU,GAAKpB,EAAiB,GAAVkqB,EAAK,IAAUC,EAAK,IACvC5D,EAAI/f,GAAGpF,GAAK,EACZid,EAAI3d,GAAKspB,CACf,CA5CA,MALMzD,EAAI7lB,GAAK4lB,EAAOuD,EAAOnpB,GAAIqpB,EAASrpB,GAAIjB,KAAK0oB,YAC7C5B,EAAI/f,GAAK8f,EAAOuD,EAAOrjB,GAAIujB,EAASvjB,GAAI/G,KAAK0oB,YAC7CnhB,EAAMN,KAAKM,IAAIuf,EAAI7lB,GAAG7E,OAAQmL,GAC9BA,EAAMN,KAAKM,IAAIuf,EAAI/f,GAAG3K,OAAQmL,EA+CpC,CAEE,IAAIyR,EAAMhZ,KAAK0pB,OAAO,KAAM,KAAM,MAC9B1M,EAAMhd,KAAKyoB,QACf,IAAKpsB,EAAIkL,EAAKlL,GAAK,EAAGA,IAAK,CAGzB,IAFA,IAAImO,EAAI,EAEDnO,GAAK,GAAG,CACb,IAAI6rB,GAAO,EACX,IAAKvmB,EAAI,EAAGA,EAAIqF,EAAKrF,IACnBqb,EAAIrb,GAAiB,EAAZmlB,EAAInlB,GAAGtF,GACD,IAAX2gB,EAAIrb,KACNumB,GAAO,GAEX,IAAKA,EACH,MACF1d,IACAnO,GACN,CAII,GAHIA,GAAK,GACPmO,IACFwO,EAAMA,EAAIiR,KAAKzf,GACXnO,EAAI,EACN,MAEF,IAAKsF,EAAI,EAAGA,EAAIqF,EAAKrF,IAAK,CACxB,IAAI+c,EAAI1B,EAAIrb,GAEF,IAAN+c,IAEKA,EAAI,EACXlK,EAAIoK,EAAIjd,GAAI+c,EAAI,GAAM,GACfA,EAAI,IACXlK,EAAIoK,EAAIjd,IAAK+c,EAAI,GAAM,GAAGpS,OAG1B0M,EADa,WAAXxE,EAAE8K,KACEtG,EAAI2Q,SAASnV,GAEbwE,EAAItL,IAAI8G,GACtB,CACA,CAEE,IAAKnY,EAAI,EAAGA,EAAI2K,EAAK3K,IACnBuiB,EAAIviB,GAAK,KAEX,OAAIguB,EACKrR,EAEAA,EAAI6Q,KACf,EAOA7B,EAAUc,UAAYA,EAEtBA,EAAU/rB,UAAUie,GAAK,WACvB,MAAM,IAAI9d,MAAM,kBAClB,EAEA4rB,EAAU/rB,UAAUmsB,SAAW,WAC7B,OAAOlpB,KAAK+oB,MAAMG,SAASlpB,KAC7B,EAEAgoB,EAAUjrB,UAAU4tB,YAAc,SAAqBrsB,EAAOmoB,GAC5DnoB,EAAQ+E,EAAM4E,QAAQ3J,EAAOmoB,GAE7B,IAAIzf,EAAMhH,KAAKwU,EAAE3J,aAGjB,IAAkB,IAAbvM,EAAM,IAA4B,IAAbA,EAAM,IAA4B,IAAbA,EAAM,KACjDA,EAAMlC,OAAS,IAAM,EAAI4K,EAS3B,OARiB,IAAb1I,EAAM,GACRyG,EAAOzG,EAAMA,EAAMlC,OAAS,GAAK,IAAM,GACnB,IAAbkC,EAAM,IACbyG,EAAOzG,EAAMA,EAAMlC,OAAS,GAAK,IAAM,GAE9B4D,KAAKipB,MAAM3qB,EAAMzB,MAAM,EAAG,EAAImK,GACvC1I,EAAMzB,MAAM,EAAImK,EAAK,EAAI,EAAIA,IAG1B,IAAkB,IAAb1I,EAAM,IAA4B,IAAbA,EAAM,KAC3BA,EAAMlC,OAAS,IAAM4K,EAC/B,OAAOhH,KAAK4qB,WAAWtsB,EAAMzB,MAAM,EAAG,EAAImK,GAAmB,IAAb1I,EAAM,IAExD,MAAM,IAAIpB,MAAM,uBAClB,EAEA4rB,EAAU/rB,UAAU8tB,iBAAmB,SAA0BpE,GAC/D,OAAOzmB,KAAKiiB,OAAOwE,GAAK,EAC1B,EAEAqC,EAAU/rB,UAAU+tB,QAAU,SAAiBC,GAC7C,IAAI/jB,EAAMhH,KAAK+oB,MAAMvU,EAAE3J,aACnBsI,EAAInT,KAAKgrB,OAAO/iB,QAAQ,KAAMjB,GAElC,OAAI+jB,EACK,CAAE/qB,KAAKirB,OAAOzR,SAAW,EAAO,GAAOuG,OAAO5M,GAEhD,CAAE,GAAO4M,OAAO5M,EAAGnT,KAAKirB,OAAOhjB,QAAQ,KAAMjB,GACtD,EAEA8hB,EAAU/rB,UAAUklB,OAAS,SAAgBwE,EAAKsE,GAChD,OAAO1nB,EAAM4e,OAAOjiB,KAAK8qB,QAAQC,GAAUtE,EAC7C,EAEAqC,EAAU/rB,UAAUmuB,WAAa,SAAoBC,GACnD,GAAInrB,KAAKgpB,YACP,OAAOhpB,KAET,IAAIgpB,EAAc,CAChBI,QAAS,KACTtC,IAAK,KACLsE,KAAM,MAOR,OALApC,EAAYlC,IAAM9mB,KAAKgqB,cAAc,GACrChB,EAAYI,QAAUppB,KAAKqpB,YAAY,EAAG8B,GAC1CnC,EAAYoC,KAAOprB,KAAKqrB,WACxBrrB,KAAKgpB,YAAcA,EAEZhpB,IACT,EAEA8oB,EAAU/rB,UAAUuuB,YAAc,SAAqB9gB,GACrD,IAAKxK,KAAKgpB,YACR,OAAO,EAET,IAAII,EAAUppB,KAAKgpB,YAAYI,QAC/B,QAAKA,GAGEA,EAAQQ,OAAOxtB,QAAU6K,KAAKiB,MAAMsC,EAAEiB,YAAc,GAAK2d,EAAQG,KAC1E,EAEAT,EAAU/rB,UAAUssB,YAAc,SAAqBE,EAAM4B,GAC3D,GAAInrB,KAAKgpB,aAAehpB,KAAKgpB,YAAYI,QACvC,OAAOppB,KAAKgpB,YAAYI,QAI1B,IAFA,IAAIA,EAAU,CAAEppB,MACZgZ,EAAMhZ,KACD3D,EAAI,EAAGA,EAAI8uB,EAAO9uB,GAAKktB,EAAM,CACpC,IAAK,IAAI5nB,EAAI,EAAGA,EAAI4nB,EAAM5nB,IACxBqX,EAAMA,EAAIuS,MACZnC,EAAQjrB,KAAK6a,EACjB,CACE,MAAO,CACLuQ,KAAMA,EACNK,OAAQR,EAEZ,EAEAN,EAAU/rB,UAAUitB,cAAgB,SAAuBpL,GACzD,GAAI5e,KAAKgpB,aAAehpB,KAAKgpB,YAAYlC,IACvC,OAAO9mB,KAAKgpB,YAAYlC,IAK1B,IAHA,IAAI/b,EAAM,CAAE/K,MACRuH,GAAO,GAAKqX,GAAO,EACnB2M,EAAc,IAARhkB,EAAY,KAAOvH,KAAKurB,MACzBlvB,EAAI,EAAGA,EAAIkL,EAAKlL,IACvB0O,EAAI1O,GAAK0O,EAAI1O,EAAI,GAAGqR,IAAI6d,GAC1B,MAAO,CACL3M,IAAKA,EACLgL,OAAQ7e,EAEZ,EAEA+d,EAAU/rB,UAAUsuB,SAAW,WAC7B,OAAO,IACT,EAEAvC,EAAU/rB,UAAUktB,KAAO,SAAczf,GAEvC,IADA,IAAI1J,EAAId,KACC3D,EAAI,EAAGA,EAAImO,EAAGnO,IACrByE,EAAIA,EAAEyqB,MACR,OAAOzqB,CACT,E,qBC5X6B,oBAAlBb,OAAOurB,OAEhBznB,EAAOC,QAAU,SAAkBmB,EAAMC,GACnCA,IACFD,EAAKE,OAASD,EACdD,EAAKpI,UAAYkD,OAAOurB,OAAOpmB,EAAUrI,UAAW,CAClDwI,YAAa,CACXvJ,MAAOmJ,EACPsmB,YAAY,EACZC,UAAU,EACVC,cAAc,KAIxB,EAGE5nB,EAAOC,QAAU,SAAkBmB,EAAMC,GACvC,GAAIA,EAAW,CACbD,EAAKE,OAASD,EACd,IAAIE,EAAW,WAAa,EAC5BA,EAASvI,UAAYqI,EAAUrI,UAC/BoI,EAAKpI,UAAY,IAAIuI,EACrBH,EAAKpI,UAAUwI,YAAcJ,CACnC,CACA,C,IClBIJ,EAAS1B,EAAM0B,OAEnB,SAAS6mB,GAAW3D,GAClB4D,EAAK7uB,KAAKgD,KAAM,QAASioB,GAEzBjoB,KAAKiB,EAAI,IAAIuE,IAAJ,CAAOyiB,EAAKhnB,EAAG,IAAIia,MAAMlb,KAAK+F,KACvC/F,KAAK+G,EAAI,IAAIvB,IAAJ,CAAOyiB,EAAKlhB,EAAG,IAAImU,MAAMlb,KAAK+F,KACvC/F,KAAK8rB,KAAO9rB,KAAKmoB,IAAI5L,UAErBvc,KAAK+rB,MAAqC,IAA7B/rB,KAAKiB,EAAEqa,UAAUnB,KAAK,GACnCna,KAAKgsB,OAAmD,IAA1ChsB,KAAKiB,EAAEqa,UAAU3N,IAAI3N,KAAKwU,GAAG2F,MAAM,GAGjDna,KAAKisB,KAAOjsB,KAAKksB,iBAAiBjE,GAClCjoB,KAAKmsB,YAAc,IAAIrvB,MAAM,GAC7BkD,KAAKosB,YAAc,IAAItvB,MAAM,EAC/B,CACAoI,EAAS0mB,GAAYC,GACrB,OAAiBD,GAiOjB,SAASS,GAAMtD,EAAO5V,EAAGC,EAAGkZ,GAC1BT,EAAK/C,UAAU9rB,KAAKgD,KAAM+oB,EAAO,UACvB,OAAN5V,GAAoB,OAANC,GAChBpT,KAAKmT,EAAI,KACTnT,KAAKoT,EAAI,KACTpT,KAAKusB,KAAM,IAEXvsB,KAAKmT,EAAI,IAAI3N,IAAJ,CAAO2N,EAAG,IACnBnT,KAAKoT,EAAI,IAAI5N,IAAJ,CAAO4N,EAAG,IAEfkZ,IACFtsB,KAAKmT,EAAEqI,SAASxb,KAAK+oB,MAAMhjB,KAC3B/F,KAAKoT,EAAEoI,SAASxb,KAAK+oB,MAAMhjB,MAExB/F,KAAKmT,EAAEpN,MACV/F,KAAKmT,EAAInT,KAAKmT,EAAE+H,MAAMlb,KAAK+oB,MAAMhjB,MAC9B/F,KAAKoT,EAAErN,MACV/F,KAAKoT,EAAIpT,KAAKoT,EAAE8H,MAAMlb,KAAK+oB,MAAMhjB,MACnC/F,KAAKusB,KAAM,EAEf,CA2NA,SAASC,GAAOzD,EAAO5V,EAAGC,EAAGsL,GAC3BmN,EAAK/C,UAAU9rB,KAAKgD,KAAM+oB,EAAO,YACvB,OAAN5V,GAAoB,OAANC,GAAoB,OAANsL,GAC9B1e,KAAKmT,EAAInT,KAAK+oB,MAAMxK,IACpBve,KAAKoT,EAAIpT,KAAK+oB,MAAMxK,IACpBve,KAAK0e,EAAI,IAAIlZ,IAAJ,CAAO,KAEhBxF,KAAKmT,EAAI,IAAI3N,IAAJ,CAAO2N,EAAG,IACnBnT,KAAKoT,EAAI,IAAI5N,IAAJ,CAAO4N,EAAG,IACnBpT,KAAK0e,EAAI,IAAIlZ,IAAJ,CAAOkZ,EAAG,KAEhB1e,KAAKmT,EAAEpN,MACV/F,KAAKmT,EAAInT,KAAKmT,EAAE+H,MAAMlb,KAAK+oB,MAAMhjB,MAC9B/F,KAAKoT,EAAErN,MACV/F,KAAKoT,EAAIpT,KAAKoT,EAAE8H,MAAMlb,KAAK+oB,MAAMhjB,MAC9B/F,KAAK0e,EAAE3Y,MACV/F,KAAK0e,EAAI1e,KAAK0e,EAAExD,MAAMlb,KAAK+oB,MAAMhjB,MAEnC/F,KAAKysB,KAAOzsB,KAAK0e,IAAM1e,KAAK+oB,MAAMxK,GACpC,CAjeAqN,GAAW7uB,UAAUmvB,iBAAmB,SAA0BjE,GAEhE,GAAKjoB,KAAK+rB,OAAU/rB,KAAKuZ,GAAMvZ,KAAKiV,GAAwB,IAAnBjV,KAAKwU,EAAEyE,KAAK,GAArD,CAIA,IAAImS,EACAsB,EACJ,GAAIzE,EAAKmD,KACPA,EAAO,IAAI5lB,IAAJ,CAAOyiB,EAAKmD,KAAM,IAAIlQ,MAAMlb,KAAK+F,SACnC,CACL,IAAI4mB,EAAQ3sB,KAAK4sB,cAAc5sB,KAAKwU,GAGpC4W,GADAA,EAAOuB,EAAM,GAAGjlB,IAAIilB,EAAM,IAAM,EAAIA,EAAM,GAAKA,EAAM,IACzCzR,MAAMlb,KAAK+F,IAC3B,CACE,GAAIkiB,EAAKyE,OACPA,EAAS,IAAIlnB,IAAJ,CAAOyiB,EAAKyE,OAAQ,QACxB,CAEL,IAAIG,EAAU7sB,KAAK4sB,cAAc5sB,KAAKiV,GACsB,IAAxDjV,KAAKuZ,EAAEzS,IAAI+lB,EAAQ,IAAI1Z,EAAEzL,IAAI1H,KAAKuZ,EAAEpG,EAAE4I,OAAOqP,IAC/CsB,EAASG,EAAQ,IAEjBH,EAASG,EAAQ,GACjB9nB,EAA2D,IAApD/E,KAAKuZ,EAAEzS,IAAI4lB,GAAQvZ,EAAEzL,IAAI1H,KAAKuZ,EAAEpG,EAAE4I,OAAOqP,KAEtD,CAeE,MAAO,CACLA,KAAMA,EACNsB,OAAQA,EACRI,MAdE7E,EAAK6E,MACC7E,EAAK6E,MAAMC,KAAI,SAASC,GAC9B,MAAO,CACL/rB,EAAG,IAAIuE,IAAJ,CAAOwnB,EAAI/rB,EAAG,IACjB8F,EAAG,IAAIvB,IAAJ,CAAOwnB,EAAIjmB,EAAG,IAEzB,IAEY/G,KAAKitB,cAAcP,GApCrB,CA4CV,EAEAd,GAAW7uB,UAAU6vB,cAAgB,SAAuBtlB,GAI1D,IAAIvB,EAAMuB,IAAQtH,KAAKwU,EAAIxU,KAAK+F,IAAMP,IAAAA,KAAQ8B,GAC1CwkB,EAAO,IAAItmB,IAAJ,CAAO,GAAG0V,MAAMnV,GAAKwW,UAC5B2Q,EAAQpB,EAAKtP,SAEbtI,EAAI,IAAI1O,IAAJ,CAAO,GAAG0V,MAAMnV,GAAKyW,SAASH,UAAUN,OAAO+P,GAIvD,MAAO,CAFEoB,EAAMzR,OAAOvH,GAAGoH,UAChB4R,EAAMvR,OAAOzH,GAAGoH,UAE3B,EAEAsQ,GAAW7uB,UAAUkwB,cAAgB,SAAuBP,GA2B1D,IAzBA,IAYI3e,EACA8B,EAEA3B,EACA8B,EAEA3B,EACA8B,EAEAgd,EAEArsB,EACAqS,EAxBAia,EAAWptB,KAAKiV,EAAEwC,MAAMxQ,KAAKomB,MAAMrtB,KAAKiV,EAAExJ,YAAc,IAIxDuT,EAAI0N,EACJ9tB,EAAIoB,KAAKiV,EAAElM,QACXiR,EAAK,IAAIxU,IAAJ,CAAO,GACZ8nB,EAAK,IAAI9nB,IAAJ,CAAO,GACZyU,EAAK,IAAIzU,IAAJ,CAAO,GACZ+nB,EAAK,IAAI/nB,IAAJ,CAAO,GAaZnJ,EAAI,EAGa,IAAd2iB,EAAE7E,KAAK,IAAU,CACtB,IAAI1D,EAAI7X,EAAE0Z,IAAI0G,GACdle,EAAIlC,EAAE+O,IAAI8I,EAAE3P,IAAIkY,IAChB7L,EAAI8G,EAAGtM,IAAI8I,EAAE3P,IAAIkT,IACjB,IAAI5G,EAAIma,EAAG5f,IAAI8I,EAAE3P,IAAIwmB,IAErB,IAAKpf,GAAMpN,EAAE4G,IAAI0lB,GAAY,EAC3Brf,EAAKof,EAAM7gB,MACXuD,EAAKmK,EACL9L,EAAKpN,EAAEwL,MACP0D,EAAKmD,OACA,GAAIjF,GAAc,MAAN7R,EACjB,MAEF8wB,EAAQrsB,EAERlC,EAAIogB,EACJA,EAAIle,EACJmZ,EAAKD,EACLA,EAAK7G,EACLoa,EAAKD,EACLA,EAAKla,CACT,CACE/E,EAAKvN,EAAEwL,MACP6D,EAAKgD,EAEL,IAAIqa,EAAOtf,EAAGoI,MAAM5I,IAAIsC,EAAGsG,OAiB3B,OAhBWjI,EAAGiI,MAAM5I,IAAIyC,EAAGmG,OAClB5O,IAAI8lB,IAAS,IACpBnf,EAAKN,EACLoC,EAAKN,GAIH3B,EAAGrI,WACLqI,EAAKA,EAAG5B,MACR0D,EAAKA,EAAG1D,OAEN+B,EAAGxI,WACLwI,EAAKA,EAAG/B,MACR6D,EAAKA,EAAG7D,OAGH,CACL,CAAErL,EAAGiN,EAAInH,EAAGiJ,GACZ,CAAE/O,EAAGoN,EAAItH,EAAGoJ,GAEhB,EAEAyb,GAAW7uB,UAAU0wB,WAAa,SAAoBjjB,GACpD,IAAIsiB,EAAQ9sB,KAAKisB,KAAKa,MAClBY,EAAKZ,EAAM,GACXa,EAAKb,EAAM,GAEXc,EAAKD,EAAG5mB,EAAED,IAAI0D,GAAGmO,SAAS3Y,KAAKiV,GAC/B4Y,EAAKH,EAAG3mB,EAAEuF,MAAMxF,IAAI0D,GAAGmO,SAAS3Y,KAAKiV,GAErC6Y,EAAKF,EAAG9mB,IAAI4mB,EAAGzsB,GACf8sB,EAAKF,EAAG/mB,IAAI6mB,EAAG1sB,GACf+sB,EAAKJ,EAAG9mB,IAAI4mB,EAAG3mB,GACfknB,EAAKJ,EAAG/mB,IAAI6mB,EAAG5mB,GAKnB,MAAO,CAAEkgB,GAFAzc,EAAEmD,IAAImgB,GAAIngB,IAAIogB,GAEN7G,GADR8G,EAAGtgB,IAAIugB,GAAI3hB,MAEtB,EAEAsf,GAAW7uB,UAAU6tB,WAAa,SAAoBzX,EAAGgC,IACvDhC,EAAI,IAAI3N,IAAJ,CAAO2N,EAAG,KACPpN,MACLoN,EAAIA,EAAE+H,MAAMlb,KAAK+F,MAEnB,IAAIwnB,EAAKpa,EAAE+I,SAASH,OAAO5I,GAAGuI,QAAQvI,EAAE4I,OAAO/b,KAAKiB,IAAIya,QAAQ1b,KAAK+G,GACjEqM,EAAIma,EAAGlR,UACX,GAA6C,IAAzCjJ,EAAE8I,SAASP,OAAO4R,GAAI7lB,IAAI1H,KAAKkoB,MACjC,MAAM,IAAIhrB,MAAM,iBAIlB,IAAI0c,EAAQxG,EAAEkI,UAAU1B,QAIxB,OAHIzE,IAAQyE,IAAUzE,GAAOyE,KAC3BxG,EAAIA,EAAEoJ,UAEDxc,KAAKipB,MAAM9V,EAAGC,EACvB,EAEAwY,GAAW7uB,UAAUmsB,SAAW,SAAkBD,GAChD,GAAIA,EAAMsD,IACR,OAAO,EAET,IAAIpZ,EAAI8V,EAAM9V,EACVC,EAAI6V,EAAM7V,EAEV8a,EAAKluB,KAAKiB,EAAE8a,OAAO5I,GACnBgb,EAAMhb,EAAE+I,SAASH,OAAO5I,GAAGuI,QAAQwS,GAAIxS,QAAQ1b,KAAK+G,GACxD,OAA2C,IAApCqM,EAAE8I,SAASN,QAAQuS,GAAKhU,KAAK,EACtC,EAEAyR,GAAW7uB,UAAUqxB,gBACjB,SAAyBxE,EAAQQ,EAAQC,GAGvC,IAFA,IAAIgE,EAAUruB,KAAKmsB,YACfmC,EAAUtuB,KAAKosB,YACV/vB,EAAI,EAAGA,EAAIutB,EAAOxtB,OAAQC,IAAK,CACtC,IAAIyhB,EAAQ9d,KAAKytB,WAAWrD,EAAO/tB,IAC/BmY,EAAIoV,EAAOvtB,GACX+uB,EAAO5W,EAAE6W,WAETvN,EAAMmJ,GAAGphB,WACXiY,EAAMmJ,GAAG7a,OACToI,EAAIA,EAAElI,KAAI,IAERwR,EAAMoJ,GAAGrhB,WACXiY,EAAMoJ,GAAG9a,OACTgf,EAAOA,EAAK9e,KAAI,IAGlB+hB,EAAY,EAAJhyB,GAASmY,EACjB6Z,EAAY,EAAJhyB,EAAQ,GAAK+uB,EACrBkD,EAAY,EAAJjyB,GAASyhB,EAAMmJ,GACvBqH,EAAY,EAAJjyB,EAAQ,GAAKyhB,EAAMoJ,EACnC,CAIM,IAHA,IAAInc,EAAM/K,KAAKkqB,YAAY,EAAGmE,EAASC,EAAa,EAAJjyB,EAAOguB,GAG9C1oB,EAAI,EAAGA,EAAQ,EAAJtF,EAAOsF,IACzB0sB,EAAQ1sB,GAAK,KACb2sB,EAAQ3sB,GAAK,KAEf,OAAOoJ,CACb,EAuBA7F,EAASmnB,GAAOR,EAAK/C,WAErB8C,GAAW7uB,UAAUksB,MAAQ,SAAe9V,EAAGC,EAAGkZ,GAChD,OAAO,IAAID,GAAMrsB,KAAMmT,EAAGC,EAAGkZ,EAC/B,EAEAV,GAAW7uB,UAAUqrB,cAAgB,SAAuBR,EAAK7hB,GAC/D,OAAOsmB,GAAMkC,SAASvuB,KAAM4nB,EAAK7hB,EACnC,EAEAsmB,GAAMtvB,UAAUsuB,SAAW,WACzB,GAAKrrB,KAAK+oB,MAAMkD,KAAhB,CAGA,IAAIpL,EAAM7gB,KAAKgpB,YACf,GAAInI,GAAOA,EAAIuK,KACb,OAAOvK,EAAIuK,KAEb,IAAIA,EAAOprB,KAAK+oB,MAAME,MAAMjpB,KAAKmT,EAAE4I,OAAO/b,KAAK+oB,MAAMkD,KAAKb,MAAOprB,KAAKoT,GACtE,GAAIyN,EAAK,CACP,IAAIkI,EAAQ/oB,KAAK+oB,MACbyF,EAAU,SAASha,GACrB,OAAOuU,EAAME,MAAMzU,EAAErB,EAAE4I,OAAOgN,EAAMkD,KAAKb,MAAO5W,EAAEpB,EACxD,EACIyN,EAAIuK,KAAOA,EACXA,EAAKpC,YAAc,CACjBoC,KAAM,KACNtE,IAAKjG,EAAIiG,KAAO,CACdlI,IAAKiC,EAAIiG,IAAIlI,IACbgL,OAAQ/I,EAAIiG,IAAI8C,OAAOmD,IAAIyB,IAE7BpF,QAASvI,EAAIuI,SAAW,CACtBG,KAAM1I,EAAIuI,QAAQG,KAClBK,OAAQ/I,EAAIuI,QAAQQ,OAAOmD,IAAIyB,IAGvC,CACE,OAAOpD,CAzBC,CA0BV,EAEAiB,GAAMtvB,UAAUmN,OAAS,WACvB,OAAKlK,KAAKgpB,YAGH,CAAEhpB,KAAKmT,EAAGnT,KAAKoT,EAAGpT,KAAKgpB,aAAe,CAC3CI,QAASppB,KAAKgpB,YAAYI,SAAW,CACnCG,KAAMvpB,KAAKgpB,YAAYI,QAAQG,KAC/BK,OAAQ5pB,KAAKgpB,YAAYI,QAAQQ,OAAO/sB,MAAM,IAEhDiqB,IAAK9mB,KAAKgpB,YAAYlC,KAAO,CAC3BlI,IAAK5e,KAAKgpB,YAAYlC,IAAIlI,IAC1BgL,OAAQ5pB,KAAKgpB,YAAYlC,IAAI8C,OAAO/sB,MAAM,MATrC,CAAEmD,KAAKmT,EAAGnT,KAAKoT,EAY1B,EAEAiZ,GAAMkC,SAAW,SAAkBxF,EAAOnB,EAAK7hB,GAC1B,kBAAR6hB,IACTA,EAAM6G,KAAKC,MAAM9G,IACnB,IAAI7c,EAAMge,EAAME,MAAMrB,EAAI,GAAIA,EAAI,GAAI7hB,GACtC,IAAK6hB,EAAI,GACP,OAAO7c,EAET,SAAS4jB,EAAU/G,GACjB,OAAOmB,EAAME,MAAMrB,EAAI,GAAIA,EAAI,GAAI7hB,EACvC,CAEE,IAAI8a,EAAM+G,EAAI,GAYd,OAXA7c,EAAIie,YAAc,CAChBoC,KAAM,KACNhC,QAASvI,EAAIuI,SAAW,CACtBG,KAAM1I,EAAIuI,QAAQG,KAClBK,OAAQ,CAAE7e,GAAMgV,OAAOc,EAAIuI,QAAQQ,OAAOmD,IAAI4B,KAEhD7H,IAAKjG,EAAIiG,KAAO,CACdlI,IAAKiC,EAAIiG,IAAIlI,IACbgL,OAAQ,CAAE7e,GAAMgV,OAAOc,EAAIiG,IAAI8C,OAAOmD,IAAI4B,MAGvC5jB,CACT,EAEAshB,GAAMtvB,UAAUsM,QAAU,WACxB,OAAIrJ,KAAK4uB,aACA,sBACF,gBAAkB5uB,KAAKmT,EAAEmI,UAAUzT,SAAS,GAAI,GACnD,OAAS7H,KAAKoT,EAAEkI,UAAUzT,SAAS,GAAI,GAAK,GAClD,EAEAwkB,GAAMtvB,UAAU6xB,WAAa,WAC3B,OAAO5uB,KAAKusB,GACd,EAEAF,GAAMtvB,UAAU2Q,IAAM,SAAa8G,GAEjC,GAAIxU,KAAKusB,IACP,OAAO/X,EAGT,GAAIA,EAAE+X,IACJ,OAAOvsB,KAGT,GAAIA,KAAKgb,GAAGxG,GACV,OAAOxU,KAAKurB,MAGd,GAAIvrB,KAAKsM,MAAM0O,GAAGxG,GAChB,OAAOxU,KAAK+oB,MAAME,MAAM,KAAM,MAGhC,GAAwB,IAApBjpB,KAAKmT,EAAEzL,IAAI8M,EAAErB,GACf,OAAOnT,KAAK+oB,MAAME,MAAM,KAAM,MAEhC,IAAIhrB,EAAI+B,KAAKoT,EAAEuI,OAAOnH,EAAEpB,GACN,IAAdnV,EAAEkc,KAAK,KACTlc,EAAIA,EAAE8d,OAAO/b,KAAKmT,EAAEwI,OAAOnH,EAAErB,GAAGoJ,YAClC,IAAIsS,EAAK5wB,EAAEie,SAASN,QAAQ5b,KAAKmT,GAAGyI,QAAQpH,EAAErB,GAC1C2b,EAAK7wB,EAAE8d,OAAO/b,KAAKmT,EAAEwI,OAAOkT,IAAKjT,QAAQ5b,KAAKoT,GAClD,OAAOpT,KAAK+oB,MAAME,MAAM4F,EAAIC,EAC9B,EAEAzC,GAAMtvB,UAAUwuB,IAAM,WACpB,GAAIvrB,KAAKusB,IACP,OAAOvsB,KAGT,IAAI+uB,EAAM/uB,KAAKoT,EAAEqI,OAAOzb,KAAKoT,GAC7B,GAAoB,IAAhB2b,EAAI5U,KAAK,GACX,OAAOna,KAAK+oB,MAAME,MAAM,KAAM,MAEhC,IAAIhoB,EAAIjB,KAAK+oB,MAAM9nB,EAEfgZ,EAAKja,KAAKmT,EAAE+I,SACZ8S,EAAQD,EAAIxS,UACZte,EAAIgc,EAAGwB,OAAOxB,GAAIyB,QAAQzB,GAAIyB,QAAQza,GAAG8a,OAAOiT,GAEhDH,EAAK5wB,EAAEie,SAASN,QAAQ5b,KAAKmT,EAAEsI,OAAOzb,KAAKmT,IAC3C2b,EAAK7wB,EAAE8d,OAAO/b,KAAKmT,EAAEwI,OAAOkT,IAAKjT,QAAQ5b,KAAKoT,GAClD,OAAOpT,KAAK+oB,MAAME,MAAM4F,EAAIC,EAC9B,EAEAzC,GAAMtvB,UAAUiuB,KAAO,WACrB,OAAOhrB,KAAKmT,EAAEmI,SAChB,EAEA+Q,GAAMtvB,UAAUkuB,KAAO,WACrB,OAAOjrB,KAAKoT,EAAEkI,SAChB,EAEA+Q,GAAMtvB,UAAU+J,IAAM,SAAa0D,GAEjC,OADAA,EAAI,IAAIhF,IAAJ,CAAOgF,EAAG,IACVxK,KAAK4uB,aACA5uB,KACAA,KAAKsrB,YAAY9gB,GACjBxK,KAAK+oB,MAAMI,aAAanpB,KAAMwK,GAC9BxK,KAAK+oB,MAAMkD,KACXjsB,KAAK+oB,MAAMqF,gBAAgB,CAAEpuB,MAAQ,CAAEwK,IAEvCxK,KAAK+oB,MAAMe,SAAS9pB,KAAMwK,EACrC,EAEA6hB,GAAMtvB,UAAUkyB,OAAS,SAAgBhI,EAAI8G,EAAI7G,GAC/C,IAAI0C,EAAS,CAAE5pB,KAAM+tB,GACjB3D,EAAS,CAAEnD,EAAIC,GACnB,OAAIlnB,KAAK+oB,MAAMkD,KACNjsB,KAAK+oB,MAAMqF,gBAAgBxE,EAAQQ,GAEnCpqB,KAAK+oB,MAAMmB,YAAY,EAAGN,EAAQQ,EAAQ,EACrD,EAEAiC,GAAMtvB,UAAUmyB,QAAU,SAAiBjI,EAAI8G,EAAI7G,GACjD,IAAI0C,EAAS,CAAE5pB,KAAM+tB,GACjB3D,EAAS,CAAEnD,EAAIC,GACnB,OAAIlnB,KAAK+oB,MAAMkD,KACNjsB,KAAK+oB,MAAMqF,gBAAgBxE,EAAQQ,GAAQ,GAE3CpqB,KAAK+oB,MAAMmB,YAAY,EAAGN,EAAQQ,EAAQ,GAAG,EACxD,EAEAiC,GAAMtvB,UAAUie,GAAK,SAAYxG,GAC/B,OAAOxU,OAASwU,GACTxU,KAAKusB,MAAQ/X,EAAE+X,MACVvsB,KAAKusB,KAA2B,IAApBvsB,KAAKmT,EAAEzL,IAAI8M,EAAErB,IAAgC,IAApBnT,KAAKoT,EAAE1L,IAAI8M,EAAEpB,GAChE,EAEAiZ,GAAMtvB,UAAUuP,IAAM,SAAa6iB,GACjC,GAAInvB,KAAKusB,IACP,OAAOvsB,KAET,IAAI+K,EAAM/K,KAAK+oB,MAAME,MAAMjpB,KAAKmT,EAAGnT,KAAKoT,EAAEoJ,UAC1C,GAAI2S,GAAenvB,KAAKgpB,YAAa,CACnC,IAAInI,EAAM7gB,KAAKgpB,YACXoG,EAAS,SAAS5a,GACpB,OAAOA,EAAElI,KACf,EACIvB,EAAIie,YAAc,CAChBlC,IAAKjG,EAAIiG,KAAO,CACdlI,IAAKiC,EAAIiG,IAAIlI,IACbgL,OAAQ/I,EAAIiG,IAAI8C,OAAOmD,IAAIqC,IAE7BhG,QAASvI,EAAIuI,SAAW,CACtBG,KAAM1I,EAAIuI,QAAQG,KAClBK,OAAQ/I,EAAIuI,QAAQQ,OAAOmD,IAAIqC,IAGvC,CACE,OAAOrkB,CACT,EAEAshB,GAAMtvB,UAAUytB,IAAM,WACpB,OAAIxqB,KAAKusB,IACAvsB,KAAK+oB,MAAMW,OAAO,KAAM,KAAM,MAE7B1pB,KAAK+oB,MAAMW,OAAO1pB,KAAKmT,EAAGnT,KAAKoT,EAAGpT,KAAK+oB,MAAMxK,IAEzD,EAsBArZ,EAASsnB,GAAQX,EAAK/C,WAEtB8C,GAAW7uB,UAAU2sB,OAAS,SAAgBvW,EAAGC,EAAGsL,GAClD,OAAO,IAAI8N,GAAOxsB,KAAMmT,EAAGC,EAAGsL,EAChC,EAEA8N,GAAOzvB,UAAU8sB,IAAM,WACrB,GAAI7pB,KAAK4uB,aACP,OAAO5uB,KAAK+oB,MAAME,MAAM,KAAM,MAEhC,IAAIoG,EAAOrvB,KAAK0e,EAAEnC,UACd+S,EAAQD,EAAKnT,SACbgS,EAAKluB,KAAKmT,EAAE4I,OAAOuT,GACnBC,EAAKvvB,KAAKoT,EAAE2I,OAAOuT,GAAOvT,OAAOsT,GAErC,OAAOrvB,KAAK+oB,MAAME,MAAMiF,EAAIqB,EAC9B,EAEA/C,GAAOzvB,UAAUuP,IAAM,WACrB,OAAOtM,KAAK+oB,MAAMW,OAAO1pB,KAAKmT,EAAGnT,KAAKoT,EAAEoJ,SAAUxc,KAAK0e,EACzD,EAEA8N,GAAOzvB,UAAU2Q,IAAM,SAAa8G,GAElC,GAAIxU,KAAK4uB,aACP,OAAOpa,EAGT,GAAIA,EAAEoa,aACJ,OAAO5uB,KAGT,IAAIwvB,EAAMhb,EAAEkK,EAAExC,SACVuT,EAAKzvB,KAAK0e,EAAExC,SACZqL,EAAKvnB,KAAKmT,EAAE4I,OAAOyT,GACnBhI,EAAKhT,EAAErB,EAAE4I,OAAO0T,GAChBC,EAAK1vB,KAAKoT,EAAE2I,OAAOyT,EAAIzT,OAAOvH,EAAEkK,IAChCiR,EAAKnb,EAAEpB,EAAE2I,OAAO0T,EAAG1T,OAAO/b,KAAK0e,IAE/BxH,EAAIqQ,EAAG5L,OAAO6L,GACd1mB,EAAI4uB,EAAG/T,OAAOgU,GAClB,GAAkB,IAAdzY,EAAEiD,KAAK,GACT,OAAkB,IAAdrZ,EAAEqZ,KAAK,GACFna,KAAK+oB,MAAMW,OAAO,KAAM,KAAM,MAE9B1pB,KAAKurB,MAGhB,IAAIqE,EAAK1Y,EAAEgF,SACP2T,EAAKD,EAAG7T,OAAO7E,GACftY,EAAI2oB,EAAGxL,OAAO6T,GAEdf,EAAK/tB,EAAEob,SAASR,QAAQmU,GAAIjU,QAAQhd,GAAGgd,QAAQhd,GAC/CkwB,EAAKhuB,EAAEib,OAAOnd,EAAEgd,QAAQiT,IAAKjT,QAAQ8T,EAAG3T,OAAO8T,IAC/CC,EAAK9vB,KAAK0e,EAAE3C,OAAOvH,EAAEkK,GAAG3C,OAAO7E,GAEnC,OAAOlX,KAAK+oB,MAAMW,OAAOmF,EAAIC,EAAIgB,EACnC,EAEAtD,GAAOzvB,UAAU4sB,SAAW,SAAkBnV,GAE5C,GAAIxU,KAAK4uB,aACP,OAAOpa,EAAEgW,MAGX,GAAIhW,EAAEoa,aACJ,OAAO5uB,KAGT,IAAIyvB,EAAKzvB,KAAK0e,EAAExC,SACZqL,EAAKvnB,KAAKmT,EACVqU,EAAKhT,EAAErB,EAAE4I,OAAO0T,GAChBC,EAAK1vB,KAAKoT,EACVuc,EAAKnb,EAAEpB,EAAE2I,OAAO0T,GAAI1T,OAAO/b,KAAK0e,GAEhCxH,EAAIqQ,EAAG5L,OAAO6L,GACd1mB,EAAI4uB,EAAG/T,OAAOgU,GAClB,GAAkB,IAAdzY,EAAEiD,KAAK,GACT,OAAkB,IAAdrZ,EAAEqZ,KAAK,GACFna,KAAK+oB,MAAMW,OAAO,KAAM,KAAM,MAE9B1pB,KAAKurB,MAGhB,IAAIqE,EAAK1Y,EAAEgF,SACP2T,EAAKD,EAAG7T,OAAO7E,GACftY,EAAI2oB,EAAGxL,OAAO6T,GAEdf,EAAK/tB,EAAEob,SAASR,QAAQmU,GAAIjU,QAAQhd,GAAGgd,QAAQhd,GAC/CkwB,EAAKhuB,EAAEib,OAAOnd,EAAEgd,QAAQiT,IAAKjT,QAAQ8T,EAAG3T,OAAO8T,IAC/CC,EAAK9vB,KAAK0e,EAAE3C,OAAO7E,GAEvB,OAAOlX,KAAK+oB,MAAMW,OAAOmF,EAAIC,EAAIgB,EACnC,EAEAtD,GAAOzvB,UAAUktB,KAAO,SAAcphB,GACpC,GAAY,IAARA,EACF,OAAO7I,KACT,GAAIA,KAAK4uB,aACP,OAAO5uB,KACT,IAAK6I,EACH,OAAO7I,KAAKurB,MAEd,IAAIlvB,EACJ,GAAI2D,KAAK+oB,MAAMgD,OAAS/rB,KAAK+oB,MAAMiD,OAAQ,CACzC,IAAIlrB,EAAId,KACR,IAAK3D,EAAI,EAAGA,EAAIwM,EAAKxM,IACnByE,EAAIA,EAAEyqB,MACR,OAAOzqB,CACX,CAIE,IAAIG,EAAIjB,KAAK+oB,MAAM9nB,EACf6qB,EAAO9rB,KAAK+oB,MAAM+C,KAElBiE,EAAK/vB,KAAKmT,EACV6c,EAAKhwB,KAAKoT,EACV6c,EAAKjwB,KAAK0e,EACVwR,EAAMD,EAAG/T,SAASA,SAGlBiU,EAAMH,EAAGvU,OAAOuU,GACpB,IAAK3zB,EAAI,EAAGA,EAAIwM,EAAKxM,IAAK,CACxB,IAAI+zB,EAAML,EAAG7T,SACTmU,EAAOF,EAAIjU,SACXoU,EAAOD,EAAKnU,SACZje,EAAImyB,EAAI3U,OAAO2U,GAAK1U,QAAQ0U,GAAK1U,QAAQza,EAAE8a,OAAOmU,IAElDK,EAAKR,EAAGhU,OAAOsU,GACfxB,EAAK5wB,EAAEie,SAASN,QAAQ2U,EAAG9U,OAAO8U,IAClCC,EAAKD,EAAG3U,QAAQiT,GAChB4B,EAAMxyB,EAAE8d,OAAOyU,GACnBC,EAAMA,EAAI/U,QAAQ+U,GAAK7U,QAAQ0U,GAC/B,IAAIR,EAAKK,EAAIpU,OAAOkU,GAChB5zB,EAAI,EAAIwM,IACVqnB,EAAMA,EAAInU,OAAOuU,IAEnBP,EAAKlB,EACLoB,EAAKH,EACLK,EAAMM,CACV,CAEE,OAAOzwB,KAAK+oB,MAAMW,OAAOqG,EAAII,EAAIpU,OAAO+P,GAAOmE,EACjD,EAEAzD,GAAOzvB,UAAUwuB,IAAM,WACrB,OAAIvrB,KAAK4uB,aACA5uB,KAELA,KAAK+oB,MAAMgD,MACN/rB,KAAK0wB,WACL1wB,KAAK+oB,MAAMiD,OACXhsB,KAAK2wB,YAEL3wB,KAAK4wB,MAChB,EAEApE,GAAOzvB,UAAU2zB,SAAW,WAC1B,IAAI7B,EACAC,EACAgB,EAEJ,GAAI9vB,KAAKysB,KAAM,CAMb,IAAIoE,EAAK7wB,KAAKmT,EAAE+I,SAEZ4U,EAAK9wB,KAAKoT,EAAE8I,SAEZ6U,EAAOD,EAAG5U,SAEVhI,EAAIlU,KAAKmT,EAAEsI,OAAOqV,GAAI5U,SAASN,QAAQiV,GAAIjV,QAAQmV,GACvD7c,EAAIA,EAAEwH,QAAQxH,GAEd,IAAIgB,EAAI2b,EAAGpV,OAAOoV,GAAInV,QAAQmV,GAE1BhwB,EAAIqU,EAAEgH,SAASN,QAAQ1H,GAAG0H,QAAQ1H,GAGlC8c,EAAQD,EAAKrV,QAAQqV,GAEzBC,GADAA,EAAQA,EAAMtV,QAAQsV,IACRtV,QAAQsV,GAGtBnC,EAAKhuB,EAELiuB,EAAK5Z,EAAE6G,OAAO7H,EAAE0H,QAAQ/a,IAAI+a,QAAQoV,GAEpClB,EAAK9vB,KAAKoT,EAAEqI,OAAOzb,KAAKoT,EAC5B,KAAS,CAML,IAAInS,EAAIjB,KAAKmT,EAAE+I,SAEXnV,EAAI/G,KAAKoT,EAAE8I,SAEXje,EAAI8I,EAAEmV,SAEN+U,EAAIjxB,KAAKmT,EAAEsI,OAAO1U,GAAGmV,SAASN,QAAQ3a,GAAG2a,QAAQ3d,GACrDgzB,EAAIA,EAAEvV,QAAQuV,GAEd,IAAI5qB,EAAIpF,EAAEwa,OAAOxa,GAAGya,QAAQza,GAExBiwB,EAAI7qB,EAAE6V,SAGNiV,EAAKlzB,EAAEyd,QAAQzd,GAEnBkzB,GADAA,EAAKA,EAAGzV,QAAQyV,IACRzV,QAAQyV,GAGhBtC,EAAKqC,EAAEtV,QAAQqV,GAAGrV,QAAQqV,GAE1BnC,EAAKzoB,EAAE0V,OAAOkV,EAAErV,QAAQiT,IAAKjT,QAAQuV,GAGrCrB,GADAA,EAAK9vB,KAAKoT,EAAE2I,OAAO/b,KAAK0e,IAChBhD,QAAQoU,EACpB,CAEE,OAAO9vB,KAAK+oB,MAAMW,OAAOmF,EAAIC,EAAIgB,EACnC,EAEAtD,GAAOzvB,UAAU4zB,UAAY,WAC3B,IAAI9B,EACAC,EACAgB,EAEJ,GAAI9vB,KAAKysB,KAAM,CAMb,IAAIoE,EAAK7wB,KAAKmT,EAAE+I,SAEZ4U,EAAK9wB,KAAKoT,EAAE8I,SAEZ6U,EAAOD,EAAG5U,SAEVhI,EAAIlU,KAAKmT,EAAEsI,OAAOqV,GAAI5U,SAASN,QAAQiV,GAAIjV,QAAQmV,GACvD7c,EAAIA,EAAEwH,QAAQxH,GAEd,IAAIgB,EAAI2b,EAAGpV,OAAOoV,GAAInV,QAAQmV,GAAInV,QAAQ1b,KAAK+oB,MAAM9nB,GAEjDJ,EAAIqU,EAAEgH,SAASN,QAAQ1H,GAAG0H,QAAQ1H,GAEtC2a,EAAKhuB,EAEL,IAAImwB,EAAQD,EAAKrV,QAAQqV,GAEzBC,GADAA,EAAQA,EAAMtV,QAAQsV,IACRtV,QAAQsV,GACtBlC,EAAK5Z,EAAE6G,OAAO7H,EAAE0H,QAAQ/a,IAAI+a,QAAQoV,GAEpClB,EAAK9vB,KAAKoT,EAAEqI,OAAOzb,KAAKoT,EAC5B,KAAS,CAKL,IAAI8G,EAAQla,KAAK0e,EAAExC,SAEfkV,EAAQpxB,KAAKoT,EAAE8I,SAEfkP,EAAOprB,KAAKmT,EAAE4I,OAAOqV,GAErBC,EAAQrxB,KAAKmT,EAAEwI,OAAOzB,GAAO6B,OAAO/b,KAAKmT,EAAEsI,OAAOvB,IACtDmX,EAAQA,EAAM5V,OAAO4V,GAAO3V,QAAQ2V,GAEpC,IAAIC,EAAQlG,EAAK1P,QAAQ0P,GAErBmG,GADJD,EAAQA,EAAM5V,QAAQ4V,IACJ7V,OAAO6V,GACzBzC,EAAKwC,EAAMnV,SAASN,QAAQ2V,GAE5BzB,EAAK9vB,KAAKoT,EAAEqI,OAAOzb,KAAK0e,GAAGxC,SAASN,QAAQwV,GAAOxV,QAAQ1B,GAE3D,IAAIsX,EAAUJ,EAAMlV,SAGpBsV,GADAA,GADAA,EAAUA,EAAQ9V,QAAQ8V,IACR9V,QAAQ8V,IACR9V,QAAQ8V,GAC1B1C,EAAKuC,EAAMtV,OAAOuV,EAAM1V,QAAQiT,IAAKjT,QAAQ4V,EACjD,CAEE,OAAOxxB,KAAK+oB,MAAMW,OAAOmF,EAAIC,EAAIgB,EACnC,EAEAtD,GAAOzvB,UAAU6zB,KAAO,WACtB,IAAI3vB,EAAIjB,KAAK+oB,MAAM9nB,EAGf8uB,EAAK/vB,KAAKmT,EACV6c,EAAKhwB,KAAKoT,EACV6c,EAAKjwB,KAAK0e,EACVwR,EAAMD,EAAG/T,SAASA,SAElBkU,EAAML,EAAG7T,SACTuV,EAAMzB,EAAG9T,SAETje,EAAImyB,EAAI3U,OAAO2U,GAAK1U,QAAQ0U,GAAK1U,QAAQza,EAAE8a,OAAOmU,IAElDwB,EAAO3B,EAAGtU,OAAOsU,GAEjBQ,GADJmB,EAAOA,EAAKhW,QAAQgW,IACN3V,OAAO0V,GACjB5C,EAAK5wB,EAAEie,SAASN,QAAQ2U,EAAG9U,OAAO8U,IAClCC,EAAKD,EAAG3U,QAAQiT,GAEhB8C,EAAOF,EAAIvV,SAGfyV,GADAA,GADAA,EAAOA,EAAKjW,QAAQiW,IACRjW,QAAQiW,IACRjW,QAAQiW,GACpB,IAAI7C,EAAK7wB,EAAE8d,OAAOyU,GAAI5U,QAAQ+V,GAC1B7B,EAAKE,EAAGvU,OAAOuU,GAAIjU,OAAOkU,GAE9B,OAAOjwB,KAAK+oB,MAAMW,OAAOmF,EAAIC,EAAIgB,EACnC,EAEAtD,GAAOzvB,UAAU60B,KAAO,WACtB,IAAK5xB,KAAK+oB,MAAMgD,MACd,OAAO/rB,KAAKurB,MAAM7d,IAAI1N,MAMxB,IAAI6wB,EAAK7wB,KAAKmT,EAAE+I,SAEZ4U,EAAK9wB,KAAKoT,EAAE8I,SAEZ2V,EAAK7xB,KAAK0e,EAAExC,SAEZ6U,EAAOD,EAAG5U,SAEVhH,EAAI2b,EAAGpV,OAAOoV,GAAInV,QAAQmV,GAE1BiB,EAAK5c,EAAEgH,SAEP7V,EAAIrG,KAAKmT,EAAEsI,OAAOqV,GAAI5U,SAASN,QAAQiV,GAAIjV,QAAQmV,GAKnDgB,GAFJ1rB,GADAA,GADAA,EAAIA,EAAEqV,QAAQrV,IACRoV,OAAOpV,GAAGqV,QAAQrV,IAClBuV,QAAQkW,IAEH5V,SAEPrb,EAAIkwB,EAAKrV,QAAQqV,GAGrBlwB,GADAA,GADAA,EAAIA,EAAE6a,QAAQ7a,IACR6a,QAAQ7a,IACR6a,QAAQ7a,GAEd,IAAIme,EAAI9J,EAAEwG,QAAQrV,GAAG6V,SAASN,QAAQkW,GAAIlW,QAAQmW,GAAInW,QAAQ/a,GAE1DmxB,EAAOlB,EAAG/U,OAAOiD,GAErBgT,GADAA,EAAOA,EAAKtW,QAAQsW,IACRtW,QAAQsW,GACpB,IAAInD,EAAK7uB,KAAKmT,EAAE4I,OAAOgW,GAAInW,QAAQoW,GAEnCnD,GADAA,EAAKA,EAAGnT,QAAQmT,IACRnT,QAAQmT,GAEhB,IAAIC,EAAK9uB,KAAKoT,EAAE2I,OAAOiD,EAAEjD,OAAOlb,EAAE+a,QAAQoD,IAAIpD,QAAQvV,EAAE0V,OAAOgW,KAG/DjD,GADAA,GADAA,EAAKA,EAAGpT,QAAQoT,IACRpT,QAAQoT,IACRpT,QAAQoT,GAEhB,IAAIgB,EAAK9vB,KAAK0e,EAAEjD,OAAOpV,GAAG6V,SAASN,QAAQiW,GAAIjW,QAAQmW,GAEvD,OAAO/xB,KAAK+oB,MAAMW,OAAOmF,EAAIC,EAAIgB,EACnC,EAEAtD,GAAOzvB,UAAU+J,IAAM,SAAa0D,EAAGynB,GAGrC,OAFAznB,EAAI,IAAIhF,IAAJ,CAAOgF,EAAGynB,GAEPjyB,KAAK+oB,MAAMe,SAAS9pB,KAAMwK,EACnC,EAEAgiB,GAAOzvB,UAAUie,GAAK,SAAYxG,GAChC,GAAe,WAAXA,EAAE8K,KACJ,OAAOtf,KAAKgb,GAAGxG,EAAEgW,OAEnB,GAAIxqB,OAASwU,EACX,OAAO,EAGT,IAAIib,EAAKzvB,KAAK0e,EAAExC,SACZsT,EAAMhb,EAAEkK,EAAExC,SACd,GAA2D,IAAvDlc,KAAKmT,EAAE4I,OAAOyT,GAAK5T,QAAQpH,EAAErB,EAAE4I,OAAO0T,IAAKtV,KAAK,GAClD,OAAO,EAGT,IAAI+X,EAAKzC,EAAG1T,OAAO/b,KAAK0e,GACpByT,EAAM3C,EAAIzT,OAAOvH,EAAEkK,GACvB,OAA8D,IAAvD1e,KAAKoT,EAAE2I,OAAOoW,GAAKvW,QAAQpH,EAAEpB,EAAE2I,OAAOmW,IAAK/X,KAAK,EACzD,EAEAqS,GAAOzvB,UAAUq1B,OAAS,SAAgBjf,GACxC,IAAIkf,EAAKryB,KAAK0e,EAAExC,SACZnH,EAAK5B,EAAE+H,MAAMlb,KAAK+oB,MAAMhjB,KAAKgW,OAAOsW,GACxC,GAAuB,IAAnBryB,KAAKmT,EAAEzL,IAAIqN,GACb,OAAO,EAIT,IAFA,IAAIud,EAAKnf,EAAEpK,QACPlI,EAAIb,KAAK+oB,MAAMH,KAAK7M,OAAOsW,KACtB,CAEP,GADAC,EAAG9kB,KAAKxN,KAAK+oB,MAAM9T,GACfqd,EAAG5qB,IAAI1H,KAAK+oB,MAAMvU,IAAM,EAC1B,OAAO,EAGT,GADAO,EAAG2G,QAAQ7a,GACY,IAAnBb,KAAKmT,EAAEzL,IAAIqN,GACb,OAAO,CACb,CACA,EAEAyX,GAAOzvB,UAAUsM,QAAU,WACzB,OAAIrJ,KAAK4uB,aACA,uBACF,iBAAmB5uB,KAAKmT,EAAEtL,SAAS,GAAI,GAC1C,OAAS7H,KAAKoT,EAAEvL,SAAS,GAAI,GAC7B,OAAS7H,KAAK0e,EAAE7W,SAAS,GAAI,GAAK,GACxC,EAEA2kB,GAAOzvB,UAAU6xB,WAAa,WAE5B,OAA0B,IAAnB5uB,KAAK0e,EAAEvE,KAAK,EACrB,E,wBCv6BA,IAAI4O,EAAQ/kB,EAEZ+kB,EAAMrjB,KAAO6sB,EACbxJ,EAAMyJ,MAAQC,GACd1J,EAAMhK,KAAI,KACVgK,EAAM2J,QAAO,I,wBCLb,IAsKI7R,EAtKA8R,EAAS3uB,EAMTe,EAAS1B,EAAM0B,OAEnB,SAAS6tB,EAAYC,GACE,UAAjBA,EAAQvT,KACVtf,KAAK+oB,MAAQ,IAAIA,GAAMyJ,MAAMK,GACL,YAAjBA,EAAQvT,KACftf,KAAK+oB,MAAQ,IAAIA,GAAM2J,QAAQG,GAE/B7yB,KAAK+oB,MAAQ,IAAIA,GAAMhK,KAAK8T,GAC9B7yB,KAAKuZ,EAAIvZ,KAAK+oB,MAAMxP,EACpBvZ,KAAKiV,EAAIjV,KAAK+oB,MAAM9T,EACpBjV,KAAKoE,KAAOyuB,EAAQzuB,KAEpBW,EAAO/E,KAAKuZ,EAAE2P,WAAY,iBAC1BnkB,EAAO/E,KAAKuZ,EAAEzS,IAAI9G,KAAKiV,GAAG2Z,aAAc,0BAC1C,CAGA,SAASkE,EAAYl2B,EAAMi2B,GACzB5yB,OAAOC,eAAeyyB,EAAQ/1B,EAAM,CAClC+uB,cAAc,EACdF,YAAY,EACZsH,IAAK,WACH,IAAIhK,EAAQ,IAAI6J,EAAYC,GAM5B,OALA5yB,OAAOC,eAAeyyB,EAAQ/1B,EAAM,CAClC+uB,cAAc,EACdF,YAAY,EACZzvB,MAAO+sB,IAEFA,CACb,GAEA,CAhBA4J,EAAOC,YAAcA,EAkBrBE,EAAY,OAAQ,CAClBxT,KAAM,QACNhC,MAAO,OACP9I,EAAG,wDACHvT,EAAG,wDACH8F,EAAG,wDACHkO,EAAG,wDACH7Q,KAAMA,IAAAA,OACNikB,MAAM,EACN9O,EAAG,CACD,wDACA,2DAIJuZ,EAAY,OAAQ,CAClBxT,KAAM,QACNhC,MAAO,OACP9I,EAAG,iEACHvT,EAAG,iEACH8F,EAAG,iEACHkO,EAAG,iEACH7Q,KAAMA,IAAAA,OACNikB,MAAM,EACN9O,EAAG,CACD,iEACA,oEAIJuZ,EAAY,OAAQ,CAClBxT,KAAM,QACNhC,MAAO,KACP9I,EAAG,0EACHvT,EAAG,0EACH8F,EAAG,0EACHkO,EAAG,0EACH7Q,KAAMA,IAAAA,OACNikB,MAAM,EACN9O,EAAG,CACD,0EACA,6EAIJuZ,EAAY,OAAQ,CAClBxT,KAAM,QACNhC,MAAO,KACP9I,EAAG,8GAEHvT,EAAG,8GAEH8F,EAAG,8GAEHkO,EAAG,8GAEH7Q,KAAMA,IAAAA,OACNikB,MAAM,EACN9O,EAAG,CACD,8GAEA,iHAKJuZ,EAAY,OAAQ,CAClBxT,KAAM,QACNhC,MAAO,KACP9I,EAAG,2JAGHvT,EAAG,2JAGH8F,EAAG,2JAGHkO,EAAG,2JAGH7Q,KAAMA,IAAAA,OACNikB,MAAM,EACN9O,EAAG,CACD,2JAGA,8JAMJuZ,EAAY,aAAc,CACxBxT,KAAM,OACNhC,MAAO,SACP9I,EAAG,sEACHvT,EAAG,QACH8F,EAAG,IACHkO,EAAG,sEACH7Q,KAAMA,IAAAA,OACNikB,MAAM,EACN9O,EAAG,CACD,OAIJuZ,EAAY,UAAW,CACrBxT,KAAM,UACNhC,MAAO,SACP9I,EAAG,sEACHvT,EAAG,KACHhD,EAAG,IAEHgzB,EAAG,sEACHhc,EAAG,sEACH7Q,KAAMA,IAAAA,OACNikB,MAAM,EACN9O,EAAG,CACD,mEAGA,sEAKJ,IACEsH,EAAG,YAGL,CAFE,MAAOxa,GACPwa,OAAM7C,CACR,CAEA8U,EAAY,YAAa,CACvBxT,KAAM,QACNhC,MAAO,OACP9I,EAAG,0EACHvT,EAAG,IACH8F,EAAG,IACHkO,EAAG,0EACHiC,EAAG,IACH9S,KAAMA,IAAAA,OAGNgnB,KAAM,mEACNsB,OAAQ,mEACRI,MAAO,CACL,CACE7rB,EAAG,mCACH8F,EAAG,qCAEL,CACE9F,EAAG,oCACH8F,EAAG,qCAIPshB,MAAM,EACN9O,EAAG,CACD,mEACA,mEACAsH,I,ICrMJ,SAASmS,GAASH,GAChB,KAAM7yB,gBAAgBgzB,IACpB,OAAO,IAAIA,GAASH,GACtB7yB,KAAKoE,KAAOyuB,EAAQzuB,KACpBpE,KAAKizB,aAAeJ,EAAQI,WAE5BjzB,KAAKme,OAASne,KAAKoE,KAAK8uB,QACxBlzB,KAAKmzB,WAAaN,EAAQM,YAAcnzB,KAAKoE,KAAKgvB,aAElDpzB,KAAKqzB,QAAU,KACfrzB,KAAKszB,eAAiB,KACtBtzB,KAAKuzB,EAAI,KACTvzB,KAAKwzB,EAAI,KAET,IAAIC,EAAUpwB,EAAM4E,QAAQ4qB,EAAQY,QAASZ,EAAQa,YAAc,OAC/D9N,EAAQviB,EAAM4E,QAAQ4qB,EAAQjN,MAAOiN,EAAQc,UAAY,OACzDC,EAAOvwB,EAAM4E,QAAQ4qB,EAAQe,KAAMf,EAAQgB,SAAW,OAC1D9uB,EAAO0uB,EAAQr3B,QAAW4D,KAAKmzB,WAAa,EACrC,mCAAqCnzB,KAAKmzB,WAAa,SAC9DnzB,KAAKgG,MAAMytB,EAAS7N,EAAOgO,EAC7B,CACA,OAAiBZ,GAEjBA,GAASj2B,UAAUiJ,MAAQ,SAAcytB,EAAS7N,EAAOgO,GACvD,IAAIE,EAAOL,EAAQ1T,OAAO6F,GAAO7F,OAAO6T,GAExC5zB,KAAKuzB,EAAI,IAAIz2B,MAAMkD,KAAKme,OAAS,GACjCne,KAAKwzB,EAAI,IAAI12B,MAAMkD,KAAKme,OAAS,GACjC,IAAK,IAAI9hB,EAAI,EAAGA,EAAI2D,KAAKwzB,EAAEp3B,OAAQC,IACjC2D,KAAKuzB,EAAEl3B,GAAK,EACZ2D,KAAKwzB,EAAEn3B,GAAK,EAGd2D,KAAK+zB,QAAQD,GACb9zB,KAAKqzB,QAAU,EACfrzB,KAAKszB,eAAiB,eACxB,EAEAN,GAASj2B,UAAUi3B,MAAQ,WACzB,OAAO,IAAI5vB,IAAAA,MAAUpE,KAAKoE,KAAMpE,KAAKuzB,EACvC,EAEAP,GAASj2B,UAAUg3B,QAAU,SAAgBD,GAC3C,IAAIG,EAAOj0B,KAAKg0B,QACA3vB,OAAOrE,KAAKwzB,GACZnvB,OAAO,CAAE,IACrByvB,IACFG,EAAOA,EAAK5vB,OAAOyvB,IACrB9zB,KAAKuzB,EAAIU,EAAK1vB,SACdvE,KAAKwzB,EAAIxzB,KAAKg0B,QAAQ3vB,OAAOrE,KAAKwzB,GAAGjvB,SAChCuvB,IAGL9zB,KAAKuzB,EAAIvzB,KAAKg0B,QACA3vB,OAAOrE,KAAKwzB,GACZnvB,OAAO,CAAE,IACTA,OAAOyvB,GACPvvB,SACdvE,KAAKwzB,EAAIxzB,KAAKg0B,QAAQ3vB,OAAOrE,KAAKwzB,GAAGjvB,SACvC,EAEAyuB,GAASj2B,UAAUm3B,OAAS,SAAgBT,EAASC,EAAYhmB,EAAKymB,GAE1C,kBAAfT,IACTS,EAASzmB,EACTA,EAAMgmB,EACNA,EAAa,MAGfD,EAAUpwB,EAAM4E,QAAQwrB,EAASC,GACjChmB,EAAMrK,EAAM4E,QAAQyF,EAAKymB,GAEzBpvB,EAAO0uB,EAAQr3B,QAAW4D,KAAKmzB,WAAa,EACrC,mCAAqCnzB,KAAKmzB,WAAa,SAE9DnzB,KAAK+zB,QAAQN,EAAQ1T,OAAOrS,GAAO,KACnC1N,KAAKqzB,QAAU,CACjB,EAEAL,GAASj2B,UAAUq3B,SAAW,SAAkBptB,EAAKyf,EAAK/Y,EAAKymB,GAC7D,GAAIn0B,KAAKqzB,QAAUrzB,KAAKszB,eACtB,MAAM,IAAIp2B,MAAM,sBAGC,kBAARupB,IACT0N,EAASzmB,EACTA,EAAM+Y,EACNA,EAAM,MAIJ/Y,IACFA,EAAMrK,EAAM4E,QAAQyF,EAAKymB,GAAU,OACnCn0B,KAAK+zB,QAAQrmB,IAIf,IADA,IAAI2mB,EAAO,GACJA,EAAKj4B,OAAS4K,GACnBhH,KAAKwzB,EAAIxzB,KAAKg0B,QAAQ3vB,OAAOrE,KAAKwzB,GAAGjvB,SACrC8vB,EAAOA,EAAKtU,OAAO/f,KAAKwzB,GAG1B,IAAIzoB,EAAMspB,EAAKx3B,MAAM,EAAGmK,GAGxB,OAFAhH,KAAK+zB,QAAQrmB,GACb1N,KAAKqzB,UACEhwB,EAAM4e,OAAOlX,EAAK0b,EAC3B,EC5GA,IAAI1hB,GAAS1B,EAAM0B,OAEnB,SAASuvB,GAAQC,EAAI1B,GACnB7yB,KAAKu0B,GAAKA,EACVv0B,KAAKw0B,KAAO,KACZx0B,KAAKy0B,IAAM,KAGP5B,EAAQ2B,MACVx0B,KAAK00B,eAAe7B,EAAQ2B,KAAM3B,EAAQ8B,SACxC9B,EAAQ4B,KACVz0B,KAAK40B,cAAc/B,EAAQ4B,IAAK5B,EAAQgC,OAC5C,CACA,OAAiBP,GAEjBA,GAAQQ,WAAa,SAAoBP,EAAIE,EAAKhO,GAChD,OAAIgO,aAAeH,GACVG,EAEF,IAAIH,GAAQC,EAAI,CACrBE,IAAKA,EACLI,OAAQpO,GAEZ,EAEA6N,GAAQS,YAAc,SAAqBR,EAAIC,EAAM/N,GACnD,OAAI+N,aAAgBF,GACXE,EAEF,IAAIF,GAAQC,EAAI,CACrBC,KAAMA,EACNG,QAASlO,GAEb,EAEA6N,GAAQv3B,UAAUmsB,SAAW,WAC3B,IAAIuL,EAAMz0B,KAAKg1B,YAEf,OAAIP,EAAI7F,aACC,CAAE7wB,QAAQ,EAAOk3B,OAAQ,sBAC7BR,EAAIvL,WAEJuL,EAAI3tB,IAAI9G,KAAKu0B,GAAGxL,MAAM9T,GAAG2Z,aAGvB,CAAE7wB,QAAQ,EAAMk3B,OAAQ,MAFtB,CAAEl3B,QAAQ,EAAOk3B,OAAQ,uBAFzB,CAAEl3B,QAAQ,EAAOk3B,OAAQ,4BAKpC,EAEAX,GAAQv3B,UAAUi4B,UAAY,SAAmBjK,EAAStE,GAUxD,MARuB,kBAAZsE,IACTtE,EAAMsE,EACNA,EAAU,MAGP/qB,KAAKy0B,MACRz0B,KAAKy0B,IAAMz0B,KAAKu0B,GAAGhb,EAAEzS,IAAI9G,KAAKw0B,OAE3B/N,EAGEzmB,KAAKy0B,IAAIxS,OAAOwE,EAAKsE,GAFnB/qB,KAAKy0B,GAGhB,EAEAH,GAAQv3B,UAAUm4B,WAAa,SAAoBzO,GACjD,MAAY,QAARA,EACKzmB,KAAKw0B,KAAK3sB,SAAS,GAAI,GAEvB7H,KAAKw0B,IAChB,EAEAF,GAAQv3B,UAAU23B,eAAiB,SAAwB30B,EAAK0mB,GAC9DzmB,KAAKw0B,KAAO,IAAIhvB,IAAJ,CAAOzF,EAAK0mB,GAAO,IAI/BzmB,KAAKw0B,KAAOx0B,KAAKw0B,KAAK9b,KAAK1Y,KAAKu0B,GAAGxL,MAAM9T,EAC3C,EAEAqf,GAAQv3B,UAAU63B,cAAgB,SAAuB70B,EAAK0mB,GAC5D,GAAI1mB,EAAIoT,GAAKpT,EAAIqT,EAWf,MAP2B,SAAvBpT,KAAKu0B,GAAGxL,MAAMzJ,KAChBva,GAAOhF,EAAIoT,EAAG,qBACkB,UAAvBnT,KAAKu0B,GAAGxL,MAAMzJ,MACS,YAAvBtf,KAAKu0B,GAAGxL,MAAMzJ,MACvBva,GAAOhF,EAAIoT,GAAKpT,EAAIqT,EAAG,qCAEzBpT,KAAKy0B,IAAMz0B,KAAKu0B,GAAGxL,MAAME,MAAMlpB,EAAIoT,EAAGpT,EAAIqT,IAG5CpT,KAAKy0B,IAAMz0B,KAAKu0B,GAAGxL,MAAM4B,YAAY5qB,EAAK0mB,EAC5C,EAGA6N,GAAQv3B,UAAUo4B,OAAS,SAAgBV,GAIzC,OAHIA,EAAIvL,YACNnkB,GAAO0vB,EAAIvL,WAAY,8BAElBuL,EAAI3tB,IAAI9G,KAAKw0B,MAAMxJ,MAC5B,EAGAsJ,GAAQv3B,UAAUq4B,KAAO,SAAcnwB,EAAKwhB,EAAKoM,GAC/C,OAAO7yB,KAAKu0B,GAAGa,KAAKnwB,EAAKjF,KAAMymB,EAAKoM,EACtC,EAEAyB,GAAQv3B,UAAUs4B,OAAS,SAAgBpwB,EAAKqwB,GAC9C,OAAOt1B,KAAKu0B,GAAGc,OAAOpwB,EAAKqwB,EAAWt1B,KACxC,EAEAs0B,GAAQv3B,UAAUsM,QAAU,WAC1B,MAAO,eAAiBrJ,KAAKw0B,MAAQx0B,KAAKw0B,KAAK3sB,SAAS,GAAI,IACrD,UAAY7H,KAAKy0B,KAAOz0B,KAAKy0B,IAAIprB,WAAa,IACvD,ECnHA,IAAItE,GAAS1B,EAAM0B,OAEnB,SAASwwB,GAAU1C,EAASpM,GAC1B,GAAIoM,aAAmB0C,GACrB,OAAO1C,EAEL7yB,KAAKw1B,WAAW3C,EAASpM,KAG7B1hB,GAAO8tB,EAAQ/xB,GAAK+xB,EAAQ3e,EAAG,4BAC/BlU,KAAKc,EAAI,IAAI0E,IAAJ,CAAOqtB,EAAQ/xB,EAAG,IAC3Bd,KAAKkU,EAAI,IAAI1O,IAAJ,CAAOqtB,EAAQ3e,EAAG,SACG8J,IAA1B6U,EAAQ4C,cACVz1B,KAAKy1B,cAAgB,KAErBz1B,KAAKy1B,cAAgB5C,EAAQ4C,cACjC,CACA,OAAiBF,GAEjB,SAASG,KACP11B,KAAK21B,MAAQ,CACf,CAEA,SAASC,GAAUC,EAAKrhB,GACtB,IAAIshB,EAAUD,EAAIrhB,EAAEmhB,SACpB,KAAgB,IAAVG,GACJ,OAAOA,EAET,IAAIC,EAAqB,GAAVD,EAGf,GAAiB,IAAbC,GAAkBA,EAAW,EAC/B,OAAO,EAIT,IADA,IAAI/wB,EAAM,EACD3I,EAAI,EAAG+L,EAAMoM,EAAEmhB,MAAOt5B,EAAI05B,EAAU15B,IAAK+L,IAChDpD,IAAQ,EACRA,GAAO6wB,EAAIztB,GACXpD,KAAS,EAIX,QAAIA,GAAO,OAIXwP,EAAEmhB,MAAQvtB,EACHpD,EACT,CAEA,SAASgxB,GAAUH,GAGjB,IAFA,IAAIx5B,EAAI,EACJ2K,EAAM6uB,EAAIz5B,OAAS,GACfy5B,EAAIx5B,MAAqB,IAAbw5B,EAAIx5B,EAAI,KAAcA,EAAI2K,GAC5C3K,IAEF,OAAU,IAANA,EACKw5B,EAEFA,EAAIh5B,MAAMR,EACnB,CA2DA,SAAS45B,GAAgBvP,EAAK1f,GAC5B,GAAIA,EAAM,IACR0f,EAAIvoB,KAAK6I,OADX,CAIA,IAAIkvB,EAAS,GAAKjvB,KAAKkvB,IAAInvB,GAAOC,KAAKmvB,MAAQ,GAE/C,IADA1P,EAAIvoB,KAAc,IAAT+3B,KACAA,GACPxP,EAAIvoB,KAAM6I,KAASkvB,GAAU,GAAM,KAErCxP,EAAIvoB,KAAK6I,EANX,CAOA,CApEAuuB,GAAUx4B,UAAUy4B,WAAa,SAAoB7xB,EAAM8iB,GACzD9iB,EAAON,EAAM4E,QAAQtE,EAAM8iB,GAC3B,IAAIjS,EAAI,IAAIkhB,GACZ,GAAwB,KAApB/xB,EAAK6Q,EAAEmhB,SACT,OAAO,EAET,IAAI3uB,EAAM4uB,GAAUjyB,EAAM6Q,GAC1B,IAAY,IAARxN,EACF,OAAO,EAET,GAAKA,EAAMwN,EAAEmhB,QAAWhyB,EAAKvH,OAC3B,OAAO,EAET,GAAwB,IAApBuH,EAAK6Q,EAAEmhB,SACT,OAAO,EAET,IAAI9X,EAAO+X,GAAUjyB,EAAM6Q,GAC3B,IAAa,IAATqJ,EACF,OAAO,EAET,IAAI/c,EAAI6C,EAAK9G,MAAM2X,EAAEmhB,MAAO9X,EAAOrJ,EAAEmhB,OAErC,GADAnhB,EAAEmhB,OAAS9X,EACa,IAApBla,EAAK6Q,EAAEmhB,SACT,OAAO,EAET,IAAIU,EAAOT,GAAUjyB,EAAM6Q,GAC3B,IAAa,IAAT6hB,EACF,OAAO,EAET,GAAI1yB,EAAKvH,SAAWi6B,EAAO7hB,EAAEmhB,MAC3B,OAAO,EAET,IAAIzhB,EAAIvQ,EAAK9G,MAAM2X,EAAEmhB,MAAOU,EAAO7hB,EAAEmhB,OACrC,GAAa,IAAT70B,EAAE,GAAU,CACd,KAAW,IAAPA,EAAE,IAIJ,OAAO,EAHPA,EAAIA,EAAEjE,MAAM,EAKlB,CACE,GAAa,IAATqX,EAAE,GAAU,CACd,KAAW,IAAPA,EAAE,IAIJ,OAAO,EAHPA,EAAIA,EAAErX,MAAM,EAKlB,CAME,OAJAmD,KAAKc,EAAI,IAAI0E,IAAJ,CAAO1E,GAChBd,KAAKkU,EAAI,IAAI1O,IAAJ,CAAO0O,GAChBlU,KAAKy1B,cAAgB,MAEd,CACT,EAeAF,GAAUx4B,UAAUu5B,MAAQ,SAAe7P,GACzC,IAAI3lB,EAAId,KAAKc,EAAEmH,UACXiM,EAAIlU,KAAKkU,EAAEjM,UAYf,IATW,IAAPnH,EAAE,KACJA,EAAI,CAAE,GAAIif,OAAOjf,IAER,IAAPoT,EAAE,KACJA,EAAI,CAAE,GAAI6L,OAAO7L,IAEnBpT,EAAIk1B,GAAUl1B,GACdoT,EAAI8hB,GAAU9hB,IAENA,EAAE,MAAe,IAAPA,EAAE,KAClBA,EAAIA,EAAErX,MAAM,GAEd,IAAI6pB,EAAM,CAAE,GACZuP,GAAgBvP,EAAK5lB,EAAE1E,SACvBsqB,EAAMA,EAAI3G,OAAOjf,IACb3C,KAAK,GACT83B,GAAgBvP,EAAKxS,EAAE9X,QACvB,IAAIm6B,EAAW7P,EAAI3G,OAAO7L,GACtBnJ,EAAM,CAAE,IAGZ,OAFAkrB,GAAgBlrB,EAAKwrB,EAASn6B,QAC9B2O,EAAMA,EAAIgV,OAAOwW,GACVlzB,EAAM4e,OAAOlX,EAAK0b,EAC3B,EC/JA,IAAI+P,GAAI,2CACJzxB,GAAS1B,EAAM0B,OAKnB,SAAS0xB,GAAG5D,GACV,KAAM7yB,gBAAgBy2B,IACpB,OAAO,IAAIA,GAAG5D,GAGO,kBAAZA,IACT9tB,GAAO9E,OAAOlD,UAAU25B,eAAe15B,KAAK21B,GAAQE,GAClD,iBAAmBA,GAErBA,EAAUF,GAAOE,IAIfA,aAAmBF,GAAOC,cAC5BC,EAAU,CAAE9J,MAAO8J,IAErB7yB,KAAK+oB,MAAQ8J,EAAQ9J,MAAMA,MAC3B/oB,KAAKiV,EAAIjV,KAAK+oB,MAAM9T,EACpBjV,KAAK22B,GAAK32B,KAAKiV,EAAEwC,MAAM,GACvBzX,KAAKuZ,EAAIvZ,KAAK+oB,MAAMxP,EAGpBvZ,KAAKuZ,EAAIsZ,EAAQ9J,MAAMxP,EACvBvZ,KAAKuZ,EAAE2R,WAAW2H,EAAQ9J,MAAM9T,EAAExJ,YAAc,GAGhDzL,KAAKoE,KAAOyuB,EAAQzuB,MAAQyuB,EAAQ9J,MAAM3kB,IAC5C,CACA,OAAiBqyB,GAEjBA,GAAG15B,UAAU65B,QAAU,SAAiB/D,GACtC,OAAO,IAAIyB,GAAQt0B,KAAM6yB,EAC3B,EAEA4D,GAAG15B,UAAU85B,eAAiB,SAAwBrC,EAAM/N,GAC1D,OAAO6N,GAAQS,YAAY/0B,KAAMw0B,EAAM/N,EACzC,EAEAgQ,GAAG15B,UAAU+5B,cAAgB,SAAuBrC,EAAKhO,GACvD,OAAO6N,GAAQQ,WAAW90B,KAAMy0B,EAAKhO,EACvC,EAEAgQ,GAAG15B,UAAUg6B,WAAa,SAAoBlE,GACvCA,IACHA,EAAU,CAAC,GAcb,IAXA,IAAImE,EAAO,IAAIhE,GAAS,CACtB5uB,KAAMpE,KAAKoE,KACXwvB,KAAMf,EAAQe,KACdC,QAAShB,EAAQgB,SAAW,OAC5BJ,QAASZ,EAAQY,SAAW+C,GAAKx2B,KAAKoE,KAAKgvB,cAC3CM,WAAYb,EAAQY,SAAWZ,EAAQa,YAAc,OACrD9N,MAAO5lB,KAAKiV,EAAEhN,YAGZ3J,EAAQ0B,KAAKiV,EAAEpK,aACfosB,EAAMj3B,KAAKiV,EAAEtH,IAAI,IAAInI,IAAJ,CAAO,MACnB,CACP,IAAIgvB,EAAO,IAAIhvB,IAAJ,CAAOwxB,EAAK5C,SAAS91B,IAChC,KAAIk2B,EAAK9sB,IAAIuvB,GAAO,GAIpB,OADAzC,EAAKxoB,MAAM,GACJhM,KAAK62B,eAAerC,EAC/B,CACA,EAEAiC,GAAG15B,UAAUm6B,aAAe,SAAsBjyB,EAAKkyB,GACrD,IAAIjd,EAA2B,EAAnBjV,EAAI4F,aAAmB7K,KAAKiV,EAAExJ,YAG1C,OAFIyO,EAAQ,IACVjV,EAAMA,EAAIwS,MAAMyC,KACbid,GAAalyB,EAAIyC,IAAI1H,KAAKiV,IAAM,EAC5BhQ,EAAI0I,IAAI3N,KAAKiV,GAEbhQ,CACX,EAEAwxB,GAAG15B,UAAUq4B,KAAO,SAAcnwB,EAAKlF,EAAK0mB,EAAKoM,GAC5B,kBAARpM,IACToM,EAAUpM,EACVA,EAAM,MAEHoM,IACHA,EAAU,CAAC,GAEb9yB,EAAMC,KAAK62B,eAAe92B,EAAK0mB,GAC/BxhB,EAAMjF,KAAKk3B,aAAa,IAAI1xB,IAAJ,CAAOP,EAAK,KAqBpC,IAlBA,IAAI3G,EAAQ0B,KAAKiV,EAAEpK,aACfusB,EAAOr3B,EAAIm1B,aAAajtB,QAAQ,KAAM3J,GAGtCsnB,EAAQ3gB,EAAIgD,QAAQ,KAAM3J,GAG1B04B,EAAO,IAAIhE,GAAS,CACtB5uB,KAAMpE,KAAKoE,KACXqvB,QAAS2D,EACTxR,MAAOA,EACPgO,KAAMf,EAAQe,KACdC,QAAShB,EAAQgB,SAAW,SAI1BwD,EAAMr3B,KAAKiV,EAAEtH,IAAI,IAAInI,IAAJ,CAAO,IAEnB8xB,EAAO,GAAKA,IAAQ,CAC3B,IAAI9sB,EAAIqoB,EAAQroB,EACdqoB,EAAQroB,EAAE8sB,GACV,IAAI9xB,IAAJ,CAAOwxB,EAAK5C,SAASp0B,KAAKiV,EAAEpK,eAE9B,MADAL,EAAIxK,KAAKk3B,aAAa1sB,GAAG,IACnB2P,KAAK,IAAM,GAAK3P,EAAE9C,IAAI2vB,IAAQ,GAApC,CAGA,IAAIE,EAAKv3B,KAAKuZ,EAAEzS,IAAI0D,GACpB,IAAI+sB,EAAG3I,aAAP,CAGA,IAAI4I,EAAMD,EAAGvM,OACTlqB,EAAI02B,EAAI9e,KAAK1Y,KAAKiV,GACtB,GAAkB,IAAdnU,EAAEqZ,KAAK,GAAX,CAGA,IAAIjG,EAAI1J,EAAE4P,KAAKpa,KAAKiV,GAAGnO,IAAIhG,EAAEgG,IAAI/G,EAAIm1B,cAAc1nB,KAAKvI,IAExD,GAAkB,KADlBiP,EAAIA,EAAEwE,KAAK1Y,KAAKiV,IACVkF,KAAK,GAAX,CAGA,IAAIsb,GAAiB8B,EAAGtM,OAAOrR,QAAU,EAAI,IACT,IAAf4d,EAAI9vB,IAAI5G,GAAW,EAAI,GAQ5C,OALI+xB,EAAQ4E,WAAavjB,EAAExM,IAAI1H,KAAK22B,IAAM,IACxCziB,EAAIlU,KAAKiV,EAAEtH,IAAIuG,GACfuhB,GAAiB,GAGZ,IAAIF,GAAU,CAAEz0B,EAAGA,EAAGoT,EAAGA,EAAGuhB,cAAeA,GAXxC,CALA,CALA,CAJA,CA0Bd,CACA,EAEAgB,GAAG15B,UAAUs4B,OAAS,SAAgBpwB,EAAKqwB,EAAWv1B,EAAK0mB,GACzDxhB,EAAMjF,KAAKk3B,aAAa,IAAI1xB,IAAJ,CAAOP,EAAK,KACpClF,EAAMC,KAAK82B,cAAc/2B,EAAK0mB,GAI9B,IAAI3lB,GAHJw0B,EAAY,IAAIC,GAAUD,EAAW,QAGnBx0B,EACdoT,EAAIohB,EAAUphB,EAClB,GAAIpT,EAAEqZ,KAAK,GAAK,GAAKrZ,EAAE4G,IAAI1H,KAAKiV,IAAM,EACpC,OAAO,EACT,GAAIf,EAAEiG,KAAK,GAAK,GAAKjG,EAAExM,IAAI1H,KAAKiV,IAAM,EACpC,OAAO,EAGT,IAGIT,EAHAkjB,EAAOxjB,EAAEkG,KAAKpa,KAAKiV,GACnBsS,EAAKmQ,EAAK5wB,IAAI7B,GAAKyT,KAAK1Y,KAAKiV,GAC7BuS,EAAKkQ,EAAK5wB,IAAIhG,GAAG4X,KAAK1Y,KAAKiV,GAG/B,OAAKjV,KAAK+oB,MAAMF,gBAWhBrU,EAAIxU,KAAKuZ,EAAE2V,QAAQ3H,EAAIxnB,EAAIi1B,YAAaxN,IAClCoH,cAMCpa,EAAE4d,OAAOtxB,KAjBd0T,EAAIxU,KAAKuZ,EAAE0V,OAAO1H,EAAIxnB,EAAIi1B,YAAaxN,IACjCoH,cAGkC,IAAjCpa,EAAEwW,OAAOtS,KAAK1Y,KAAKiV,GAAGvN,IAAI5G,EAcrC,EAEA21B,GAAG15B,UAAU46B,cAAgB,SAAS1yB,EAAKqwB,EAAW3zB,EAAG8kB,GACvD1hB,IAAQ,EAAIpD,KAAOA,EAAG,4CACtB2zB,EAAY,IAAIC,GAAUD,EAAW7O,GAErC,IAAIxR,EAAIjV,KAAKiV,EACT5O,EAAI,IAAIb,IAAJ,CAAOP,GACXnE,EAAIw0B,EAAUx0B,EACdoT,EAAIohB,EAAUphB,EAGd0jB,EAAa,EAAJj2B,EACTk2B,EAAcl2B,GAAK,EACvB,GAAIb,EAAE4G,IAAI1H,KAAK+oB,MAAMvU,EAAEkE,KAAK1Y,KAAK+oB,MAAM9T,KAAO,GAAK4iB,EACjD,MAAM,IAAI36B,MAAM,wCAIhB4D,EADE+2B,EACE73B,KAAK+oB,MAAM6B,WAAW9pB,EAAE4M,IAAI1N,KAAK+oB,MAAM9T,GAAI2iB,GAE3C53B,KAAK+oB,MAAM6B,WAAW9pB,EAAG82B,GAE/B,IAAIE,EAAOxC,EAAUx0B,EAAEsZ,KAAKnF,GACxBya,EAAKza,EAAEtH,IAAItH,GAAGS,IAAIgxB,GAAMpf,KAAKzD,GAC7B0a,EAAKzb,EAAEpN,IAAIgxB,GAAMpf,KAAKzD,GAI1B,OAAOjV,KAAKuZ,EAAE0V,OAAOS,EAAI5uB,EAAG6uB,EAC9B,EAEA8G,GAAG15B,UAAUg7B,oBAAsB,SAAS1xB,EAAGivB,EAAW0C,EAAGvR,GAE3D,GAAgC,QADhC6O,EAAY,IAAIC,GAAUD,EAAW7O,IACvBgP,cACZ,OAAOH,EAAUG,cAEnB,IAAK,IAAIp5B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAI47B,EACJ,IACEA,EAASj4B,KAAK23B,cAActxB,EAAGivB,EAAWj5B,EAGhD,CAFM,MAAOgK,GACP,QACN,CAEI,GAAI4xB,EAAOjd,GAAGgd,GACZ,OAAO37B,CACb,CACE,MAAM,IAAIa,MAAM,uCAClB,E,ICjPIu5B,G,iBCCJ,IAAIyB,EAAWl0B,EAEfk0B,EAASC,QAAOA,QAChBD,EAAS70B,MAAQkvB,EACjB2F,EAAS1B,KAAI,2CACb0B,EAASnP,MAAQ0J,GACjByF,EAASvF,OAASyF,GAGlBF,EAAS3D,GAAK8D,GACdH,EAASI,MAAK,I,IDXD/D,GEQPtwB,GAAS,IAAIC,EAAAA,GCTI,qBDWnBq0B,GAAa,KACjB,SAASC,KAIL,OAHKD,KACDA,GAAS,IAAI9B,GAAG,cAEb8B,EACX,CAEO,IAAME,GAAU,WAYnB,WAAYC,IAAqB,gBAC7B/V,EAAAA,EAAAA,IAAe3iB,KAAM,QAAS,cAE9B2iB,EAAAA,EAAAA,IAAe3iB,KAAM,cAAcogB,EAAAA,EAAAA,IAAQsY,IACJ,MAAnCC,EAAAA,EAAAA,IAAc34B,KAAK04B,aACnBz0B,GAAOyb,mBAAmB,sBAAuB,aAAc,kBAGnE,IAAMkX,EAAU4B,KAAW3B,gBAAevyB,EAAAA,EAAAA,IAAStE,KAAK04B,cAExD/V,EAAAA,EAAAA,IAAe3iB,KAAM,YAAa,KAAO42B,EAAQ5B,WAAU,EAAO,SAClErS,EAAAA,EAAAA,IAAe3iB,KAAM,sBAAuB,KAAO42B,EAAQ5B,WAAU,EAAM,SAE3ErS,EAAAA,EAAAA,IAAe3iB,KAAM,iBAAiB,EAC1C,CA8BC,OA9BA,iCAED,SAAU44B,GACN,IAAMC,EAAML,KAAW1B,eAAcxyB,EAAAA,EAAAA,IAAStE,KAAK84B,YAC7ChL,EAAM0K,KAAW1B,eAAcxyB,EAAAA,EAAAA,IAASs0B,IAC9C,MAAO,KAAOC,EAAGpE,IAAI/mB,IAAIogB,EAAG2G,KAAK5J,iBAAiB,MACtD,GAAC,wBAED,SAAWtmB,GACP,IAAMqyB,EAAU4B,KAAW3B,gBAAevyB,EAAAA,EAAAA,IAAStE,KAAK04B,aAClDK,GAAcz0B,EAAAA,EAAAA,IAASC,GACF,KAAvBw0B,EAAY38B,QACZ6H,GAAOyb,mBAAmB,oBAAqB,SAAUnb,GAE7D,IAAM+wB,EAAYsB,EAAQxB,KAAK2D,EAAa,CAAEtB,WAAW,IACzD,OAAOuB,EAAAA,EAAAA,GAAe,CAClBvD,cAAeH,EAAUG,cACzB30B,GAAGm4B,EAAAA,EAAAA,IAAW,KAAO3D,EAAUx0B,EAAE+G,SAAS,IAAK,IAC/CqM,GAAG+kB,EAAAA,EAAAA,IAAW,KAAO3D,EAAUphB,EAAErM,SAAS,IAAK,KAEvD,GAAC,iCAED,SAAoBqxB,GAChB,IAAMtC,EAAU4B,KAAW3B,gBAAevyB,EAAAA,EAAAA,IAAStE,KAAK04B,aAClDS,EAAeX,KAAW1B,eAAcxyB,EAAAA,EAAAA,IAAS80B,GAAiBF,KACxE,OAAOD,EAAAA,EAAAA,IAAW,KAAOrC,EAAQzB,OAAOgE,EAAanE,aAAantB,SAAS,IAAK,GACpF,IAAC,2BAED,SAAoB7L,GAChB,SAAUA,IAASA,EAAMq9B,cAC7B,KAAC,EAxDkB,GA2DjB,SAAUC,GAAiB/0B,EAAmB+wB,GAChD,IAAMiE,GAAMP,EAAAA,EAAAA,GAAe1D,GACrBkE,EAAK,CAAE14B,GAAGwD,EAAAA,EAAAA,IAASi1B,EAAIz4B,GAAIoT,GAAG5P,EAAAA,EAAAA,IAASi1B,EAAIrlB,IACjD,MAAO,KAAOskB,KAAWb,eAAcrzB,EAAAA,EAAAA,IAASC,GAASi1B,EAAID,EAAI9D,eAAexT,OAAO,OAAO,EAClG,CAEM,SAAUmX,GAAiBr5B,EAAgB05B,GAC7C,IAAMn7B,GAAQgG,EAAAA,EAAAA,IAASvE,GAEvB,GAAqB,KAAjBzB,EAAMlC,OAAe,CACrB,IAAMs9B,EAAa,IAAIjB,GAAWn6B,GAClC,OAAIm7B,EACO,KAAOjB,KAAW3B,eAAev4B,GAAO02B,WAAU,EAAM,OAE5D0E,EAAWZ,S,CAEf,OAAqB,KAAjBx6B,EAAMlC,OACTq9B,GAAqBrZ,EAAAA,EAAAA,IAAQ9hB,GAC1B,KAAOk6B,KAAW1B,cAAcx4B,GAAO02B,WAAU,EAAO,OAEvC,KAAjB12B,EAAMlC,OACRq9B,EACE,KAAOjB,KAAW1B,cAAcx4B,GAAO02B,WAAU,EAAM,QADpC5U,EAAAA,EAAAA,IAAQ9hB,GAI/B2F,GAAOyb,mBAAmB,gCAAiC,MAAO,aAC7E,CExGO,ICyBKia,GAZN11B,GAAS,IAAIC,EAAAA,GDbI,sBCoFvB,SAAS01B,GAAc59B,GACnB,MAAc,OAAVA,EAAyB,MACtBioB,EAAAA,EAAAA,IAAWjoB,EACtB,CAEA,SAAS69B,GAAa79B,GAClB,MAAc,OAAVA,EAAyB89B,EAAAA,GACtBna,EAAAA,GAAAA,KAAe3jB,EAC1B,EAnEA,SAAY29B,GACRA,EAAAA,EAAAA,OAAAA,GAAAA,SACAA,EAAAA,EAAAA,QAAAA,GAAAA,UACAA,EAAAA,EAAAA,QAAAA,GAAAA,SACH,CAJD,CAAYA,KAAAA,GAAgB,KAsE5B,IAAMI,GAAoB,CACtB,CAAEn9B,KAAM,QAAYo9B,UAAW,GAAIC,SAAS,GAC5C,CAAEr9B,KAAM,WAAYo9B,UAAW,GAAIC,SAAS,GAC5C,CAAEr9B,KAAM,WAAYo9B,UAAW,GAAIC,SAAS,GAC5C,CAAEr9B,KAAM,KAAeR,OAAQ,IAC/B,CAAEQ,KAAM,QAAYo9B,UAAW,GAAIC,SAAS,GAC5C,CAAEr9B,KAAM,SAGN8mB,GAAuD,CACzDmB,SAAS,EAAMlhB,MAAM,EAAMkiB,UAAU,EAAM/C,UAAS,EAAM8C,OAAO,EAAML,IAAI,EAAMjG,MAAM,EAAMtjB,OAAO,GAGlG,SAAUk+B,GAAen6B,GAC3B,IAAM+4B,EAAYM,GAAiBr5B,GACnC,OAAOkkB,EAAAA,EAAAA,KAAWkW,EAAAA,EAAAA,KAAa9Z,EAAAA,EAAAA,IAAU8Z,EAAAA,EAAAA,IAAarB,EAAW,IAAK,IAC1E,CAEM,SAAUsB,GAAe71B,EAAmB+wB,GAC9C,OAAO4E,GAAeZ,IAAiBh1B,EAAAA,EAAAA,IAASC,GAAS+wB,GAC7D,CAEA,SAAS+E,GAAar+B,EAAqBY,GACvC,IAAMmB,GAASu8B,EAAAA,EAAAA,IAAW3a,EAAAA,GAAAA,KAAe3jB,GAAOu+B,eAIhD,OAHIx8B,EAAO3B,OAAS,IAChB6H,GAAOyb,mBAAmB,sBAAwB9iB,EAAO,eAAiBA,EAAOZ,GAE9E+B,CACX,CAEA,SAASy8B,GAAaC,EAAcC,GAChC,MAAO,CACHjV,SAASxB,EAAAA,EAAAA,IAAWwW,GACpBC,aAAcA,GAAe,IAAI3N,KAAI,SAAC4N,EAAYp6B,GAI9C,OAHkC,MAA9Bo4B,EAAAA,EAAAA,IAAcgC,IACd12B,GAAOyb,mBAAmB,iCAAkC,cAAF,OAAiB+a,EAAK,YAAKl6B,EAAM,KAAKo6B,GAE7FA,EAAWvZ,aACtB,IAER,CAEM,SAAUwZ,GAAc5+B,GAC1B,GAAIc,MAAMG,QAAQjB,GACd,OAA0FA,EAAO+wB,KAAI,SAACpvB,EAAK4C,GACvG,OAAIzD,MAAMG,QAAQU,IACVA,EAAIvB,OAAS,GACb6H,GAAOyb,mBAAmB,wDAAyD,SAAF,OAAYnf,EAAM,KAAK5C,GAErG68B,GAAa78B,EAAI,GAAIA,EAAI,KAE7B68B,GAAa78B,EAAI8nB,QAAS9nB,EAAI+8B,YACzC,IAGJ,IAAM38B,EAAiEkC,OAAO46B,KAAK7+B,GAAO+wB,KAAI,SAAC0N,GAC3F,IAAMC,EAAoC1+B,EAAMy+B,GAAMK,QAAO,SAACC,EAAOJ,GAEjE,OADAI,EAAMJ,IAAc,EACbI,CACX,GAAyB,CAAC,GAC1B,OAAOP,GAAaC,EAAMx6B,OAAO46B,KAAKH,GAAaM,OACvD,IAEA,OADAj9B,EAAOi9B,MAAK,SAAC/5B,EAAG8F,GAAC,OAAM9F,EAAEwkB,QAAQwV,cAAcl0B,EAAE0e,QAAQ,IAClD1nB,CACX,CAEA,SAASm9B,GAAiBl/B,GACtB,OAAO4+B,GAAc5+B,GAAO+wB,KAAI,SAACpvB,GAAG,MAAK,CAAEA,EAAI8nB,QAAS9nB,EAAI+8B,YAAa,GAC7E,CAEA,SAASS,GAAkBhX,EAAkCmR,GAIzD,GAA4B,MAAxBnR,EAAYrB,SAAkB,CAC9B,IAAMA,EAAWnD,EAAAA,GAAAA,KAAewE,EAAYrB,UACtCK,EAAexD,EAAAA,GAAAA,KAAewE,EAAYhB,cAAgB,GAC3DL,EAAS9H,GAAGmI,IACblf,GAAOyb,mBAAmB,6CAA8C,KAAM,CAC1EoD,SAAAA,EAAUK,aAAAA,G,CAKtB,IAAMiY,EAAc,CAChBf,GAAalW,EAAYU,SAAW,EAAG,WACvCwV,GAAalW,EAAYyB,OAAS,EAAG,SACrCyU,GAAalW,EAAYf,sBAAwB,EAAG,wBACpDiX,GAAalW,EAAYhB,cAAgB,EAAG,gBAC5CkX,GAAalW,EAAY0B,UAAY,EAAG,YACpB,MAAlB1B,EAAYoB,IAActB,EAAAA,EAAAA,IAAWE,EAAYoB,IAAK,KACxD8U,GAAalW,EAAYnoB,OAAS,EAAG,SACpCmoB,EAAYxgB,MAAQ,KACpBu3B,GAAiB/W,EAAYkX,YAAc,KAGhD,GAAI/F,EAAW,CACX,IAAMiE,GAAMP,EAAAA,EAAAA,GAAe1D,GAC3B8F,EAAOj9B,KAAKk8B,GAAad,EAAI9D,cAAe,kBAC5C2F,EAAOj9B,MAAKm8B,EAAAA,EAAAA,IAAWf,EAAIz4B,IAC3Bs6B,EAAOj9B,MAAKm8B,EAAAA,EAAAA,IAAWf,EAAIrlB,G,CAG/B,OAAOonB,EAAAA,EAAAA,IAAU,CAAE,OAAQC,EAAAA,OAAWH,IAC1C,CAEA,SAASI,GAAkBrX,EAAkCmR,GACzD,IAAM8F,EAAc,CAChBf,GAAalW,EAAYU,SAAW,EAAG,WACvCwV,GAAalW,EAAYyB,OAAS,EAAG,SACrCyU,GAAalW,EAAYrB,UAAY,EAAG,YACxCuX,GAAalW,EAAY0B,UAAY,EAAG,YACpB,MAAlB1B,EAAYoB,IAActB,EAAAA,EAAAA,IAAWE,EAAYoB,IAAK,KACxD8U,GAAalW,EAAYnoB,OAAS,EAAG,SACpCmoB,EAAYxgB,MAAQ,KACpBu3B,GAAiB/W,EAAYkX,YAAc,KAGhD,GAAI/F,EAAW,CACX,IAAMiE,GAAMP,EAAAA,EAAAA,GAAe1D,GAC3B8F,EAAOj9B,KAAKk8B,GAAad,EAAI9D,cAAe,kBAC5C2F,EAAOj9B,MAAKm8B,EAAAA,EAAAA,IAAWf,EAAIz4B,IAC3Bs6B,EAAOj9B,MAAKm8B,EAAAA,EAAAA,IAAWf,EAAIrlB,G,CAG/B,OAAOonB,EAAAA,EAAAA,IAAU,CAAE,OAAQC,EAAAA,OAAWH,IAC1C,CAmFM,SAAUK,GAAUtX,EAAkCmR,GAExD,GAAwB,MAApBnR,EAAY7E,MAAqC,IAArB6E,EAAY7E,KAIxC,OAH8B,MAA1B6E,EAAYkX,YACZp3B,GAAOyb,mBAAmB,kEAAmE,cAAeyE,GApFxH,SAAoBA,EAAkCmR,IAClDoG,EAAAA,EAAAA,IAAgBvX,EAAaT,IAE7B,IAAMiY,EAAkC,GAExC5B,GAAkBja,SAAQ,SAAS8b,GAC/B,IAAI5/B,EAAcmoB,EAAayX,EAAUh/B,OAAU,GAC7Ci2B,EAAuB,CAAC,EAC1B+I,EAAU3B,UAAWpH,EAAQgJ,OAAS,QAC1C7/B,GAAQsI,EAAAA,EAAAA,KAAS8b,EAAAA,EAAAA,IAAQpkB,EAAO62B,IAG5B+I,EAAUx/B,QAAUJ,EAAMI,SAAWw/B,EAAUx/B,QAAUJ,EAAMI,OAAS,GACxE6H,GAAOyb,mBAAmB,sBAAwBkc,EAAUh/B,KAAO,eAAiBg/B,EAAUh/B,KAAOZ,GAIrG4/B,EAAU5B,YACVh+B,GAAQs+B,EAAAA,EAAAA,IAAWt+B,IACTI,OAASw/B,EAAU5B,WACzB/1B,GAAOyb,mBAAmB,sBAAwBkc,EAAUh/B,KAAO,eAAiBg/B,EAAUh/B,KAAOZ,GAI7G2/B,EAAIx9B,MAAKiiB,EAAAA,EAAAA,IAAQpkB,GACrB,IAEA,IAAI6oB,EAAU,EAsBd,GArB2B,MAAvBV,EAAYU,QAIY,kBAFxBA,EAAUV,EAAYU,UAGlB5gB,GAAOyb,mBAAmB,8BAA+B,cAAeyE,GAGrEmR,KAAcwG,EAAAA,EAAAA,IAAYxG,IAAcA,EAAU12B,EAAI,KAE7DimB,EAAU5d,KAAKomB,OAAOiI,EAAU12B,EAAI,IAAM,IAI9B,IAAZimB,IACA8W,EAAIx9B,MAAKiiB,EAAAA,EAAAA,IAAQyE,IACjB8W,EAAIx9B,KAAK,MACTw9B,EAAIx9B,KAAK,QAIRm3B,EACD,OAAOiG,EAAAA,OAAWI,GAKtB,IAAMpC,GAAMP,EAAAA,EAAAA,GAAe1D,GAGvB12B,EAAI,GAAK26B,EAAI9D,cAmBjB,OAlBgB,IAAZ5Q,GACA8W,EAAII,MACJJ,EAAII,MACJJ,EAAII,MACJn9B,GAAe,EAAVimB,EAAc,EAGf0U,EAAI36B,EAAI,IAAM26B,EAAI36B,IAAMA,GACvBqF,GAAOyb,mBAAmB,2CAA4C,YAAa4V,IAEjFiE,EAAI36B,IAAMA,GAChBqF,GAAOyb,mBAAmB,2CAA4C,YAAa4V,GAGxFqG,EAAIx9B,MAAKiiB,EAAAA,EAAAA,IAAQxhB,IACjB+8B,EAAIx9B,MAAKm8B,EAAAA,EAAAA,KAAWh2B,EAAAA,EAAAA,IAASi1B,EAAIz4B,KACjC66B,EAAIx9B,MAAKm8B,EAAAA,EAAAA,KAAWh2B,EAAAA,EAAAA,IAASi1B,EAAIrlB,KAE1BqnB,EAAAA,OAAWI,EACtB,CAQeK,CAAW7X,EAAamR,GAInC,OAAQnR,EAAY7E,MAChB,KAAK,EACD,OAAOkc,GAAkBrX,EAAamR,GAC1C,KAAK,EACD,OAAO6F,GAAkBhX,EAAamR,GAK9C,OAAOrxB,GAAOY,WAAW,iCAAD,OAAmCsf,EAAY7E,MAASpb,EAAAA,GAAAA,OAAAA,sBAAqC,CACjHY,UAAW,uBACXm3B,gBAAiB9X,EAAY7E,MAErC,CAEA,SAAS4c,GAAmB7X,EAAiB+W,EAAuBK,GAChE,IACI,IAAMU,EAAQtC,GAAauB,EAAO,IAAIpxB,WACtC,GAAc,IAAVmyB,GAAyB,IAAVA,EAAe,MAAM,IAAIj/B,MAAM,aAClDmnB,EAAGzlB,EAAIu9B,C,CACT,MAAOlZ,GACLhf,GAAOyb,mBAAmB,oCAAqC,IAAK0b,EAAO,G,CAG/E/W,EAAGvjB,GAAIm4B,EAAAA,EAAAA,IAAWmC,EAAO,GAAI,IAC7B/W,EAAGnQ,GAAI+kB,EAAAA,EAAAA,IAAWmC,EAAO,GAAI,IAE7B,IACI,IAAM72B,GAAS8b,EAAAA,EAAAA,GAAUob,EAAUpX,IACnCA,EAAGa,KAAOkV,GAAe71B,EAAQ,CAAEzD,EAAGujB,EAAGvjB,EAAGoT,EAAGmQ,EAAGnQ,EAAGuhB,cAAepR,EAAGzlB,GAC1D,CAAf,MAAOqkB,GAAQ,CACrB,CAoIM,SAAUyL,GAAM0N,GAClB,IAAMC,GAAU/3B,EAAAA,EAAAA,IAAS83B,GAGzB,GAAIC,EAAQ,GAAK,IAAQ,OAvE7B,SAAgBD,GACZ,IAAMjY,EAAcoX,EAAAA,OAAWa,GAEJ,IAAvBjY,EAAY/nB,QAAuC,IAAvB+nB,EAAY/nB,QACxC6H,GAAOyb,mBAAmB,0BAA2B,iBAAkB0c,GAG3E,IAAM/X,EAAkB,CACpBuB,MAAUiU,GAAa1V,EAAY,IAAIna,WACvC8Y,SAAU+W,GAAa1V,EAAY,IACnC0B,SAAUgU,GAAa1V,EAAY,IACnCoB,GAAUqU,GAAczV,EAAY,IACpCnoB,MAAU69B,GAAa1V,EAAY,IACnCxgB,KAAUwgB,EAAY,GACtBU,QAAU,GAId,GAA2B,IAAvBV,EAAY/nB,OAAgB,OAAOioB,EAEvC,IACIA,EAAGzlB,EAAI+gB,EAAAA,GAAAA,KAAewE,EAAY,IAAIna,U,CAExC,MAAOiZ,GAEL,OAAOoB,C,CAMX,GAHAA,EAAGvjB,GAAIm4B,EAAAA,EAAAA,IAAW9U,EAAY,GAAI,IAClCE,EAAGnQ,GAAI+kB,EAAAA,EAAAA,IAAW9U,EAAY,GAAI,IAE9BxE,EAAAA,GAAAA,KAAe0E,EAAGvjB,GAAG+I,UAAY8V,EAAAA,GAAAA,KAAe0E,EAAGnQ,GAAGrK,SAEtDwa,EAAGQ,QAAUR,EAAGzlB,EAChBylB,EAAGzlB,EAAI,MAEJ,CAGHylB,EAAGQ,QAAU5d,KAAKomB,OAAOhJ,EAAGzlB,EAAI,IAAM,GAClCylB,EAAGQ,QAAU,IAAKR,EAAGQ,QAAU,GAEnC,IAAI4Q,EAAgBpR,EAAGzlB,EAAI,GAErB+8B,EAAMxX,EAAYtnB,MAAM,EAAG,GAEd,IAAfwnB,EAAGQ,UACH8W,EAAIx9B,MAAKiiB,EAAAA,EAAAA,IAAQiE,EAAGQ,UACpB8W,EAAIx9B,KAAK,MACTw9B,EAAIx9B,KAAK,MACTs3B,GAA8B,EAAbpR,EAAGQ,QAAc,GAGtC,IAAMtgB,GAAS8b,EAAAA,EAAAA,GAAUkb,EAAAA,OAAWI,IACpC,IACItX,EAAGa,KAAOkV,GAAe71B,EAAQ,CAAEzD,GAAGsf,EAAAA,EAAAA,IAAQiE,EAAGvjB,GAAIoT,GAAGkM,EAAAA,EAAAA,IAAQiE,EAAGnQ,GAAIuhB,cAAeA,GACzE,CAAf,MAAOxS,GAAQ,CAEjBoB,EAAGjgB,MAAOic,EAAAA,EAAAA,GAAU+b,E,CAKxB,OAFA/X,EAAG/E,KAAO,KAEH+E,CACX,CAOoCiY,CAAOD,GAGvC,OAAQA,EAAQ,IACZ,KAAK,EACD,OA1GZ,SAAuBA,GACnB,IAAMlY,EAAcoX,EAAAA,OAAWc,EAAQx/B,MAAM,IAElB,IAAvBsnB,EAAY/nB,QAAuC,KAAvB+nB,EAAY/nB,QACxC6H,GAAOyb,mBAAmB,kDAAmD,WAAWU,EAAAA,EAAAA,IAAQic,IAGpG,IAAMhY,EAAkB,CACpB/E,KAAY,EACZuF,QAAYgV,GAAa1V,EAAY,IAAIna,WACzC4b,MAAYiU,GAAa1V,EAAY,IAAIna,WACzC8Y,SAAY+W,GAAa1V,EAAY,IACrC0B,SAAYgU,GAAa1V,EAAY,IACrCoB,GAAYqU,GAAczV,EAAY,IACtCnoB,MAAY69B,GAAa1V,EAAY,IACrCxgB,KAAYwgB,EAAY,GACxBkX,WAAYT,GAAczW,EAAY,KAI1C,OAA2B,IAAvBA,EAAY/nB,SAEhBioB,EAAGjgB,MAAOic,EAAAA,EAAAA,GAAUgc,GAEpBH,GAAmB7X,EAAIF,EAAYtnB,MAAM,GAAI2+B,KAJNnX,CAO3C,CA+EmBkY,CAAcF,GACzB,KAAK,EACD,OA7IZ,SAAuBA,GACnB,IAAMlY,EAAcoX,EAAAA,OAAWc,EAAQx/B,MAAM,IAElB,IAAvBsnB,EAAY/nB,QAAuC,KAAvB+nB,EAAY/nB,QACxC6H,GAAOyb,mBAAmB,kDAAmD,WAAWU,EAAAA,EAAAA,IAAQic,IAGpG,IAAMjZ,EAAuByW,GAAa1V,EAAY,IAChDhB,EAAe0W,GAAa1V,EAAY,IACxCE,EAAkB,CACpB/E,KAAuB,EACvBuF,QAAuBgV,GAAa1V,EAAY,IAAIna,WACpD4b,MAAuBiU,GAAa1V,EAAY,IAAIna,WACpDoZ,qBAAuBA,EACvBD,aAAuBA,EACvBL,SAAuB,KACvB+C,SAAuBgU,GAAa1V,EAAY,IAChDoB,GAAuBqU,GAAczV,EAAY,IACjDnoB,MAAuB69B,GAAa1V,EAAY,IAChDxgB,KAAuBwgB,EAAY,GACnCkX,WAAuBT,GAAczW,EAAY,KAIrD,OAA2B,IAAvBA,EAAY/nB,SAEhBioB,EAAGjgB,MAAOic,EAAAA,EAAAA,GAAUgc,GAEpBH,GAAmB7X,EAAIF,EAAYtnB,MAAM,GAAIs+B,KAJN9W,CAO3C,CA8GmBmY,CAAcH,GAK7B,OAAOp4B,GAAOY,WAAW,iCAAD,OAAmCw3B,EAAQ,IAAOn4B,EAAAA,GAAAA,OAAAA,sBAAqC,CAC3GY,UAAW,mBACXm3B,gBAAiBI,EAAQ,IAEjC,CCjfO,I,uSCcDp4B,GAAS,IAAIC,EAAAA,GDdI,mBC8GjBwf,GAAuD,CACzDmB,SAAS,EAAMlhB,MAAM,EAAMuhB,MAAM,EAAMW,UAAU,EAAM/C,UAAS,EAAM8C,OAAO,EAAML,IAAI,EAAMvpB,OAAO,EACpGsjB,MAAM,EAAM+b,YAAY,EACxBlY,cAAc,EAAMC,sBAAsB,EAC1CqZ,YAAY,EACZC,iBAAiB,GAGrB,SAAe3X,GAAY4X,EAA6BC,G,wIACvC,O,SAAMA,EAAa,OAMhC,MAJqB,kBAFfhgC,EAAO,EAAH,OAGNqH,GAAOyb,mBAAmB,8BAA+B,OAAQ9iB,GAGrE,4BAEWqnB,EAAAA,EAAAA,IAAWrnB,IAAK,wCASX,OANX+/B,GACD14B,GAAOY,WAAW,sDAAuDX,EAAAA,GAAAA,OAAAA,sBAAqC,CAC1GY,UAAW,gBAElB,UAEqB63B,EAAS5X,YAAYnoB,GAAK,QAI/C,OAFc,OAFT6oB,EAAU,EAAH,OAGTxhB,GAAOyb,mBAAmB,kDAAmD,OAAQ9iB,GACxF,kBAEM6oB,GAAO,wD,CAIlB,SAAeoX,GAAiBF,EAA6B3gC,EAAY8gC,G,oIACjEhgC,MAAMG,QAAQ6/B,GAAY,CAAF,eACjB,OADiB,SACX3X,QAAQC,IAAI0X,EAAU/P,KAAI,SAAC+P,EAAWv8B,GAC/C,OAAOs8B,GACHF,EACE7/B,MAAMG,QAAQjB,GAAUA,EAAMuE,GAAQvE,EAAM8gC,EAAUlgC,MACxDkgC,EAER,KAAG,OAIsC,OAI2B,QAU8B,yCAlB/F,UAGgB,YAAnBA,EAAUxd,KAAkB,gBACrB,OADqB,SACfyF,GAAY4X,EAAU3gC,GAAM,UAGtB,UAAnB8gC,EAAUxd,KAAgB,iBACnB,OADmB,UACbud,GAAiBF,EAAU3gC,EAAO8gC,EAAUC,YAAW,WAG7C,UAAvBD,EAAUjd,SAAoB,oBACzB/iB,MAAMG,QAAQjB,GAAQ,CAAF,yCACdmpB,QAAQ6X,OAAO/4B,GAAOg5B,UAAU,0BAA2B/4B,EAAAA,GAAAA,OAAAA,iBAAgC,CAC9Fg5B,SAAU,QACVlhC,MAAAA,MACD,QAEA,OAFA,UAEMmpB,QAAQC,IAAIppB,EAAM+wB,KAAI,SAACnuB,GAAC,OAAKi+B,GAAiBF,EAAU/9B,EAAGk+B,EAAUK,cAAc,KAAE,iCAG/FnhC,GAAK,2C,CAGhB,SAAeuoB,GAAoB6Y,EAAoBC,EAA4BC,G,+JA0C9D,OAxCbC,EAA2B,CAAC,EAC5BD,EAAKlhC,SAAWihC,EAASG,OAAOphC,OAAS,GAAuC,kBAA3BkhC,EAAKA,EAAKlhC,OAAS,KACxEmhC,GAAYtY,EAAAA,EAAAA,IAAYqY,EAAKvB,QAIjC93B,GAAOw5B,mBAAmBH,EAAKlhC,OAAQihC,EAASG,OAAOphC,OAAQ,sBAG3DghC,EAASM,OACLH,EAAUrY,KAGVqY,EAAUrY,MAAOtC,EAAAA,EAAAA,IAAkB,CAC/B+a,SAAU5Y,GAAYqY,EAASM,OAAQH,EAAUrY,MACjDwY,OAAQN,EAASM,OAAOzZ,eACzBqB,MAAK,SAAOsY,GAAK,OAAIpY,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,sEAKnB,OAJGvB,EAAAA,EAAAA,IAAW2Z,EAAMF,UAAYE,EAAMD,UACnC15B,GAAOY,WAAW,8CAA+CX,EAAAA,GAAAA,OAAAA,sBAAqC,CAClGY,UAAW,mBAElB,kBAEM84B,EAAMD,UAAQ,0CACxB,IAGDJ,EAAUrY,KAAOkY,EAASM,OAAOzZ,aAG9BsZ,EAAUrY,OACjBqY,EAAUrY,KAAOH,GAAYqY,EAASrZ,SAAUwZ,EAAUrY,OAQ9D,UACuBtC,EAAAA,EAAAA,IAAkB,CACrC0a,KAAMT,GAAiBO,EAASM,QAAUN,EAASrZ,SAAUuZ,EAAMD,EAASG,QAC5E/X,QAAS2X,EAASS,gBAClBN,WAAY3a,EAAAA,EAAAA,IAAkB2a,IAAc,CAAC,IAC/C,OAwBF,GA5BMO,EAAW,EAAH,KAORn6B,EAAOy5B,EAASW,UAAUC,mBAAmBX,EAAUS,EAASR,MAChEjZ,EAA2B,CAC/B1gB,KAAMA,EACN4hB,GAAIuY,EAASrY,SAOC,OAHV5Q,EAAKipB,EAASP,WAGb3X,QAAiBvB,EAAGuB,MAAQjG,EAAAA,GAAAA,KAAe9K,EAAG+Q,OAAO5b,YACzC,MAAf6K,EAAGgR,WAAoBxB,EAAGwB,SAAWlG,EAAAA,GAAAA,KAAe9K,EAAGgR,WACxC,MAAfhR,EAAGiO,WAAoBuB,EAAGvB,SAAWnD,EAAAA,GAAAA,KAAe9K,EAAGiO,WACpC,MAAnBjO,EAAGsO,eAAwBkB,EAAGlB,aAAexD,EAAAA,GAAAA,KAAe9K,EAAGsO,eACpC,MAA3BtO,EAAGuO,uBAAgCiB,EAAGjB,qBAAuBzD,EAAAA,GAAAA,KAAe9K,EAAGuO,uBACpE,MAAXvO,EAAGqQ,OAAgBb,EAAGa,KAAOrQ,EAAGqQ,MAErB,MAAXrQ,EAAGyK,OAAgB+E,EAAG/E,KAAOzK,EAAGyK,MACf,MAAjBzK,EAAGwmB,aAAsBhX,EAAGgX,WAAaT,GAAc/lB,EAAGwmB,aAG3C,MAAfhX,EAAGwB,UAAoC,MAAhBwX,EAASY,IAAa,CAQ7C,IAFIC,EAAY,KACV5/B,GAAQgG,EAAAA,EAAAA,IAASX,GACdtH,EAAI,EAAGA,EAAIiC,EAAMlC,OAAQC,IAC9B6hC,GAAa,EACT5/B,EAAMjC,KAAM6hC,GAAa,IAEjC7Z,EAAGwB,SAAWlG,EAAAA,GAAAA,KAAe0d,EAASY,KAAKvwB,IAAIwwB,E,CA+ClD,OA3CGrpB,EAAG7Y,SACGmiC,EAAUxe,EAAAA,GAAAA,KAAe9K,EAAG7Y,QACrB6N,UAAawzB,EAASe,SAC/Bn6B,GAAOY,WAAW,2CAA4CX,EAAAA,GAAAA,OAAAA,sBAAqC,CAC/FY,UAAW,kBACX9I,MAAOuhC,EAAUvhC,QAGzBqoB,EAAGroB,MAAQmiC,GAGXtpB,EAAG4nB,aACHpY,EAAGoY,YAAaxX,EAAAA,EAAAA,IAAYpQ,EAAG4nB,aAG/B5nB,EAAG6nB,kBACHrY,EAAGqY,kBAAoB7nB,EAAG6nB,wBAIvBa,EAAU3X,aACV2X,EAAU1X,gBACV0X,EAAUza,gBACVya,EAAUrY,YACVqY,EAAUvhC,aAEVuhC,EAAUje,YACVie,EAAUlC,kBAEVkC,EAAUpa,oBACVoa,EAAUna,4BAEVma,EAAUd,kBACVc,EAAUb,gBAIX2B,EAAYp+B,OAAO46B,KAAK0C,GAAWe,QAAO,SAACv+B,GAAG,OAA+B,MAAnBw9B,EAAWx9B,EAAY,IACnFs+B,EAAUjiC,QACV6H,GAAOY,WAAW,mBAAD,OAAqBw5B,EAAUtR,KAAI,SAACvZ,GAAC,OAAKib,KAAK8P,UAAU/qB,EAAE,IAAE/U,KAAK,MAASyF,EAAAA,GAAAA,OAAAA,sBAAqC,CAC7HY,UAAW,YACXy4B,UAAWc,IAElB,kBAEMha,GAAE,2C,CAwBb,SAASma,GAAgBpB,EAAoB/Y,GACzC,IAAMoa,EAAOpa,EAAGoa,KAAKC,KAAKra,GAC1BA,EAAGoa,KAAO,SAACE,GACP,OAAOF,EAAKE,GAAerZ,MAAK,SAACsZ,GAiC7B,OAhCAA,EAAQC,OAASD,EAAQE,KAAK/R,KAAI,SAACoJ,GAC/B,IAAI4I,GAAuBC,EAAAA,EAAAA,IAAS7I,GAChC8I,EAAyB,KAC7B,IACIA,EAAS7B,EAASW,UAAUmB,SAAS/I,EAC7B,CAAV,MAAO9vB,GAAG,CAwBZ,OArBI44B,IACAF,EAAMzB,KAAO2B,EAAO3B,KACpByB,EAAM/c,OAAS,SAACre,EAAiBw7B,GAC7B,OAAO/B,EAASW,UAAUqB,eAAeH,EAAOI,cAAe17B,EAAMw7B,EACzE,EACAJ,EAAMA,MAAQE,EAAOriC,KACrBmiC,EAAMO,eAAiBL,EAAO3J,WAIlCyJ,EAAMQ,eAAiB,WAAQ,OAAOnC,EAASrZ,QAAU,EACzDgb,EAAMlc,SAAW,WACb,OAAOua,EAASrZ,SAASlB,SAAS+b,EAAQY,UAC9C,EACAT,EAAMU,eAAiB,WACnB,OAAOrC,EAASrZ,SAAS0b,eAAeb,EAAQc,gBACpD,EACAX,EAAMY,sBAAwB,WAC1B,OAAOxa,QAAQE,QAAQuZ,EAC3B,EAEOG,CACX,IAEOH,CACX,GACJ,CACJ,CAEA,SAASgB,GAAUxC,EAAoBC,EAA4BwC,GAC/D,IAAMC,EAAoB1C,EAASM,QAAUN,EAASrZ,SAEtD,OAAO,WAAkC,2BAAhBuZ,EAAgB,yBAAhBA,EAAgB,gB,8IAEb,GAApBzZ,OAAW7F,EACXsf,EAAKlhC,SAAWihC,EAASG,OAAOphC,OAAS,GAAuC,kBAA3BkhC,EAAKA,EAAKlhC,OAAS,GAAgB,gBAC/C,GACf,OADpBmhC,GAAYtY,EAAAA,EAAAA,IAAYqY,EAAKvB,QACrBlY,SAAgB,gBACf,OADe,SACT0Z,EAAU1Z,SAAQ,OAAnCA,EAAW,EAAH,mBAEL0Z,EAAU1Z,SACjByZ,EAAKn/B,KAAKo/B,GAAW,UAIS,MAA9BH,EAAS2C,kBAAyB,iBAClC,OADkC,UAC5B3C,EAAS4C,UAAUnc,GAAS,QAI3B,OAJ2B,UAIrBU,GAAoB6Y,EAAUC,EAAUC,GAAK,QAC/C,OADTjZ,EAAK,EAAH,eACayb,EAAiB9iC,KAAKqnB,EAAIR,GAAS,QAMnD,OANC9lB,EAAS,EAAH,eAGJ/B,EAAQohC,EAASW,UAAUkC,qBAAqB5C,EAAUt/B,GAC1D8hC,GAA8C,IAA5BxC,EAAS6C,QAAQ9jC,SACnCJ,EAAQA,EAAM,IACjB,kBACMA,GAAK,QAOX,MAPW,2BAGR,KAAM8pB,OAAS5hB,EAAAA,GAAAA,OAAAA,iBACf,KAAMuhB,QAAU2X,EAAS3X,QACzB,KAAM6X,KAAOA,EACb,KAAMnZ,YAAcE,GACvB,+D,CAIb,CA0BA,SAAS8b,GAAa/C,EAAoBC,EAA4BwC,GAClE,OAAIxC,EAAS+C,SACFR,GAAUxC,EAAUC,EAAUwC,GA1B7C,SAAmBzC,EAAoBC,GACnC,OAAO,WAAkC,2BAAhBC,EAAgB,yBAAhBA,EAAgB,gB,wIAOrC,GANKF,EAASM,QACVz5B,GAAOY,WAAW,0CAA2CX,EAAAA,GAAAA,OAAAA,sBAAqC,CAC9FY,UAAW,oBAKe,MAA9Bs4B,EAAS2C,kBAAyB,gBAClC,OADkC,SAC5B3C,EAAS4C,YAAW,OAGZ,OAHY,SAGNzb,GAAoB6Y,EAAUC,EAAUC,GAAK,OAE1D,OAFL+C,EAAY,EAAH,cAEEjD,EAASM,OAAOhZ,gBAAgB2b,GAAU,OAG7B,OAHxBhc,EAAK,EAAH,KAGRma,GAAgBpB,EAAU/Y,GAAI,kBAEvBA,GAAE,2C,CAEjB,CAMWic,CAAUlD,EAAUC,EAC/B,CAEA,SAASkD,GAAYjC,GACjB,OAAIA,EAAO7Y,SAA6B,MAAjB6Y,EAAOa,QAA2C,IAAzBb,EAAOa,OAAO/iC,QAItDkiC,EAAO7Y,SAAW,KAAO,KAAO6Y,EAAOa,OAASb,EAAOa,OAAOpS,KAAI,SAACyT,GACvE,OAAI1jC,MAAMG,QAAQujC,GACPA,EAAM/hC,KAAK,KAEf+hC,CACX,IAAG/hC,KAAK,KAAM,IARH,GASf,CAAC,IAEKgiC,GAAY,WAKd,WAAYC,EAAapC,IAAmB,gBACxC3b,EAAAA,EAAAA,IAAe3iB,KAAM,MAAO0gC,IAC5B/d,EAAAA,EAAAA,IAAe3iB,KAAM,SAAUs+B,GAC/Bt+B,KAAK2gC,WAAa,EACtB,CAmDC,OAnDA,mCAED,SAAYpd,EAAoBqd,GAC5B5gC,KAAK2gC,WAAWxiC,KAAK,CAAEolB,SAAUA,EAAUqd,KAAMA,GACrD,GAAC,4BAED,SAAerd,GACX,IAAIsd,GAAO,EACX7gC,KAAK2gC,WAAa3gC,KAAK2gC,WAAWrC,QAAO,SAACwC,GACtC,SAAID,GAAQC,EAAKvd,WAAaA,KAC9Bsd,GAAO,GACA,EACX,GACJ,GAAC,gCAED,WACI7gC,KAAK2gC,WAAa,EACtB,GAAC,uBAED,WACI,OAAO3gC,KAAK2gC,WAAW5T,KAAI,SAAC1wB,GAAC,OAAKA,EAAEknB,QAAQ,GAChD,GAAC,2BAED,WACI,OAAOvjB,KAAK2gC,WAAWvkC,MAC3B,GAAC,iBAED,SAAIkhC,GAAgB,WACVyD,EAAgB/gC,KAAK+gC,gBAc3B,OAbA/gC,KAAK2gC,WAAa3gC,KAAK2gC,WAAWrC,QAAO,SAACwC,GAEtC,IAAME,EAAW1D,EAAKzgC,QAQtB,OALAokC,YAAW,WACPH,EAAKvd,SAASzB,MAAM,EAAMkf,EAC9B,GAAG,IAGMF,EAAKF,IAClB,IAEOG,CACX,GAAC,0BAED,SAAahC,GACb,GAEA,qBACA,SAAQA,GACJ,MAAO,CAAEA,EACb,KAAC,EA5Da,GA+DZmC,GAAkB,0CACpB,+CACU,QAAS,KACnB,CAAC,iBAHmB,CAAQT,IAa1BU,GAAqB,0CAKvB,WAAY1b,EAAiB2b,EAA8B/D,EAAyB8B,GAAoC,sBACpH,IAAMb,EAAsB,CACxB7Y,QAASA,GAGT+a,EAAQY,EAAkBC,cAAchE,GAWD,OAVvC8B,GACIqB,IAAUrB,EAAO,IAAMl7B,GAAOyb,mBAAmB,iBAAkB,SAAUyf,GACjFb,EAAOa,OAASA,EAAOtiC,SAEvByhC,EAAOa,OAAS,CAAEqB,GAGtB,cAAMD,GAAYjC,GAASA,IAC3B3b,EAAAA,EAAAA,KAAe,UAAM,UAAW8C,IAChC9C,EAAAA,EAAAA,KAAe,UAAM,YAAaye,IAClCze,EAAAA,EAAAA,KAAe,UAAM,WAAY0a,GAAU,CAC/C,CA4BC,OA5BA,oCAGD,SAAa0B,GAAY,YACrB,2DAAmBA,GAEnBA,EAAMA,MAAQ/+B,KAAKq9B,SAASzgC,KAC5BmiC,EAAMO,eAAiBt/B,KAAKq9B,SAASiE,SAErCvC,EAAM/c,OAAS,SAACre,EAAiBw7B,GAC7B,OAAO,EAAKpB,UAAUqB,eAAe,EAAK/B,SAAU15B,EAAMw7B,EAC9D,EAEA,IACIJ,EAAMzB,KAAOt9B,KAAK+9B,UAAUqB,eAAep/B,KAAKq9B,SAAU0B,EAAMp7B,KAAMo7B,EAAMI,O,CAC9E,MAAOlc,GACL8b,EAAMzB,KAAO,KACbyB,EAAMwC,YAActe,C,CAE5B,GAAC,qBAED,SAAQ8b,GACJ,IAAMyC,GAASC,EAAAA,EAAAA,IAAkB1C,EAAMzB,MACvC,GAAIkE,EAAOplC,OAAU,MAAMolC,EAAO,GAAGve,MAErC,IAAMqa,GAAQyB,EAAMzB,MAAQ,IAAIzgC,QAEhC,OADAygC,EAAKn/B,KAAK4gC,GACHzB,CACX,KAAC,EAlDsB,CAAQmD,IA0D7BiB,GAAqB,0CAIvB,WAAYjc,EAAiB2b,GAA4B,MAGA,OAHA,eACrD,cAAM,IAAK,CAAE3b,QAASA,KACtB9C,EAAAA,EAAAA,KAAe,UAAM,UAAW8C,IAChC9C,EAAAA,EAAAA,KAAe,UAAM,YAAaye,GAAmB,CACzD,CAkBC,OAlBA,oCAED,SAAarC,GAAY,YACrB,2DAAmBA,GAEnB,IACI,IAAME,EAASj/B,KAAK+9B,UAAUmB,SAASH,GACvCA,EAAMA,MAAQE,EAAOriC,KACrBmiC,EAAMO,eAAiBL,EAAO3J,UAE9ByJ,EAAM/c,OAAS,SAACre,EAAiBw7B,GAC7B,OAAO,EAAKpB,UAAUqB,eAAeH,EAAOI,cAAe17B,EAAMw7B,EACrE,EAEAJ,EAAMzB,KAAO2B,EAAO3B,IAEpB,CADF,MAAOra,GACL,CAER,KAAC,EA1BsB,CAAQwd,IAkCtBkB,GAAY,WA8BrB,WAAYC,EAAuBR,EAAsCtB,GAAoC,4BAGzGnd,EAAAA,EAAAA,IAAe3iB,KAAM,aAAa6hC,EAAAA,EAAAA,IAAS,0CAA4B,eAArCA,CAAqDT,IAE/D,MAApBtB,IACAnd,EAAAA,EAAAA,IAAe3iB,KAAM,WAAY,OACjC2iB,EAAAA,EAAAA,IAAe3iB,KAAM,SAAU,OACxB4jB,EAAOke,SAAShC,KACvBnd,EAAAA,EAAAA,IAAe3iB,KAAM,WAAY8/B,EAAiB/b,UAAY,OAC9DpB,EAAAA,EAAAA,IAAe3iB,KAAM,SAAU8/B,IACxBrd,EAASsf,WAAWjC,KAC3Bnd,EAAAA,EAAAA,IAAe3iB,KAAM,WAAY8/B,IACjCnd,EAAAA,EAAAA,IAAe3iB,KAAM,SAAU,OAE/BiE,GAAOyb,mBAAmB,6BAA8B,mBAAoBogB,IAGhFnd,EAAAA,EAAAA,IAAe3iB,KAAM,aAAc,CAAC,IACpC2iB,EAAAA,EAAAA,IAAe3iB,KAAM,cAAe,CAAC,IACrC2iB,EAAAA,EAAAA,IAAe3iB,KAAM,YAAa,CAAC,IACnC2iB,EAAAA,EAAAA,IAAe3iB,KAAM,sBAAuB,CAAC,IAE7C2iB,EAAAA,EAAAA,IAAe3iB,KAAM,UAAW,CAAC,GAG7B,IAAMgiC,EAAqD,CAAC,EA+BhE,GA9BI/hC,OAAO46B,KAAK76B,KAAK+9B,UAAUc,QAAQ/e,SAAQ,SAACwf,GACxC,IAAMP,EAAQ,EAAKhB,UAAUc,OAAOS,IACpC3c,EAAAA,EAAAA,IAAe,EAAKsf,QAAS3C,GAAgB,WAAwB,2BAApBhC,EAAgB,yBAAhBA,EAAgB,gBAC7D,MAAO,CACH7X,QAAS,EAAKA,QACd0Z,OAAQ,EAAKpB,UAAUmE,mBAAmBnD,EAAOzB,GAEzD,IACK0E,EAAcjD,EAAMniC,QAASolC,EAAcjD,EAAMniC,MAAQ,IAC9DolC,EAAcjD,EAAMniC,MAAMuB,KAAKmhC,EACnC,IAEAr/B,OAAO46B,KAAKmH,GAAeliB,SAAQ,SAACljB,GAChC,IAAMqlC,EAAUD,EAAcplC,GACP,IAAnBqlC,EAAQ7lC,QACRumB,EAAAA,EAAAA,IAAe,EAAKsf,QAASrlC,EAAM,EAAKqlC,QAAQA,EAAQ,KAExDh+B,GAAOk+B,KAAK,2BAAD,OAA6BvlC,EAAK,aAAMqlC,EAAQxjC,KAAK,MAAK,KAE7E,KAGJkkB,EAAAA,EAAAA,IAAe3iB,KAAM,iBAAkB,CAAC,IACxC2iB,EAAAA,EAAAA,IAAe3iB,KAAM,gBAAiB,CAAC,GAElB,MAAjB4hC,GACA39B,GAAOyb,mBAAmB,uCAAwC,gBAAiBkiB,IAGvFjf,EAAAA,EAAAA,IAAe3iB,KAAM,UAAW4hC,GAC5B5hC,KAAK+jB,UACLpB,EAAAA,EAAAA,IAAe3iB,KAAM,kBAAmB+kB,GAAY/kB,KAAK+jB,SAAU6d,SAEnE,KACIjf,EAAAA,EAAAA,IAAe3iB,KAAM,kBAAmBmlB,QAAQE,SAAQpB,EAAAA,EAAAA,IAAW2d,I,CACrE,MAAO3e,GAELhf,GAAOY,WAAW,2DAA4DX,EAAAA,GAAAA,OAAAA,sBAAqC,CAC/GY,UAAW,gB,CAMvB9E,KAAK69B,gBAAgB7a,OAAM,SAAC3c,GAAQ,IAEpC,IAAM+7B,EAAmD,CAAC,EACpDC,EAAuD,CAAC,EAC9DpiC,OAAO46B,KAAK76B,KAAK+9B,UAAUuE,WAAWxiB,SAAQ,SAACwV,GAC3C,IAAM+H,EAAW,EAAKU,UAAUuE,UAAUhN,GAI1C,GAAI+M,EAAiB/M,GACjBrxB,GAAOk+B,KAAK,2BAAD,OAA6B1T,KAAK8P,UAAUjJ,SAD3D,CAIA+M,EAAiB/M,IAAa,EAK1B,IAAM14B,EAAOygC,EAASzgC,KACjBwlC,EAAY,IAAD,OAAMxlC,MAAYwlC,EAAY,IAAD,OAAMxlC,IAAW,IAC9DwlC,EAAY,IAAD,OAAMxlC,IAASuB,KAAKm3B,GAGA,MAApB,EAAMA,KACjB3S,EAAAA,EAAAA,IAAyB,EAAM2S,EAAW6K,GAAa,EAAM9C,GAAU,IAM1C,MAA7B,EAAKiF,UAAUhN,KACf3S,EAAAA,EAAAA,IAAe,EAAK2f,UAAWhN,EAAW6K,GAAa,EAAM9C,GAAU,IAGzC,MAA9B,EAAKkF,WAAWjN,KAChB3S,EAAAA,EAAAA,IAAe,EAAK4f,WAAYjN,EAAWsK,GAAU,EAAMvC,GAAU,IAG9B,MAAvC,EAAK9Y,oBAAoB+Q,KACzB3S,EAAAA,EAAAA,IAAe,EAAK4B,oBAAqB+Q,EAvczD,SAAuB8H,EAAoBC,GACvC,OAAO,WAA4B,2BAAhBC,EAAgB,yBAAhBA,EAAgB,gBAC/B,OAAO/Y,GAAoB6Y,EAAUC,EAAUC,EACnD,CACJ,CAmcoEkF,CAAc,EAAMnF,IAGzC,MAA/B,EAAK/Y,YAAYgR,KACjB3S,EAAAA,EAAAA,IAAe,EAAK2B,YAAagR,EArcjD,SAAuB8H,EAAoBC,GACvC,IAAMyC,EAAoB1C,EAASM,QAAUN,EAASrZ,SACtD,OAAO,WAAkC,2BAAhBuZ,EAAgB,yBAAhBA,EAAgB,gB,sIAO1B,OANNwC,GACD77B,GAAOY,WAAW,wCAAyCX,EAAAA,GAAAA,OAAAA,sBAAqC,CAC5FY,UAAW,gBAElB,SAEgByf,GAAoB6Y,EAAUC,EAAUC,GAAK,OACvD,OADDjZ,EAAK,EAAH,cACKyb,EAAiBxb,YAAYD,GAAG,kF,CAErD,CAyb4Doe,CAAc,EAAMpF,G,CAExE,IAEAp9B,OAAO46B,KAAKuH,GAAatiB,SAAQ,SAACljB,GAE9B,IAAM8lC,EAAaN,EAAYxlC,GAC/B,KAAI8lC,EAAWtmC,OAAS,GAAxB,CAGAQ,EAAOA,EAAKgjB,UAAU,GAEtB,IAAM0V,EAAYoN,EAAW,GAG7B,IACkC,MAAf,EAAM9lC,KACjB+lB,EAAAA,EAAAA,IAAyB,EAAM/lB,EAAiB,EAAM04B,GAEjD,CAAX,MAAOjvB,GAAI,CAEe,MAAxB,EAAKi8B,UAAU1lC,KACf+lB,EAAAA,EAAAA,IAAe,EAAK2f,UAAW1lC,EAAM,EAAK0lC,UAAUhN,IAG3B,MAAzB,EAAKiN,WAAW3lC,KAChB+lB,EAAAA,EAAAA,IAAe,EAAK4f,WAAY3lC,EAAM,EAAK2lC,WAAWjN,IAGpB,MAAlC,EAAK/Q,oBAAoB3nB,KACzB+lB,EAAAA,EAAAA,IAAe,EAAK4B,oBAAqB3nB,EAAM,EAAK2nB,oBAAoB+Q,IAG9C,MAA1B,EAAKhR,YAAY1nB,KACjB+lB,EAAAA,EAAAA,IAAe,EAAK2B,YAAa1nB,EAAM,EAAK0nB,YAAYgR,G,CAEhE,GACJ,CA4FC,OA5FA,gCAcD,WACI,OAAOt1B,KAAKggC,WAChB,GAAC,uBAED,SAAUnc,GAAmB,WA0BzB,OAzBK7jB,KAAK2iC,mBAGF3iC,KAAK+/B,kBACL//B,KAAK2iC,iBAAmB3iC,KAAK+/B,kBAAkBtB,OAAOnZ,MAAK,WACvD,OAAO,CACX,IAOAtlB,KAAK2iC,iBAAmB3iC,KAAK+jB,SAAS6e,QAAQ5iC,KAAKylB,QAAS5B,GAAUyB,MAAK,SAACQ,GAOxE,MANa,OAATA,GACA7hB,GAAOY,WAAW,wBAAyBX,EAAAA,GAAAA,OAAAA,sBAAqC,CAC5E2+B,gBAAiB,EAAKpd,QACtB3gB,UAAW,gBAGZ,CACX,KAID9E,KAAK2iC,gBAChB,GAMA,sBAEA,SAASpF,GAA8B,WAC9Bv9B,KAAK09B,QACNz5B,GAAOY,WAAW,0CAA2CX,EAAAA,GAAAA,OAAAA,sBAAqC,CAAEY,UAAW,8BAGnH,IAAMuf,GAAqCY,EAAAA,EAAAA,IAAYsY,GAAa,CAAC,GAQrE,MANA,CAAC,OAAQ,MAAMzd,SAAQ,SAAS/f,GACN,MAAZskB,EAAItkB,IACdkE,GAAOY,WAAW,mBAAqB9E,EAAKmE,EAAAA,GAAAA,OAAAA,sBAAqC,CAAEY,UAAW/E,GAClG,IAEAskB,EAAGkB,GAAKvlB,KAAK69B,gBACN79B,KAAK8iC,WAAWxd,MAAK,WACxB,OAAO,EAAKoY,OAAOhZ,gBAAgBL,EACvC,GACJ,GAEA,qBACA,SAAQyb,GAC6B,kBAAtBA,IACPA,EAAmB,IAAI5Z,EAAW4Z,EAAkB9/B,KAAK+jB,WAG7D,IAAMqZ,EAAW,IAAyCp9B,KAAKuF,YAAcvF,KAAKylB,QAASzlB,KAAK+9B,UAAW+B,GAK3G,OAJI9/B,KAAK+/B,oBACLpd,EAAAA,EAAAA,IAAeya,EAAU,oBAAqBp9B,KAAK+/B,mBAGhD3C,CACX,GAEA,oBACA,SAAOwE,GACH,OAAO,IAAyC5hC,KAAKuF,YAAcq8B,EAAe5hC,KAAK+9B,UAAW/9B,KAAK09B,QAAU19B,KAAK+jB,SAC1H,GAAC,oCAMO,SAAuBgf,GAE3B,OAAI/iC,KAAKgjC,eAAeD,EAAarC,KAC1B1gC,KAAKgjC,eAAeD,EAAarC,KAEpCqC,CACZ,GAAC,8BAEO,SAAiBzf,GACrB,GAA0B,kBAAfA,EAAyB,CAIhC,GAAkB,UAAdA,EACA,OAAOtjB,KAAKijC,uBAAuB,IAAI/B,IAI3C,GAAkB,UAAd5d,EACA,OAAOtjB,KAAKijC,uBAAuB,IAAIxC,GAAa,QAAS,OAIjE,GAAkB,MAAdnd,EACA,OAAOtjB,KAAKijC,uBAAuB,IAAIvB,GAAqB1hC,KAAKylB,QAASzlB,KAAK+9B,YAInF,IAAMV,EAAWr9B,KAAK+9B,UAAUmF,SAAS5f,GACzC,OAAOtjB,KAAKijC,uBAAuB,IAAI9B,GAAqBnhC,KAAKylB,QAASzlB,KAAK+9B,UAAWV,G,CAI9F,GAAI/Z,EAAU6b,QAAU7b,EAAU6b,OAAO/iC,OAAS,EAAG,CAGjD,IACI,IAAMokC,EAAQld,EAAU6b,OAAO,GAC/B,GAAsB,kBAAXqB,EACP,MAAM,IAAItjC,MAAM,iBAEpB,IAAMmgC,EAAWr9B,KAAK+9B,UAAUmF,SAAS1C,GACzC,OAAOxgC,KAAKijC,uBAAuB,IAAI9B,GAAqBnhC,KAAKylB,QAASzlB,KAAK+9B,UAAWV,EAAU/Z,EAAU6b,QACjG,CAAf,MAAOlc,GAAQ,CAGjB,IAAMqb,EAAsB,CACxB7Y,QAASzlB,KAAKylB,QACd0Z,OAAQ7b,EAAU6b,QAGtB,OAAOn/B,KAAKijC,uBAAuB,IAAIxC,GAAaF,GAAYjC,GAASA,G,CAG7E,OAAOt+B,KAAKijC,uBAAuB,IAAIvB,GAAqB1hC,KAAKylB,QAASzlB,KAAK+9B,WACnF,GAAC,iCAED,SAAoBgF,GAChB,GAAqC,IAAjCA,EAAahC,gBAAuB,QAC7B/gC,KAAKgjC,eAAeD,EAAarC,KAGxC,IAAMyC,EAAOnjC,KAAKojC,cAAcL,EAAarC,KACzCyC,GAAQJ,EAAazE,SACrBt+B,KAAK+jB,SAAS3b,IAAI26B,EAAazE,OAAQ6E,UAChCnjC,KAAKojC,cAAcL,EAAarC,K,CAGnD,GAGA,wBACA,SAAWqC,EAA4B5M,EAAU5S,GAAkB,WACzDwb,GAAeC,EAAAA,EAAAA,IAAS7I,GAe9B,OAbA4I,EAAMQ,eAAiB,WACdhc,IACLwf,EAAaxD,eAAehc,GAC5B,EAAK8f,oBAAoBN,GAC7B,EAEAhE,EAAMlc,SAAW,WAAQ,OAAO,EAAKkB,SAASlB,SAASsT,EAAIqJ,UAAY,EACvET,EAAMU,eAAiB,WAAQ,OAAO,EAAK1b,SAAS0b,eAAetJ,EAAIuJ,gBAAkB,EACzFX,EAAMY,sBAAwB,WAAQ,OAAO,EAAK5b,SAAS4b,sBAAsBxJ,EAAIuJ,gBAAkB,EAGvGqD,EAAaO,aAAavE,GAEnBA,CACX,GAAC,+BAEO,SAAkBgE,EAA4Bxf,EAAoBqd,GAAa,WAWnF,GAVK5gC,KAAK+jB,UACN9f,GAAOY,WAAW,wDAAyDX,EAAAA,GAAAA,OAAAA,sBAAqC,CAAEY,UAAW,SAGjIi+B,EAAaQ,YAAYhgB,EAAUqd,GAGnC5gC,KAAKgjC,eAAeD,EAAarC,KAAOqC,GAGnC/iC,KAAKojC,cAAcL,EAAarC,KAAM,CACvC,IAAM8C,EAAc,SAACrN,GACjB,IAAI4I,EAAQ,EAAK0E,WAAWV,EAAc5M,EAAK5S,GAG/C,GAAyB,MAArBwb,EAAMwC,YACN,IACI,IAAMjE,EAAOyF,EAAaW,QAAQ3E,GAClC,EAAKoE,KAAI,MAAT,EAAI,CAAMJ,EAAazE,QAAM,eAAKhB,I,CACpC,MAAOra,GACL8b,EAAMwC,YAActe,EAAMA,K,CAKP,MAAvB8f,EAAazE,QACb,EAAK6E,KAAK,QAASpE,GAIE,MAArBA,EAAMwC,aACN,EAAK4B,KAAK,QAASpE,EAAMwC,YAAaxC,EAE9C,EACA/+B,KAAKojC,cAAcL,EAAarC,KAAO8C,EAGZ,MAAvBT,EAAazE,QACbt+B,KAAK+jB,SAASP,GAAGuf,EAAazE,OAAQkF,E,CAGlD,GAAC,yBAED,SAAYzE,EAA6B4E,EAA0CC,GAAkB,WAC3Fb,EAAe/iC,KAAK6jC,iBAAiB9E,GACrCT,GAASrZ,EAAAA,EAAAA,IAAY8d,EAAazE,QAYxC,MAVqC,kBAA1BqF,IAAsCG,EAAAA,EAAAA,IAAYH,EAAsB,KAChE,MAAXC,GACA3/B,GAAOyb,mBAAmB,wCAAyC,UAAWkkB,GAE9DtF,EAAQkB,UAAYmE,IAE9BrF,EAAQyF,UAAsC,MAAxBJ,EAAgCA,EAAsB,EAC5ErF,EAAQsF,QAAuB,MAAXA,EAAmBA,EAAS,UAGvD5jC,KAAK+jB,SAASigB,QAAQ1F,GAAQhZ,MAAK,SAACwZ,GACvC,OAAOA,EAAK/R,KAAI,SAACoJ,GAAG,OAAK,EAAKsN,WAAWV,EAAc5M,EAAK,KAAK,GACrE,GACJ,GAAC,gBAED,SAAG4I,EAA6Bxb,GAE5B,OADAvjB,KAAKikC,kBAAkBjkC,KAAK6jC,iBAAiB9E,GAAQxb,GAAU,GACxDvjB,IACX,GAAC,kBAED,SAAK++B,EAA6Bxb,GAE9B,OADAvjB,KAAKikC,kBAAkBjkC,KAAK6jC,iBAAiB9E,GAAQxb,GAAU,GACxDvjB,IACX,GAAC,kBAED,SAAKsjB,GACD,IAAKtjB,KAAK+jB,SAAY,OAAO,EAEyB,IAAtD,IAAMgf,EAAe/iC,KAAK6jC,iBAAiBvgB,GAAW,mBAHjBga,EAAgB,iCAAhBA,EAAgB,kBAIrD,IAAMv/B,EAAUglC,EAAamB,IAAI5G,GAAQ,EAKzC,OAFAt9B,KAAKqjC,oBAAoBN,GAElBhlC,CACX,GAAC,2BAED,SAAculB,GAAgC,WAC1C,OAAKtjB,KAAK+jB,SACO,MAAbT,EACOrjB,OAAO46B,KAAK76B,KAAKgjC,gBAAgBlI,QAAO,SAACC,EAAOh7B,GACnD,OAAOg7B,EAAQ,EAAKiI,eAAejjC,GAAKghC,eAC5C,GAAG,GAEA/gC,KAAK6jC,iBAAiBvgB,GAAWyd,gBANX,CAOjC,GAAC,uBAED,SAAUzd,GAAgC,WACtC,IAAKtjB,KAAK+jB,SAAY,MAAO,GAE7B,GAAiB,MAAbT,EAAmB,kBACnB,IAAMvlB,EAA0B,GAChC,IAAK,IAAI2iC,KAAO,EAAKsC,eACjB,EAAKA,eAAetC,GAAKyD,YAAYrkB,SAAQ,SAACyD,GAC1CxlB,EAAOI,KAAKolB,EAChB,IAEJ,MAAO,CAAP,EAAOxlB,EAAO,CAPK,GAOL,iC,CAGlB,OAAOiC,KAAK6jC,iBAAiBvgB,GAAW6gB,WAC5C,GAAC,gCAED,SAAmB7gB,GACf,IAAKtjB,KAAK+jB,SAAY,OAAO/jB,KAE7B,GAAiB,MAAbsjB,EAAmB,CACnB,IAAK,IAAMod,KAAO1gC,KAAKgjC,eAAgB,CACnC,IAAMD,EAAe/iC,KAAKgjC,eAAetC,GACzCqC,EAAaqB,qBACbpkC,KAAKqjC,oBAAoBN,E,CAE7B,OAAO/iC,I,CAIX,IAAM+iC,EAAe/iC,KAAK6jC,iBAAiBvgB,GAI3C,OAHAyf,EAAaqB,qBACbpkC,KAAKqjC,oBAAoBN,GAElB/iC,IACX,GAAC,iBAED,SAAIsjB,EAAiCC,GACjC,IAAKvjB,KAAK+jB,SAAY,OAAO/jB,KAC7B,IAAM+iC,EAAe/iC,KAAK6jC,iBAAiBvgB,GAG3C,OAFAyf,EAAaxD,eAAehc,GAC5BvjB,KAAKqjC,oBAAoBN,GAClB/iC,IACX,GAAC,4BAED,SAAesjB,EAAiCC,GAC5C,OAAOvjB,KAAKoI,IAAIkb,EAAWC,EAC/B,IAAC,iCApUD,SAA0BY,GACtB,OAAOkgB,EAAAA,EAAAA,IAAmBlgB,EAC9B,GAAC,0BAED,SAAoBid,GAChB,OAAIkD,EAAAA,GAAAA,YAAsBlD,GACfA,EAEJ,IAAIkD,EAAAA,GAAUlD,EACzB,GAAC,uBA+ED,SAAiBplC,GACb,OAAOuoC,EAAAA,GAAAA,UAAkBvoC,EAC7B,KAAC,EAjRoB,GA+fZwoC,GAAS,uHAAQ7C,IAKjB8C,GAAe,WAMxB,WAAYrD,EAAsCsD,EAA0ChH,IAAe,eAEvG,IAAIiH,EAAsB,KAeU,QAZhCA,EADqB,kBAAdD,EACOA,GACPE,EAAAA,EAAAA,IAAQF,IACDtkB,EAAAA,EAAAA,IAAQskB,GACfA,GAAwC,kBAArBA,EAASG,OAEfH,EAAUG,OAGhB,KAIFjlB,UAAU,EAAG,KAAe+kB,EAAc,KAAOA,MAG5Db,EAAAA,EAAAA,IAAYa,IAAiBA,EAAYvoC,OAAS,IACnD6H,GAAOyb,mBAAmB,mBAAoB,WAAYglB,GAI1DhH,IAAW9Z,EAAOke,SAASpE,IAC3Bz5B,GAAOyb,mBAAmB,iBAAkB,SAAUge,IAG1D/a,EAAAA,EAAAA,IAAe3iB,KAAM,WAAY2kC,IACjChiB,EAAAA,EAAAA,IAAe3iB,KAAM,aAAa6hC,EAAAA,EAAAA,IAAS,0CAA4B,eAArCA,CAAqDT,KACvFze,EAAAA,EAAAA,IAAe3iB,KAAM,SAAU09B,GAAU,KAC7C,CAmHC,OAjHD,4CACA,WAGI,IAFA,IAAIrZ,EAAyB,CAAC,EAE9B,mBAHoBiZ,EAAgB,yBAAhBA,EAAgB,gBAIpC,GAAIA,EAAKlhC,SAAW4D,KAAK+9B,UAAU+G,OAAOtH,OAAOphC,OAAS,GAAuC,kBAA3BkhC,EAAKA,EAAKlhC,OAAS,GAErF,IAAK,IAAM2D,KADXskB,GAAKY,EAAAA,EAAAA,IAAYqY,EAAKvB,OAElB,IAAKrY,GAAuB3jB,GACxB,MAAM,IAAI7C,MAAM,gCAAkC6C,GAW9D,GALA,CAAC,OAAQ,OAAQ,MAAM+f,SAAQ,SAAC/f,GACN,MAAZskB,EAAItkB,IACdkE,GAAOY,WAAW,mBAAqB9E,EAAKmE,EAAAA,GAAAA,OAAAA,sBAAqC,CAAEY,UAAW/E,GAClG,IAEIskB,EAAGroB,MAAO,CACV,IAAMA,EAAQ2jB,EAAAA,GAAAA,KAAe0E,EAAGroB,OAC3BA,EAAM6N,UAAa7J,KAAK+9B,UAAU+G,OAAO1G,SAC1Cn6B,GAAOY,WAAW,gDAAiDX,EAAAA,GAAAA,OAAAA,sBAAqC,CACpGY,UAAW,kBACX9I,MAAOqoB,EAAGroB,O,CActB,OARAiI,GAAOw5B,mBAAmBH,EAAKlhC,OAAQ4D,KAAK+9B,UAAU+G,OAAOtH,OAAOphC,OAAQ,4BAG5EioB,EAAG1gB,MAAOyc,EAAAA,EAAAA,KAAQL,EAAAA,EAAAA,IAAO,CACrB/f,KAAK0kC,SACL1kC,KAAK+9B,UAAUgH,aAAazH,MAGzBjZ,CACX,GAAC,oBAEK,WAA0B,2BAAhBiZ,EAAgB,yBAAhBA,EAAgB,gB,gJAab,OAXXC,EAAiB,CAAC,EAGlBD,EAAKlhC,SAAW4D,KAAK+9B,UAAU+G,OAAOtH,OAAOphC,OAAS,IACtDmhC,EAAYD,EAAKvB,OAIrB93B,GAAOw5B,mBAAmBH,EAAKlhC,OAAQ4D,KAAK+9B,UAAU+G,OAAOtH,OAAOphC,OAAQ,4BAE5E,SACqBygC,GAAiB78B,KAAK09B,OAAQJ,EAAMt9B,KAAK+9B,UAAU+G,OAAOtH,QAAO,OAO3E,OAPLwH,EAAS,EAAH,MACL7mC,KAAKo/B,GAGN0H,EAAajlC,KAAKklC,qBAAoB,MAAzBllC,MAAI,OAAyBglC,IAEhD,UACiBhlC,KAAK09B,OAAOhZ,gBAAgBugB,GAAW,QAQN,OAR5C5gB,EAAK,EAAH,KAEFoB,GAAUoc,EAAAA,EAAAA,IAA+C7hC,KAAKuF,YAAa,qBAAjEs8B,CAAuFxd,GAIvGma,GAHMpB,GAAWyE,EAAAA,EAAAA,IAAgG7hC,KAAKuF,YAAa,cAAlHs8B,CAAiIpc,EAASzlB,KAAK+9B,UAAW/9B,KAAK09B,QAGtJrZ,IAE1B1B,EAAAA,EAAAA,IAAeya,EAAU,oBAAqB/Y,GAAI,kBAC3C+Y,GAAQ,gD,GAClB,oBAED,SAAO3X,GACH,OAAczlB,KAAKuF,YAAc4/B,YAAY1f,EAASzlB,KAAK+9B,UAAW/9B,KAAK09B,OAC/E,GAAC,qBAED,SAAQA,GACJ,OAAO,IAAgD19B,KAAKuF,YAAcvF,KAAK+9B,UAAW/9B,KAAK0kC,SAAUhH,EAC7G,IAAC,2BAED,SAAoB0H,EAAqB1H,GACf,MAAlB0H,GACAnhC,GAAOY,WAAW,0BAA2BX,EAAAA,GAAAA,OAAAA,iBAAgC,CAAEg5B,SAAU,mBAG9D,kBAApBkI,IACPA,EAAiB3W,KAAKC,MAAM0W,IAGhC,IAAMC,EAAMD,EAAeC,IAEvBX,EAAgB,KAOpB,OANIU,EAAeV,SACfA,EAAWU,EAAeV,SACnBU,EAAeE,KAAOF,EAAeE,IAAIZ,WAChDA,EAAWU,EAAeE,IAAIZ,UAG3B,IAAI1kC,KAAKqlC,EAAKX,EAAUhH,EACnC,GAAC,0BAED,SAAoB0D,GAChB,OAAOoD,GAASe,aAAanE,EACjC,GAAC,gCAED,SAA0B/c,GACtB,OAAOggB,EAAAA,EAAAA,IAAmBhgB,EAC9B,GAAC,yBAED,SAAmBoB,EAAiB2b,EAAsC1D,GACtE,OAAO,IAAI8G,GAAS/e,EAAS2b,EAAmB1D,EACpD,KAAC,EAzJuB,G,YClnCtBz5B,GAAS,IAAIC,EAAAA,GAAOi0B,GAAAA,GAIpBqN,GAAoB,CAAC,EAErB1L,GAAOna,EAAAA,GAAAA,KAAe,GACtB8lB,GAAc9lB,EAAAA,GAAAA,MAAgB,GAEpC,SAAS+lB,GAAWvf,EAAiBwf,EAAe7gC,EAAmB9I,GACnE,IAAMgpC,EAAc,CAAEW,MAAOA,EAAO7gC,UAAWA,GAE/C,YADckZ,IAAVhiB,IAAuBgpC,EAAOhpC,MAAQA,GACnCiI,GAAOY,WAAWshB,EAASjiB,EAAAA,GAAAA,OAAAA,cAA6B8gC,EACnE,CAIA,IADA,IAAI17B,GAAQ,IACLA,GAAMlN,OAAS,KAAOkN,IAASA,GAGtC,SAASs8B,GAAcC,GAEnB,GAAyB,kBAAdA,EACP,IACIA,EAAWlmB,EAAAA,GAAAA,KAAekmB,GAAU77B,UAC3B,CAAX,MAAO3D,GAAI,CAGjB,MAAyB,kBAAdw/B,GAA0BA,GAAY,GAAKA,GAAY,OAASA,EAAW,GAC1E,IAAMv8B,GAAMsW,UAAU,EAAGimB,GAG9B5hC,GAAOyb,mBAAmB,uBAAwB,WAAYmmB,EACzE,CAEM,SAAUC,GAAY9pC,EAAqB6pC,GAC7B,MAAZA,IAAoBA,EAAW,GACnC,IAAME,EAAaH,GAAcC,GAK3BhgC,GAFN7J,EAAQ2jB,EAAAA,GAAAA,KAAe3jB,IAEA4e,GAAGkf,IACtBj0B,IAAY7J,EAAQA,EAAM8K,IAAI2+B,KAGlC,IADA,IAAIO,EAAWhqC,EAAMyM,IAAIs9B,GAAYl+B,WAC9Bm+B,EAAS5pC,OAAS2pC,EAAW3pC,OAAS,GAAK4pC,EAAW,IAAMA,EAGnEA,EAAWA,EAASvmB,MAAM,wBAAwB,GAElD,IAAMwmB,EAAQjqC,EAAMsc,IAAIytB,GAAYl+B,WASpC,OAPI7L,EADsB,IAAtB+pC,EAAW3pC,OACH6pC,EAEAA,EAAQ,IAAMD,EAGtBngC,IAAY7J,EAAQ,IAAMA,GAEvBA,CACX,CAEM,SAAUkqC,GAAWlqC,EAAe6pC,GAEtB,MAAZA,IAAoBA,EAAW,GACnC,IAAME,EAAaH,GAAcC,GAEX,kBAAX7pC,GAAwBA,EAAMyjB,MAAM,gBAC3Cxb,GAAOyb,mBAAmB,wBAAyB,QAAS1jB,GAIhE,IAAM6J,EAAsC,MAA1B7J,EAAM4jB,UAAU,EAAG,GACjC/Z,IAAY7J,EAAQA,EAAM4jB,UAAU,IAE1B,MAAV5jB,GACAiI,GAAOyb,mBAAmB,gBAAiB,QAAS1jB,GAIxD,IAAMmqC,EAAQnqC,EAAM8hB,MAAM,KACtBqoB,EAAM/pC,OAAS,GACf6H,GAAOyb,mBAAmB,0BAA2B,QAAS1jB,GAGlE,IAAIiqC,EAAQE,EAAM,GAAIH,EAAWG,EAAM,GAKvC,IAJKF,IAASA,EAAQ,KACjBD,IAAYA,EAAW,KAGa,MAAlCA,EAASA,EAAS5pC,OAAS,IAC9B4pC,EAAWA,EAASpmB,UAAU,EAAGomB,EAAS5pC,OAAS,GAYvD,IARI4pC,EAAS5pC,OAAS2pC,EAAW3pC,OAAS,GACtCspC,GAAW,wCAAyC,YAAa,cAIpD,KAAbM,IAAmBA,EAAW,KAG3BA,EAAS5pC,OAAS2pC,EAAW3pC,OAAS,GAAK4pC,GAAY,IAE9D,IAAMI,EAAazmB,EAAAA,GAAAA,KAAesmB,GAC5BI,EAAgB1mB,EAAAA,GAAAA,KAAeqmB,GAEjCM,EAAOF,EAAWt/B,IAAIi/B,GAAar4B,IAAI24B,GAI3C,OAFIxgC,IAAYygC,EAAMA,EAAIx/B,IAAI2+B,KAEvBa,CACX,CAGO,IAAMC,GAAW,WAOpB,WAAYC,EAAuBC,EAAiB56B,EAAeg6B,IAAgB,eAC3EW,IAAqBhB,IACrBvhC,GAAOY,WAAW,2DAA4DX,EAAAA,GAAAA,OAAAA,sBAAqC,CAC/GY,UAAW,oBAInB9E,KAAKymC,OAASA,EACdzmC,KAAK6L,MAAQA,EACb7L,KAAK6lC,SAAWA,EAEhB7lC,KAAKpD,MAAQ6pC,EAAS,GAAI,KAAO,QAAUloC,OAAOsN,GAAS,IAAMtN,OAAOsnC,GAExE7lC,KAAK0mC,YAAcd,GAAcC,GAEjC5lC,OAAO0mC,OAAO3mC,KAClB,CA+CC,OA/CA,iCAED,SAAYhE,GACR,GAAIA,aAAiBuqC,EAAe,OAAOvqC,EAErB,kBAAXA,IACPA,EAAQ,YAAH,OAAeA,IAGxB,IAAIyqC,GAAS,EACT56B,EAAQ,IACRg6B,EAAW,GAEf,GAAsB,kBAAX7pC,EACP,GAAc,UAAVA,QAEG,GAAc,WAAVA,EACPyqC,GAAS,MACN,CACH,IAAMhnB,EAAQzjB,EAAMyjB,MAAM,gCACrBA,GAASxb,GAAOyb,mBAAmB,uBAAwB,SAAU1jB,GAC1EyqC,EAAuB,MAAbhnB,EAAM,GAChB5T,EAAQ5P,SAASwjB,EAAM,IACvBomB,EAAW5pC,SAASwjB,EAAM,G,MAE3B,GAAIzjB,EAAO,CACd,IAAM4hC,EAAQ,SAAC79B,EAAauf,EAAcsnB,GACtC,OAAkB,MAAd5qC,EAAM+D,GAAuB6mC,UACtB5qC,EAAM+D,KAAUuf,GACvBrb,GAAOyb,mBAAmB,yBAA2B3f,EAAM,QAAUuf,EAAM,IAAK,UAAYvf,EAAK/D,EAAM+D,IAEpG/D,EAAM+D,GACjB,EACA0mC,EAAS7I,EAAM,SAAU,UAAW6I,GACpC56B,EAAQ+xB,EAAM,QAAS,SAAU/xB,GACjCg6B,EAAWjI,EAAM,WAAY,SAAUiI,E,CAW3C,OARIh6B,EAAQ,GACR5H,GAAOyb,mBAAmB,gDAAiD,eAAgB7T,GAG3Fg6B,EAAW,IACX5hC,GAAOyb,mBAAmB,4CAA6C,kBAAmBmmB,GAGvF,IAAIU,EAAYf,GAAmBiB,EAAQ56B,EAAOg6B,EAC7D,KAAC,EAtEmB,GAyEXgB,GAAW,WAOpB,WAAYL,EAAuBljC,EAAatH,EAAeslC,IAAoB,eAC3EkF,IAAqBhB,IACrBvhC,GAAOY,WAAW,2DAA4DX,EAAAA,GAAAA,OAAAA,sBAAqC,CAC/GY,UAAW,oBAInB9E,KAAKshC,OAASA,EACdthC,KAAK8mC,KAAOxjC,EACZtD,KAAK+mC,OAAS/qC,EAEdgE,KAAKgnC,gBAAiB,EAEtB/mC,OAAO0mC,OAAO3mC,KAClB,CA2LC,OA3LA,oCAED,SAAa44B,GACL54B,KAAKshC,OAAO1kC,OAASg8B,EAAM0I,OAAO1kC,MAClCqH,GAAOyb,mBAAmB,gDAAiD,QAASkZ,EAE5F,GAAC,uBAED,SAAUA,GACN54B,KAAKinC,aAAarO,GAClB,IAAM33B,EAAIilC,GAAWlmC,KAAK+mC,OAAQ/mC,KAAKshC,OAAOuE,UACxC9+B,EAAIm/B,GAAWtN,EAAMmO,OAAQnO,EAAM0I,OAAOuE,UAChD,OAAOgB,EAAYK,UAAUjmC,EAAEyM,IAAI3G,GAAI/G,KAAKshC,OAAOuE,SAAU7lC,KAAKshC,OACtE,GAAC,uBAED,SAAU1I,GACN54B,KAAKinC,aAAarO,GAClB,IAAM33B,EAAIilC,GAAWlmC,KAAK+mC,OAAQ/mC,KAAKshC,OAAOuE,UACxC9+B,EAAIm/B,GAAWtN,EAAMmO,OAAQnO,EAAM0I,OAAOuE,UAChD,OAAOgB,EAAYK,UAAUjmC,EAAE0M,IAAI5G,GAAI/G,KAAKshC,OAAOuE,SAAU7lC,KAAKshC,OACtE,GAAC,uBAED,SAAU1I,GACN54B,KAAKinC,aAAarO,GAClB,IAAM33B,EAAIilC,GAAWlmC,KAAK+mC,OAAQ/mC,KAAKshC,OAAOuE,UACxC9+B,EAAIm/B,GAAWtN,EAAMmO,OAAQnO,EAAM0I,OAAOuE,UAChD,OAAOgB,EAAYK,UAAUjmC,EAAE6F,IAAIC,GAAGuR,IAAItY,KAAKshC,OAAOoF,aAAc1mC,KAAKshC,OAAOuE,SAAU7lC,KAAKshC,OACnG,GAAC,uBAED,SAAU1I,GACN54B,KAAKinC,aAAarO,GAClB,IAAM33B,EAAIilC,GAAWlmC,KAAK+mC,OAAQ/mC,KAAKshC,OAAOuE,UACxC9+B,EAAIm/B,GAAWtN,EAAMmO,OAAQnO,EAAM0I,OAAOuE,UAChD,OAAOgB,EAAYK,UAAUjmC,EAAE6F,IAAI9G,KAAKshC,OAAOoF,aAAapuB,IAAIvR,GAAI/G,KAAKshC,OAAOuE,SAAU7lC,KAAKshC,OACnG,GAAC,mBAED,WACI,IAAM6E,EAAQnmC,KAAK6H,WAAWiW,MAAM,KACf,IAAjBqoB,EAAM/pC,QAAgB+pC,EAAMhoC,KAAK,KAErC,IAAIJ,EAAS8oC,EAAY3hB,KAAKihB,EAAM,GAAInmC,KAAKshC,QAEvC6F,GAAehB,EAAM,GAAG1mB,MAAM,UAKpC,OAJIzf,KAAKonC,cAAgBD,IACrBppC,EAASA,EAAOspC,UAAUC,GAAIC,SAASxpC,EAAOujC,UAG3CvjC,CACX,GAAC,qBAED,WACI,IAAMooC,EAAQnmC,KAAK6H,WAAWiW,MAAM,KACf,IAAjBqoB,EAAM/pC,QAAgB+pC,EAAMhoC,KAAK,KAErC,IAAIJ,EAAS8oC,EAAY3hB,KAAKihB,EAAM,GAAInmC,KAAKshC,QAEvC6F,GAAehB,EAAM,GAAG1mB,MAAM,UAKpC,OAJKzf,KAAKonC,cAAgBD,IACtBppC,EAASA,EAAOypC,UAAUF,GAAIC,SAASxpC,EAAOujC,UAG3CvjC,CACX,GAEA,mBACA,SAAM8nC,GACc,MAAZA,IAAoBA,EAAW,GAGnC,IAAMM,EAAQnmC,KAAK6H,WAAWiW,MAAM,KAOpC,GANqB,IAAjBqoB,EAAM/pC,QAAgB+pC,EAAMhoC,KAAK,MAEjC0nC,EAAW,GAAKA,EAAW,IAAOA,EAAW,IAC7C5hC,GAAOyb,mBAAmB,wBAAyB,WAAYmmB,GAG/DM,EAAM,GAAG/pC,QAAUypC,EAAY,OAAO7lC,KAE1C,IAAMynC,EAASZ,EAAY3hB,KAAK,IAAM5b,GAAMsW,UAAU,EAAGimB,GAAW7lC,KAAKshC,QACnEoG,EAAOC,GAAKJ,SAASvnC,KAAKshC,QAEhC,OAAOthC,KAAK4nC,UAAUH,GAAQD,UAAUE,GAAMra,QAAQwa,UAAUJ,EACpE,GAAC,oBAED,WACI,MAAwB,QAAhBznC,KAAK+mC,QAAoC,MAAhB/mC,KAAK+mC,MAC1C,GAAC,wBAED,WACI,MAA2B,MAAnB/mC,KAAK+mC,OAAO,EACxB,GAAC,sBAED,WAAqB,OAAO/mC,KAAK+mC,MAAQ,GAAC,yBAE1C,SAAYl7B,GACR,GAAa,MAATA,EAAiB,OAAO7L,KAAK8mC,KAC7Bj7B,EAAQ,GAAK5H,GAAOyb,mBAAmB,qBAAsB,QAAS7T,GAC1E,IAAMvI,EAAMqc,EAAAA,GAAAA,KAAe3f,KAAK8mC,MAAM76B,SAASjM,KAAKshC,OAAOz1B,OAAOD,OAAOC,GAAO0uB,cAChF,OAAOtB,EAAAA,EAAAA,IAAW31B,EAAKuI,EAAQ,EACnC,GAAC,2BAED,WAA0B,OAAOi8B,WAAW9nC,KAAK6H,WAAa,GAAC,sBAE/D,SAASy5B,GACL,OAAOuF,EAAYkB,WAAW/nC,KAAK+mC,OAAQzF,EAC/C,IAAC,wBAGD,SAAiBtlC,EAAkB6pC,EAAyBvE,GAUxD,OARc,MAAVA,GAA8B,MAAZuE,IAAqBmC,EAAAA,EAAAA,IAAenC,KACtDvE,EAASuE,EACTA,EAAW,MAGC,MAAZA,IAAoBA,EAAW,GACrB,MAAVvE,IAAkBA,EAAS,SAExBuF,EAAYkB,WAAWjC,GAAY9pC,EAAO6pC,GAAWU,GAAYrhB,KAAKoc,GACjF,GAAC,wBAGD,SAAkBtlC,EAAeslC,GACf,MAAVA,IAAkBA,EAAS,SAE/B,IAAM2G,EAAc1B,GAAYrhB,KAAKoc,GAE/BrH,EAAUiM,GAAWlqC,EAAOisC,EAAYpC,WAEzCoC,EAAYxB,QAAUxM,EAAQrf,GAAGkf,KAClC4L,GAAW,oCAAqC,WAAY,QAAS1pC,GAGzE,IAAIsH,EAAc,KACd2kC,EAAYxB,OACZnjC,EAAM22B,EAAQruB,OAAOq8B,EAAYp8B,OAAO0uB,eAExCj3B,EAAM22B,EAAQM,cACdj3B,GAAM21B,EAAAA,EAAAA,IAAW31B,EAAK2kC,EAAYp8B,MAAQ,IAG9C,IAAMq8B,EAAUpC,GAAY7L,EAASgO,EAAYpC,UAEjD,OAAO,IAAIgB,EAAYrB,GAAmBliC,EAAK4kC,EAASD,EAC5D,GAAC,uBAED,SAAiBjsC,EAAkBslC,GACjB,MAAVA,IAAkBA,EAAS,SAE/B,IAAM2G,EAAc1B,GAAYrhB,KAAKoc,GAErC,IAAIh9B,EAAAA,EAAAA,IAAStI,GAAOI,OAAS6rC,EAAYp8B,MAAQ,EAC7C,MAAM,IAAI3O,MAAM,YAGpB,IAAI+8B,EAAUta,EAAAA,GAAAA,KAAe3jB,GACzBisC,EAAYxB,SAAUxM,EAAUA,EAAQhuB,SAASg8B,EAAYp8B,QAEjE,IAAMvI,EAAM22B,EAAQruB,QAAQq8B,EAAYxB,OAAS,EAAG,GAAKwB,EAAYp8B,OAAO0uB,cACtE2N,EAAUpC,GAAY7L,EAASgO,EAAYpC,UAEjD,OAAO,IAAIgB,EAAYrB,GAAmBliC,EAAK4kC,EAASD,EAC5D,GAAC,kBAED,SAAYjsC,EAAYslC,GACpB,GAAsB,kBAAXtlC,EACP,OAAO6qC,EAAYkB,WAAW/rC,EAAOslC,GAGzC,IAAIsD,EAAAA,EAAAA,IAAQ5oC,GACR,OAAO6qC,EAAYxoC,UAAUrC,EAAOslC,GAGxC,IACI,OAAOuF,EAAYK,UAAUlrC,EAAO,EAAGslC,E,CACzC,MAAOre,GAEL,GAAIA,EAAM6C,OAAS5hB,EAAAA,GAAAA,OAAAA,iBACf,MAAM+e,C,CAId,OAAOhf,GAAOyb,mBAAmB,4BAA6B,QAAS1jB,EAC3E,GAAC,2BAED,SAAqBA,GACjB,SAAUA,IAASA,EAAMgrC,eAC7B,KAAC,EAhNmB,GAmNlBM,GAAMT,GAAY3hB,KAAK,GACvByiB,GAAOd,GAAY3hB,KAAK,O,WClZxB,SAAUijB,GAAYhiB,GAExB,MADwB,kBAAbA,IAAyBA,GAAU3G,EAAAA,GAAAA,IAAY2G,KACnD9F,EAAAA,EAAAA,IAAUN,EAAAA,EAAAA,IAAO,EACpBP,EAAAA,GAAAA,IALqB,mCAMrBA,EAAAA,GAAAA,IAAYjhB,OAAO4nB,EAAQ/pB,SAC3B+pB,IAER,CCbO,IAAMgS,GAAU,a,mTCSjBl0B,GAAS,IAAIC,EAAAA,GAAOi0B,IAIpB30B,GAAU,IAAIrG,WAAW,IAC/BqG,GAAQujB,KAAK,GAEb,IAAM0e,GAAyB9lB,EAAAA,GAAAA,MAAgB,GACzCma,GAAkBna,EAAAA,GAAAA,KAAe,GACjCyoB,GAAiBzoB,EAAAA,GAAAA,KAAe,GAChC0oB,GAAwB1oB,EAAAA,GAAAA,KAAe,sEAW7C,IAAM2oB,IAAUrP,EAAAA,EAAAA,IAAWmP,GAAI7N,cAAe,IACxCgO,IAAWtP,EAAAA,EAAAA,IAAWa,GAAKS,cAAe,IAE1CiO,GAA2C,CAC7C5rC,KAAM,SACNu7B,QAAS,SACTtT,QAAS,UACT4jB,kBAAmB,UACnBC,KAAM,WAGJC,GAAkC,CACpC,OAAQ,UAAW,UAAW,oBAAqB,QAGvD,SAASC,GAAY7oC,GACjB,OAAO,SAAU/D,GAIb,MAHsB,kBAAXA,GACPiI,GAAOyb,mBAAmB,4BAAD,OAA8B+O,KAAK8P,UAAUx+B,IAAK,iBAAeA,GAAQ/D,GAE/FA,CACX,CACJ,CAEA,IAAM6sC,GAAoD,CACtDjsC,KAAMgsC,GAAY,QAClBzQ,QAASyQ,GAAY,WACrB/jB,QAAS,SAAS7oB,GACd,IACI,OAAO2jB,EAAAA,GAAAA,KAAe3jB,GAAO6L,UAChB,CAAf,MAAOob,GAAQ,CACjB,OAAOhf,GAAOyb,mBAAmB,qCAAsC,iBAAkB1jB,EAC7F,EACAysC,kBAAmB,SAASzsC,GACxB,IACI,OAAOioB,EAAAA,EAAAA,IAAWjoB,GAAOolB,aACZ,CAAf,MAAO6B,GAAQ,CACjB,OAAOhf,GAAOyb,mBAAmB,2CAA4C,2BAA4B1jB,EAC7G,EACA0sC,KAAM,SAAS1sC,GACX,IACI,IAAMsC,GAAQgG,EAAAA,EAAAA,IAAStI,GACvB,GAAqB,KAAjBsC,EAAMlC,OAAiB,MAAM,IAAIc,MAAM,cAC3C,OAAOkjB,EAAAA,EAAAA,IAAQ9hB,EACF,CAAf,MAAO2kB,GAAQ,CACjB,OAAOhf,GAAOyb,mBAAmB,8BAA+B,cAAe1jB,EACnF,GAGJ,SAAS8sC,GAAexpB,GAGhB,IAAMG,EAAQH,EAAKG,MAAM,kBACzB,GAAIA,EAAO,CACP,IAAMgnB,EAAuB,KAAbhnB,EAAM,GAEhB5T,EAAQ5P,SAASwjB,EAAM,IAAM,QAC/B5T,EAAQ,IAAM,GAAKA,EAAQ,KAAQ4T,EAAM,IAAMA,EAAM,KAAOlhB,OAAOsN,KACnE5H,GAAOyb,mBAAmB,wBAAyB,OAAQJ,GAG/D,IAAMypB,EAAcV,GAAWlxB,KAAKsvB,EAAU56B,EAAQ,EAAIA,GACpDm9B,EAAcvC,EAASsC,EAAYr7B,IAAI06B,IAAKthC,IAAI2+B,IAAc3L,GAEpE,OAAO,SAAS99B,GACZ,IAAM4C,EAAI+gB,EAAAA,GAAAA,KAAe3jB,GAMzB,OAJI4C,EAAEgc,GAAGouB,IAAgBpqC,EAAE4b,GAAGuuB,KAC1B9kC,GAAOyb,mBAAmB,2BAAD,OAA6BJ,GAAS,QAAStjB,IAGrEi9B,EAAAA,EAAAA,IAAWr6B,EAAEgN,OAAO,KAAK2uB,cAAe,GACnD,C,CAMJ,IAAM9a,EAAQH,EAAKG,MAAM,gBACzB,GAAIA,EAAO,CACP,IAAM5T,EAAQ5P,SAASwjB,EAAM,IAK7B,OAJc,IAAV5T,GAAeA,EAAQ,IAAM4T,EAAM,KAAOlhB,OAAOsN,KACjD5H,GAAOyb,mBAAmB,sBAAuB,OAAQJ,GAGtD,SAAStjB,GAKZ,OAJcsI,EAAAA,EAAAA,IAAStI,GACbI,SAAWyP,GACjB5H,GAAOyb,mBAAmB,sBAAD,OAAwBJ,GAAS,QAAStjB,GAjGvF,SAAqBA,GACjB,IAAMsC,GAAQgG,EAAAA,EAAAA,IAAStI,GACjBitC,EAAY3qC,EAAMlC,OAAS,GACjC,OAAI6sC,GACO3N,EAAAA,EAAAA,IAAU,CAAEh9B,EAAOkF,GAAQ3G,MAAMosC,MAErC7oB,EAAAA,EAAAA,IAAQ9hB,EACnB,CA4FuB4qC,CAAYltC,EACvB,C,CAIR,OAAQsjB,GACJ,IAAK,UAAW,OAAO,SAAStjB,GAC5B,OAAOi9B,EAAAA,EAAAA,KAAWhV,EAAAA,EAAAA,IAAWjoB,GAAQ,GACzC,EACA,IAAK,OAAQ,OAAO,SAASA,GACzB,OAAUA,EAAmBssC,GAAVC,EACvB,EACA,IAAK,QAAS,OAAO,SAASvsC,GAC1B,OAAOqkB,EAAAA,EAAAA,GAAUrkB,EACrB,EACA,IAAK,SAAU,OAAO,SAASA,GAC3B,OAAOmtC,EAAAA,GAAAA,IAAGntC,EACd,EAGJ,OAAO,IACX,CAEA,SAASotC,GAAWxsC,EAAcw+B,GAC9B,MAAO,GAAP,OAAWx+B,EAAK,YAAKw+B,EAAOrO,KAAI,gBAAGnwB,EAAI,EAAJA,KAAU,SAAJ0iB,KAAmB,IAAM1iB,CAAI,IAAG6B,KAAK,KAAK,IACvF,CAEO,IAAM4qC,GAAgB,WAOzB,WAAYppB,IAA4C,gBACpD0C,EAAAA,EAAAA,IAAe3iB,KAAM,QAASC,OAAO0mC,QAAO3H,EAAAA,EAAAA,IAAS/e,MAErD0C,EAAAA,EAAAA,IAAe3iB,KAAM,gBAAiB,CAAC,IACvC2iB,EAAAA,EAAAA,IAAe3iB,KAAM,SAAU,CAAC,GAGhC,IAAMspC,EAAiD,CAAC,EAGlDC,EAAyC,CAAC,EAG1CC,EAAoD,CAAC,EAE3DvpC,OAAO46B,KAAK5a,GAAOH,SAAQ,SAACR,GACxBgqB,EAAMhqB,GAAQ,CAAC,EACfiqB,EAAQjqB,GAAQ,GAChBkqB,EAASlqB,GAAQ,CAAC,CACtB,IAAG,eAEQ1iB,GAEP,IAAMwlC,EAAuC,CAAC,EAE9CniB,EAAMrjB,GAAMkjB,SAAQ,SAAC2pB,GAGbrH,EAAYqH,EAAM7sC,OAClBqH,GAAOyb,mBAAmB,2BAAD,OAA6B+O,KAAK8P,UAAUkL,EAAM7sC,MAAM,eAAQ6xB,KAAK8P,UAAU3hC,IAAU,QAASqjB,GAE/HmiB,EAAYqH,EAAM7sC,OAAQ,EAG1B,IAAMijB,EAAW4pB,EAAMnqB,KAAKG,MAAM,uBAAuB,GACrDI,IAAajjB,GACbqH,GAAOyb,mBAAmB,8BAAD,OAAgC+O,KAAK8P,UAAU1e,IAAc,QAASI,GAInF6oB,GAAejpB,KAG1B0pB,EAAQ1pB,IACT5b,GAAOyb,mBAAmB,gBAAD,OAAkB+O,KAAK8P,UAAU1e,IAAc,QAASI,GAIrFspB,EAAQ1pB,GAAU1hB,KAAKvB,GACvB0sC,EAAM1sC,GAAMijB,IAAY,EAC5B,GAAG,EA7BP,IAAK,IAAMjjB,KAAQqjB,EAAO,EAAfrjB,GAiCX,IAAM8sC,EAAezpC,OAAO46B,KAAK0O,GAASjL,QAAO,SAACrpB,GAAC,OAA4B,IAAtBs0B,EAAQt0B,GAAG7Y,MAAY,IAmChF,IAAK,IAAMQ,KAjCiB,IAAxB8sC,EAAattC,OACb6H,GAAOyb,mBAAmB,uBAAwB,QAASO,GACpDypB,EAAattC,OAAS,GAC7B6H,GAAOyb,mBAAmB,4CAAD,OAA8CgqB,EAAa3c,KAAI,SAAClsB,GAAC,OAAM4tB,KAAK8P,UAAU19B,EAAE,IAAGpC,KAAK,OAAU,QAASwhB,IAGhJ0C,EAAAA,EAAAA,IAAe3iB,KAAM,cAAe0pC,EAAa,IAGjD,SAASC,EAAcrqB,EAAcsqB,GAC7BA,EAAMtqB,IACNrb,GAAOyb,mBAAmB,8BAAD,OAAgC+O,KAAK8P,UAAUjf,IAAU,QAASW,GAG/F2pB,EAAMtqB,IAAQ,EAEdrf,OAAO46B,KAAKyO,EAAMhqB,IAAOQ,SAAQ,SAAC+pB,GACzBN,EAAQM,KAGbF,EAAcE,EAAOD,GAGrB3pC,OAAO46B,KAAK+O,GAAO9pB,SAAQ,SAACgqB,GACxBN,EAASM,GAASD,IAAS,CAC/B,IACJ,WAEOD,EAAMtqB,EACjB,CACAqqB,CAAc3pC,KAAK+pC,YAAa,CAAC,GAGdP,EAAU,CACzB,IAAMQ,EAAK/pC,OAAO46B,KAAK2O,EAAS5sC,IAChCotC,EAAGhP,OACHh7B,KAAKiqC,OAAOrtC,GAAQwsC,GAAWxsC,EAAMqjB,EAAMrjB,IAASotC,EAAGjd,KAAI,SAAClsB,GAAC,OAAKuoC,GAAWvoC,EAAGof,EAAMpf,GAAG,IAAEpC,KAAK,G,CAExG,CAgQC,OAhQA,kCAED,SAAW6gB,GACP,IAAI4qB,EAAUlqC,KAAKmqC,cAAc7qB,GAIjC,OAHK4qB,IACDA,EAAUlqC,KAAKmqC,cAAc7qB,GAAQtf,KAAKoqC,YAAY9qB,IAEnD4qB,CACX,GAAC,yBAED,SAAY5qB,GAAY,WAIV4qB,EAAUpB,GAAexpB,GAC/B,GAAI4qB,EAAW,OAAOA,EAI1B,IAAMzqB,EAAQH,EAAKG,MAAM,yBACzB,GAAIA,EAAO,CACP,IAAMqqB,EAAUrqB,EAAM,GAChB4qB,EAAarqC,KAAKsqC,WAAWR,GAC7B1tC,EAASH,SAASwjB,EAAM,IAC9B,OAAO,SAACzjB,GACAI,GAAU,GAAKJ,EAAMI,SAAWA,GAChC6H,GAAOyb,mBAAmB,0DAA2D,QAAS1jB,GAGlG,IAAI+B,EAAS/B,EAAM+wB,IAAIsd,GAKvB,OAJI,EAAKJ,OAAOH,KACZ/rC,EAASA,EAAOgvB,IAAI1M,EAAAA,KAGjBA,EAAAA,EAAAA,IAAUib,EAAAA,EAAAA,IAAUv9B,GAC/B,C,CAIJ,IAAMq9B,EAASp7B,KAAKigB,MAAMX,GAC1B,GAAI8b,EAAQ,CACR,IAAMmP,GAAcpB,EAAAA,GAAAA,IAAGnpC,KAAKiqC,OAAO3qB,IACnC,OAAO,SAACtjB,GACJ,IAAMkkB,EAASkb,EAAOrO,KAAI,YAAmB,IAAhBnwB,EAAI,EAAJA,KAAM0iB,EAAI,EAAJA,KACzBvhB,EAAS,EAAKusC,WAAWhrB,EAAhB,CAAsBtjB,EAAMY,IAC3C,OAAI,EAAKqtC,OAAO3qB,IAAgBe,EAAAA,EAAAA,GAAUtiB,GACnCA,CACX,IAEA,OADAmiB,EAAOsqB,QAAQD,IACRjP,EAAAA,EAAAA,IAAUpb,EACrB,C,CAGJ,OAAOjc,GAAOyb,mBAAmB,iBAAD,OAAmBJ,GAAS,OAAQA,EACxE,GAAC,wBAED,SAAW1iB,GACP,IAAMmB,EAASiC,KAAKiqC,OAAOrtC,GAI3B,OAHKmB,GACDkG,GAAOyb,mBAAmB,iBAAD,OAAmB+O,KAAK8P,UAAU3hC,IAAU,OAAQA,GAE1EmB,CACX,GAAC,wBAED,SAAWuhB,EAActjB,GACrB,OAAOgE,KAAKsqC,WAAWhrB,EAAhBtf,CAAsBhE,EACjC,GAAC,wBAED,SAAWY,EAAcZ,GACrB,OAAOqkB,EAAAA,EAAAA,GAAUrgB,KAAKyqC,WAAW7tC,EAAMZ,GAC3C,GAAC,oBAED,SAAOA,GACH,OAAOgE,KAAKyqC,WAAWzqC,KAAK+pC,YAAa/tC,EAC7C,GAAC,kBAED,SAAKA,GACD,OAAOgE,KAAK0qC,WAAW1qC,KAAK+pC,YAAa/tC,EAC7C,GAAC,oBAED,SAAOsjB,EAActjB,EAAY2uC,GAA0C,WAInE,GADgB7B,GAAexpB,GAChB,OAAOqrB,EAASrrB,EAAMtjB,GAIzC,IAAMyjB,EAAQH,EAAKG,MAAM,yBACzB,GAAIA,EAAO,CACP,IAAMqqB,EAAUrqB,EAAM,GAChBrjB,EAASH,SAASwjB,EAAM,IAI9B,OAHIrjB,GAAU,GAAKJ,EAAMI,SAAWA,GAChC6H,GAAOyb,mBAAmB,0DAA2D,QAAS1jB,GAE3FA,EAAM+wB,KAAI,SAACnuB,GAAM,OAAK,EAAKgsC,OAAOd,EAASlrC,EAAG+rC,EAAS,G,CAIlE,IAAMvP,EAASp7B,KAAKigB,MAAMX,GAC1B,OAAI8b,EACOA,EAAON,QAAO,SAACC,EAAO,GAAkB,IAAhBn+B,EAAI,EAAJA,KAAM0iB,EAAI,EAAJA,KAEjC,OADAyb,EAAMn+B,GAAQ,EAAKguC,OAAOtrB,EAAMtjB,EAAMY,GAAO+tC,GACtC5P,CACX,GAAwB,CAAC,GAGtB92B,GAAOyb,mBAAmB,iBAAD,OAAmBJ,GAAS,OAAQA,EACxE,GAAC,mBAED,SAAMtjB,EAA4B2uC,GAC9B,OAAO3qC,KAAK4qC,OAAO5qC,KAAK+pC,YAAa/tC,EAAO2uC,EAChD,IAAC,mBAED,SAAY1qB,GACR,OAAO,IAAIopB,EAAiBppB,EAChC,GAAC,4BAED,SAAsBA,GAClB,OAAOopB,EAAiBnkB,KAAKjF,GAAO8pB,WACxC,GAAC,wBAED,SAAkBntC,EAAcqjB,EAA8CjkB,GAC1E,OAAOqtC,EAAiBnkB,KAAKjF,GAAOyqB,WAAW9tC,EAAMZ,EACzD,GAAC,wBAED,SAAkBqqB,GACd,IAAMwkB,EAAsC,GAC5C,IAAK,IAAMjuC,KAAQypB,EAAQ,CACvB,IAAM/G,EAAOkpB,GAAiB5rC,GACzB0iB,GACDrb,GAAOyb,mBAAmB,kCAAD,OAAoC+O,KAAK8P,UAAU3hC,IAAU,SAAUypB,GAEpGwkB,EAAa1sC,KAAK,CAAEvB,KAAAA,EAAM0iB,KAAAA,G,CAO9B,OAJAurB,EAAa7P,MAAK,SAAC/5B,EAAG8F,GAClB,OAAO4hC,GAAiB3jB,QAAQ/jB,EAAErE,MAAQ+rC,GAAiB3jB,QAAQje,EAAEnK,KACzE,IAEOysC,EAAiBqB,WAAW,eAAgB,CAAEI,aAAcD,GAAgBxkB,EACvF,GAAC,oBAED,SAAcA,EAAyBpG,EAA8CjkB,GACjF,OAAOs/B,EAAAA,EAAAA,IAAU,CACb,SACA+N,EAAiB0B,WAAW1kB,GAC5BgjB,EAAiBnkB,KAAKjF,GAAO7b,KAAKpI,IAE1C,GAAC,kBAED,SAAYqqB,EAAyBpG,EAA8CjkB,GAC/E,OAAOqkB,EAAAA,EAAAA,GAAUgpB,EAAiBpnB,OAAOoE,EAAQpG,EAAOjkB,GAC5D,GAEA,0BACA,SAA0BqqB,EAAyBpG,EAA8CjkB,EAA4B+oB,G,0IAEzHsB,GAASpB,EAAAA,EAAAA,IAAYoB,GAGf2kB,EAAmC,CAAC,EAGtC3kB,EAAOoiB,qBAAsB3E,EAAAA,EAAAA,IAAYzd,EAAOoiB,kBAAmB,MACnEuC,EAAS3kB,EAAOoiB,mBAAqB,OAInCyB,EAAUb,EAAiBnkB,KAAKjF,IAG9BgrB,MAAMjvC,GAAO,SAACsjB,EAActjB,GAIhC,MAHa,YAATsjB,IAAuBwkB,EAAAA,EAAAA,IAAY9nC,EAAO,MAC1CgvC,EAAShvC,GAAS,MAEfA,CACX,IAEA,oBACmBgvC,GAAQ,8CACN,OADVpuC,EAAI,qBACYmoB,EAAYnoB,GAAK,QAAxCouC,EAASpuC,GAAQ,EAAH,4BAYf,OARCypB,EAAOoiB,mBAAqBuC,EAAS3kB,EAAOoiB,qBAC5CpiB,EAAOoiB,kBAAoBuC,EAAS3kB,EAAOoiB,oBAI/CzsC,EAAQkuC,EAAQe,MAAMjvC,GAAO,SAACsjB,EAActjB,GACxC,MAAa,YAATsjB,GAAsB0rB,EAAShvC,GAAiBgvC,EAAShvC,GACtDA,CACX,IAAG,kBAEI,CAAEqqB,OAAAA,EAAQrqB,MAAAA,IAAO,2C,GAC3B,wBAED,SAAkBqqB,EAAyBpG,EAA8CjkB,GAErFqtC,EAAiB0B,WAAW1kB,GAG5B,IAAM6kB,EAAoC,CAAC,EACrCC,EAAoD,GAE1DxC,GAAiB7oB,SAAQ,SAACljB,GACtB,IAAMZ,EAAcqqB,EAAQzpB,GACf,MAATZ,IACJkvC,EAAatuC,GAAQisC,GAAajsC,GAAMZ,GACxCmvC,EAAYhtC,KAAK,CAAEvB,KAAAA,EAAM0iB,KAAMkpB,GAAiB5rC,KACpD,IAEA,IAAMstC,EAAUb,EAAiBnkB,KAAKjF,GAEhCmrB,GAAkBnmB,EAAAA,EAAAA,IAAYhF,GAUpC,OATImrB,EAAgBN,aAChB7mC,GAAOyb,mBAAmB,2CAA4C,qBAAsBO,GAE5FmrB,EAAgBN,aAAeK,EAInCjB,EAAQjoB,OAAOjmB,GAER,CACHikB,MAAOmrB,EACP/kB,OAAQ6kB,EACRnB,YAAaG,EAAQH,YACrB5jB,QAAS+jB,EAAQe,MAAMjvC,GAAO,SAACsjB,EAActjB,GAGzC,GAAIsjB,EAAKG,MAAM,eACX,OAAOW,EAAAA,EAAAA,KAAQ9b,EAAAA,EAAAA,IAAStI,IAI5B,GAAIsjB,EAAKG,MAAM,UACX,OAAOE,EAAAA,GAAAA,KAAe3jB,GAAO6L,WAGjC,OAAQyX,GACJ,IAAK,UACD,OAAOtjB,EAAMolB,cACjB,IAAK,OACD,QAASplB,EACb,IAAK,SAID,MAHsB,kBAAXA,GACPiI,GAAOyb,mBAAmB,iBAAkB,QAAS1jB,GAElDA,EAGf,OAAOiI,GAAOyb,mBAAmB,mBAAoB,OAAQJ,EACjE,IAER,KAAC,EArWwB,GCxGhB+rB,GAAK,WAOd,WAAYC,IAAgB,gBACxB3oB,EAAAA,EAAAA,IAAe3iB,KAAM,WAAYsrC,IACjC3oB,EAAAA,EAAAA,IAAe3iB,KAAM,OAAQsrC,EAASlvC,SAEtCumB,EAAAA,EAAAA,IAAe3iB,KAAM,eAAgB,CAAC,IACtC2iB,EAAAA,EAAAA,IAAe3iB,KAAM,UAAWsrC,EAAS5qB,OAAO,IAGhD,IAAK,IAAIrkB,EAAI,EAAGA,EAAIivC,EAASlvC,OAAQC,IACjC2D,KAAKurC,aAAaD,EAAS5qB,OAAOrkB,IAAMA,CAEhD,CAwEC,OAxEA,8BAED,SAAOL,GACH,IAAIwvC,GAASlnC,EAAAA,EAAAA,IAAStI,GAEtB,GAAsB,IAAlBwvC,EAAOpvC,OAAgB,MAAO,GAGlC,IADA,IAAIqvC,EAAS,CAAE,GACNpvC,EAAI,EAAGA,EAAImvC,EAAOpvC,SAAUC,EAAG,CAEpC,IADA,IAAIqN,EAAQ8hC,EAAOnvC,GACVsF,EAAI,EAAGA,EAAI8pC,EAAOrvC,SAAUuF,EACjC+H,GAAS+hC,EAAO9pC,IAAM,EACtB8pC,EAAO9pC,GAAK+H,EAAQ1J,KAAK0F,KACzBgE,EAASA,EAAQ1J,KAAK0F,KAAQ,EAGlC,KAAOgE,EAAQ,GACX+hC,EAAOttC,KAAKuL,EAAQ1J,KAAK0F,MACzBgE,EAASA,EAAQ1J,KAAK0F,KAAQ,C,CAOtC,IAHA,IAAIa,EAAS,GAGJiE,EAAI,EAAiB,IAAdghC,EAAOhhC,IAAYA,EAAIghC,EAAOpvC,OAAS,IAAKoO,EACxDjE,GAAUvG,KAAK0rC,QAInB,IAAK,IAAIj1B,EAAIg1B,EAAOrvC,OAAS,EAAGqa,GAAK,IAAKA,EACtClQ,GAAUvG,KAAKsrC,SAASG,EAAOh1B,IAGnC,OAAOlQ,CACX,GAAC,oBAED,SAAOvK,GACH,GAAsB,kBAAXA,EACP,MAAM,IAAI2kB,UAAU,mBAGxB,IAAIriB,EAAuB,GAC3B,GAAqB,IAAjBtC,EAAMI,OAAgB,OAAO,IAAIe,WAAWmB,GAEhDA,EAAMH,KAAK,GACX,IAAK,IAAI9B,EAAI,EAAGA,EAAIL,EAAMI,OAAQC,IAAK,CACnC,IAAIsvC,EAAO3rC,KAAKurC,aAAavvC,EAAMK,IAEnC,QAAa2hB,IAAT2tB,EACA,MAAM,IAAIzuC,MAAM,WAAa8C,KAAK0F,KAAO,cAI7C,IADA,IAAIgE,EAAQiiC,EACHhqC,EAAI,EAAGA,EAAIrD,EAAMlC,SAAUuF,EAChC+H,GAASpL,EAAMqD,GAAK3B,KAAK0F,KACzBpH,EAAMqD,GAAa,IAAR+H,EACXA,IAAU,EAGd,KAAOA,EAAQ,GACXpL,EAAMH,KAAa,IAARuL,GACXA,IAAU,C,CAKlB,IAAK,IAAIc,EAAI,EAAGxO,EAAMwO,KAAOxK,KAAK0rC,SAAWlhC,EAAIxO,EAAMI,OAAS,IAAKoO,EACjElM,EAAMH,KAAK,GAGf,OAAOmG,EAAAA,EAAAA,IAAS,IAAInH,WAAWmB,EAAMstC,WACzC,KAAC,EA1Fa,GA8FZC,IADS,IAAIR,GAAM,oCACV,IAAIA,GAAM,+D,YCpInB,SAAUS,GAAOC,EAAqBrD,EAAiBsD,EAAoBC,EAAgBC,GAG7F,IAAIC,EAFJJ,GAAWznC,EAAAA,EAAAA,IAASynC,GACpBrD,GAAOpkC,EAAAA,EAAAA,IAASokC,GAEhB,IAMI5nC,EACAsrC,EAPA54B,EAAI,EACF64B,EAAK,IAAIlvC,WAAW8uC,GACpBK,EAAS,IAAInvC,WAAWurC,EAAKtsC,OAAS,GAC5CkwC,EAAO3uC,IAAI+qC,GAMX,IAAK,IAAIrsC,EAAI,EAAGA,GAAKmX,EAAGnX,IAAK,CAEzBiwC,EAAO5D,EAAKtsC,QAAWC,GAAK,GAAM,IAClCiwC,EAAO5D,EAAKtsC,OAAS,GAAMC,GAAK,GAAM,IACtCiwC,EAAO5D,EAAKtsC,OAAS,GAAMC,GAAK,EAAK,IACrCiwC,EAAO5D,EAAKtsC,OAAS,GAAS,IAAJC,EAG1B,IAAIkwC,GAAIjoC,EAAAA,EAAAA,KAASI,EAAAA,GAAAA,IAAgCwnC,EAAeH,EAAUO,IAErEH,IACDA,EAAOI,EAAEnwC,OACTgwC,EAAI,IAAIjvC,WAAWgvC,GAEnBrrC,EAAImrC,IADJz4B,EAAIvM,KAAKiB,KAAK+jC,EAASE,IACL,GAAKA,GAI3BC,EAAEzuC,IAAI4uC,GAGN,IAAK,IAAI5qC,EAAI,EAAGA,EAAIqqC,EAAYrqC,IAAK,CAEjC4qC,GAAIjoC,EAAAA,EAAAA,KAASI,EAAAA,GAAAA,IAAgCwnC,EAAeH,EAAUQ,IACtE,IAAK,IAAI/hC,EAAI,EAAGA,EAAI2hC,EAAM3hC,IAAK4hC,EAAE5hC,IAAM+hC,EAAE/hC,E,CAI7C,IAAMgiC,GAAWnwC,EAAI,GAAK8vC,EACpBnlC,EAAO3K,IAAMmX,EAAI1S,EAAIqrC,EAE3BE,EAAG1uC,KAAI2G,EAAAA,EAAAA,IAAS8nC,GAAGvvC,MAAM,EAAGmK,GAAMwlC,E,CAGtC,OAAOpsB,EAAAA,EAAAA,IAAQisB,EACnB,C,gBC3CapoC,GAAS,IAAIC,EAAAA,GCVH,mBDYDuoC,GAAQ,WAG1B,WAAYC,IAAc,eACtBzoC,GAAOye,cAAc,gBAAD,0BAAa+pB,IACjC9pB,EAAAA,EAAAA,IAAe3iB,KAAM,SAAU0sC,EACnC,CAwCC,OAnCD,6BACA,SAAMC,GACF,OAAOA,EAASvrB,cAActD,MAAM,MACxC,GAEA,kBACA,SAAKhY,GACD,OAAOA,EAAMrH,KAAK,IACtB,IAAC,oBAED,SAAamuC,GAET,IADA,IAAM9mC,EAAQ,GACLzJ,EAAI,EAAGA,EAAI,KAAMA,IAAK,CAC3B,IAAMqM,EAAOkkC,EAASC,QAAQxwC,GAE9B,GAAIA,IAAMuwC,EAASE,aAAapkC,GAAS,MAAO,KAChD5C,EAAM3H,KAAKuK,E,CAEf,OAAOygC,EAAAA,GAAAA,IAAGrjC,EAAMrH,KAAK,MAAQ,KACjC,GAAC,sBAED,SAAgBsuC,EAAgBnwC,GACvBA,IAAQA,EAAOmwC,EAAKL,OAa7B,KAAC,EA9CyB,GEL1BE,GAA0B,KAG9B,SAASI,GAAUD,GACf,GAAgB,MAAZH,KACJA,GAPU,+zVAOO9kC,QAAQ,WAAY,OAAOsZ,cAAcxB,UAAU,GAAG9B,MAAM,KAIhD,uEAAzB2uB,GAAS7O,MAAMmP,IAEf,MADAH,GAAW,KACL,IAAI1vC,MAAM,yCAExB,CAAC,IAkBK+vC,GAAS,IAhBF,0CACT,+CACU,KACV,CAUC,OAVA,+BAED,SAAQ1sC,GAEJ,OADAysC,GAAUhtC,MACH4sC,GAASrsC,EACpB,GAAC,0BAED,SAAamI,GAET,OADAskC,GAAUhtC,MACH4sC,GAAS5nB,QAAQtc,EAC5B,KAAC,EAbQ,CAAQ+jC,KAiBrBA,GAASS,SAASD,IC5BX,IAAME,GAA8C,CACzDC,GAAIA,ICQAnpC,GAAS,IAAIC,EAAAA,GCpBI,gBDsBjBqP,GAAIoM,EAAAA,GAAAA,KAAe,sEAInB0tB,IAAe7tB,EAAAA,GAAAA,IAAY,gBAE3B8tB,GAAc,WAGpB,SAASC,GAAa52B,GACnB,OAAS,GAAKA,GAAQ,GAAO,EAAIA,CACpC,CAOA,SAAS62B,GAAQxxC,GACb,OAAOi9B,EAAAA,EAAAA,KAAW7Y,EAAAA,EAAAA,IAAQpkB,GAAQ,GACtC,CAEA,SAASyxC,GAAY9pC,GACjB,OAAOkoC,GAAO5pB,QAAOlC,EAAAA,EAAAA,IAAO,CAAEpc,GAAMw2B,EAAAA,EAAAA,KAAa31B,EAAAA,GAAAA,KAAOA,EAAAA,GAAAA,IAAOb,IAAQ,EAAG,KAC9E,CAEA,SAAS+pC,GAAYd,GACjB,GAAgB,MAAZA,EACA,OAAOO,GAAAA,GAGX,GAAyB,kBAAdP,EAAwB,CAC/B,IAAM9mC,EAAQqnC,GAAUP,GAIxB,OAHa,MAAT9mC,GACA7B,GAAOyb,mBAAmB,iBAAkB,WAAYktB,GAErD9mC,C,CAGX,OAAO8mC,CACX,CAEA,IAAMpH,GAAyB,CAAC,EAEnBmI,GAAc,mBAQdC,GAAM,WAwBf,WAAYpH,EAAuB9N,EAAoBI,EAAmB+U,EAA2BC,EAAmBvtC,EAAewtC,EAAeC,GAElJ,IAFmL,eAE/KxH,IAAqBhB,GACrB,MAAM,IAAItoC,MAAM,gDAGpB,GAAIw7B,EAAY,CACZ,IAAMgB,EAAa,IAAIjB,GAAWC,IAClC/V,EAAAA,EAAAA,IAAe3iB,KAAM,aAAc05B,EAAWhB,aAC9C/V,EAAAA,EAAAA,IAAe3iB,KAAM,YAAa05B,EAAWuU,oB,MAE7CtrB,EAAAA,EAAAA,IAAe3iB,KAAM,aAAc,OACnC2iB,EAAAA,EAAAA,IAAe3iB,KAAM,aAAaogB,EAAAA,EAAAA,IAAQ0Y,KAG9CnW,EAAAA,EAAAA,IAAe3iB,KAAM,oBAAqB6tC,IAC1ClrB,EAAAA,EAAAA,IAAe3iB,KAAM,eAAem6B,EAAAA,EAAAA,KAAah2B,EAAAA,GAAAA,KAAUK,EAAAA,GAAAA,IAAOxE,KAAK84B,YAAa,EAAG,KAEvFnW,EAAAA,EAAAA,IAAe3iB,KAAM,UAAWk6B,GAAel6B,KAAK84B,aAEpDnW,EAAAA,EAAAA,IAAe3iB,KAAM,YAAa8tC,IAElCnrB,EAAAA,EAAAA,IAAe3iB,KAAM,QAASO,IAC9BoiB,EAAAA,EAAAA,IAAe3iB,KAAM,QAAS+tC,GAER,MAAlBC,IAEArrB,EAAAA,EAAAA,IAAe3iB,KAAM,WAAY,OACjC2iB,EAAAA,EAAAA,IAAe3iB,KAAM,OAAQ,OAEK,kBAApBguC,IAEdrrB,EAAAA,EAAAA,IAAe3iB,KAAM,WAAY,OACjC2iB,EAAAA,EAAAA,IAAe3iB,KAAM,OAAQguC,MAI7BrrB,EAAAA,EAAAA,IAAe3iB,KAAM,WAAYguC,IACjCrrB,EAAAA,EAAAA,IAAe3iB,KAAM,OAAQguC,EAAeE,MAEpD,CAsKC,OAtKA,iCAED,WAOI,GAAIluC,KAAK+tC,OAAS,IAAO,MAAM,IAAI7wC,MAAM,oBAEzC,OAAOuwC,IAAY1tB,EAAAA,EAAAA,IAAO,CACD,MAAnB/f,KAAK04B,WAAsB,aAAc,cAC3CtY,EAAAA,EAAAA,IAAQpgB,KAAK+tC,OACb/tC,KAAK6tC,mBACL5U,EAAAA,EAAAA,KAAW7Y,EAAAA,EAAAA,IAAQpgB,KAAKO,OAAQ,GAChCP,KAAK8tC,UACgB,MAAnB9tC,KAAK04B,YAAsB3Y,EAAAA,EAAAA,IAAO,CAAE,OAAQ/f,KAAK04B,aAAe14B,KAAK84B,YAE/E,GAAC,oBAED,WACI,OAAO,IAAI8U,EAAOpI,GAAmB,KAAMxlC,KAAK84B,UAAW94B,KAAK6tC,kBAAmB7tC,KAAK8tC,UAAW9tC,KAAKO,MAAOP,KAAK+tC,MAAO/tC,KAAKkuC,KACpI,GAAC,qBAEO,SAAQ3tC,GACZ,GAAIA,EAAQ,WAAc,MAAM,IAAIrD,MAAM,mBAAqBqB,OAAOgC,IAGtE,IAAI2tC,EAAOluC,KAAKkuC,KACZA,IAAQA,GAAQ,KAAe,WAAR3tC,IAE3B,IAAMoD,EAAO,IAAIxG,WAAW,IAE5B,GAAIoD,EAAQ+sC,GAAa,CACrB,IAAKttC,KAAK04B,WACN,MAAM,IAAIx7B,MAAM,wCAIpByG,EAAKhG,KAAI2G,EAAAA,EAAAA,IAAStE,KAAK04B,YAAa,GAGhCwV,IAAQA,GAAQ,I,MAIpBvqC,EAAKhG,KAAI2G,EAAAA,EAAAA,IAAStE,KAAK84B,YAI3B,IAAK,IAAIz8B,EAAI,GAAIA,GAAK,EAAGA,GAAK,EAAKsH,EAAK,IAAMtH,GAAK,IAAQkE,GAAU,GAAKlE,EAAM,IAEhF,IAAMitB,GAAIhlB,EAAAA,EAAAA,KAASI,EAAAA,GAAAA,IAAYE,GAAAA,EAAAA,OAA2B5E,KAAK8tC,UAAWnqC,IACpEwqC,EAAK7kB,EAAEzsB,MAAM,EAAG,IAChBuxC,EAAK9kB,EAAEzsB,MAAM,IAGfwxC,EAAa,KAGbC,EAAa,KAEbtuC,KAAK04B,WACL2V,EAAKb,GAAQ7tB,EAAAA,GAAAA,KAAewuB,GAAIzgC,IAAI1N,KAAK04B,YAAYjwB,IAAI8K,KAGzD+6B,EADW,IAAI7V,IAAWrY,EAAAA,EAAAA,IAAQ+tB,IAC1BI,UAAUvuC,KAAK84B,WAG3B,IAAIkV,EAAoCE,EAElCM,EAAexuC,KAAK2sC,SAS1B,OARI6B,IACAR,EAAiB/tC,OAAO0mC,OAAO,CAC3B8H,OAAQD,EAAYC,OACpBP,KAAMA,EACNxB,OAAS8B,EAAY9B,QAAU,QAIhC,IAAIkB,EAAOpI,GAAmB6I,EAAIC,EAAItuC,KAAK0uC,YAAalB,GAAQY,GAAK7tC,EAAOP,KAAK+tC,MAAQ,EAAGC,EACvG,GAAC,wBAED,SAAWE,GACP,IAAMnR,EAAamR,EAAKpwB,MAAM,KAE9B,GAA0B,IAAtBif,EAAW3gC,QAAmC,MAAlB2gC,EAAW,IAA6B,IAAf/8B,KAAK+tC,MAC1D,MAAM,IAAI7wC,MAAM,kBAAoBgxC,GAGlB,MAAlBnR,EAAW,IAAcA,EAAW3xB,QAGxC,IADA,IAAIrN,EAAiBiC,KACZ3D,EAAI,EAAGA,EAAI0gC,EAAW3gC,OAAQC,IAAK,CACxC,IAAMsyC,EAAY5R,EAAW1gC,GAC7B,GAAIsyC,EAAUlvB,MAAM,aAAc,CAC9B,IAAMlf,EAAQtE,SAAS0yC,EAAU/uB,UAAU,EAAG+uB,EAAUvyC,OAAS,IACjE,GAAImE,GAAS+sC,GAAe,MAAM,IAAIpwC,MAAM,wBAA0ByxC,GACtE5wC,EAASA,EAAO6wC,QAAQtB,GAAc/sC,E,KACnC,KAAIouC,EAAUlvB,MAAM,YAKvB,MAAM,IAAIviB,MAAM,4BAA8ByxC,GAJ9C,IAAMpuC,EAAQtE,SAAS0yC,GACvB,GAAIpuC,GAAS+sC,GAAe,MAAM,IAAIpwC,MAAM,wBAA0ByxC,GACtE5wC,EAASA,EAAO6wC,QAAQruC,E,EAMhC,OAAOxC,CACX,IAAC,wBAGD,SAAiB+1B,EAAiB6Y,GAC9B,IAAMkC,GAAwBvqC,EAAAA,EAAAA,IAASwvB,GACvC,GAAI+a,EAAUzyC,OAAS,IAAMyyC,EAAUzyC,OAAS,GAAM,MAAM,IAAIc,MAAM,gBAEtE,IAAMosB,GAAgBhlB,EAAAA,EAAAA,KAASI,EAAAA,GAAAA,IAAYE,GAAAA,EAAAA,OAA2ByoC,GAAcwB,IAEpF,OAAO,IAAIjB,EAAOpI,GAAmBgI,GAAQlkB,EAAEzsB,MAAM,EAAG,KAAM,KAAM,aAAc2wC,GAAQlkB,EAAEzsB,MAAM,KAAM,EAAG,EAAG8vC,EAClH,GAAC,0BAED,SAAoBA,EAAkBZ,EAAmBa,GAQrD,OAFAD,EAAWmC,GAAkBC,GAAkBpC,EAH/CC,EAAWc,GAAYd,IAG6CA,GAE7DgB,EAAOoB,UAAUC,GAAetC,EAAUZ,GAAW,CACxD0C,OAAQ9B,EACRuB,KAAM,IACNxB,OAAQE,EAASF,QAEzB,GAAC,sBAED,SAAgB5Y,GACZ,OAAO8Z,EAAOoB,UAAUlb,EAAM,KAClC,GAAC,6BAED,SAAuBob,GACnB,IAAM5wC,EAAQutC,GAAO7pB,OAAOktB,GAEP,KAAjB5wC,EAAMlC,QAAiBqxC,GAAYnvC,EAAMzB,MAAM,EAAG,OAASqyC,GAC3DjrC,GAAOyb,mBAAmB,uBAAwB,cAAe,cAGrE,IAAMquB,EAAQzvC,EAAM,GACduvC,GAAoBztB,EAAAA,EAAAA,IAAQ9hB,EAAMzB,MAAM,EAAG,IAC3C0D,EAAQtE,UAASmkB,EAAAA,EAAAA,IAAQ9hB,EAAMzB,MAAM,EAAG,KAAK+iB,UAAU,GAAI,IAC3DkuB,GAAY1tB,EAAAA,EAAAA,IAAQ9hB,EAAMzB,MAAM,GAAI,KACpCkD,EAAMzB,EAAMzB,MAAM,GAAI,IAE5B,QAAQujB,EAAAA,EAAAA,IAAQ9hB,EAAMzB,MAAM,EAAG,KAE3B,IAAK,aAAc,IAAK,aACpB,OAAO,IAAI+wC,EAAOpI,GAAmB,MAAMplB,EAAAA,EAAAA,IAAQrgB,GAAM8tC,EAAmBC,EAAWvtC,EAAOwtC,EAAO,MAGzG,IAAK,aAAc,IAAK,cACpB,GAAe,IAAXhuC,EAAI,GAAY,MACpB,OAAO,IAAI6tC,EAAOpI,IAAmBplB,EAAAA,EAAAA,IAAQrgB,EAAIlD,MAAM,IAAK,KAAMgxC,EAAmBC,EAAWvtC,EAAOwtC,EAAO,MAGtH,OAAO9pC,GAAOyb,mBAAmB,uBAAwB,cAAe,aAC5E,KAAC,EAtOc,GAyOb,SAAUuvB,GAAetC,EAAkBZ,GACxCA,IAAYA,EAAW,IAE5B,IAAMrD,GAAOlpB,EAAAA,GAAAA,IAAY,WAAausB,EAAUoD,GAAAA,GAAAA,MAEhD,OAAOrD,IAAOtsB,EAAAA,GAAAA,IAAYmtB,EAAUwC,GAAAA,GAAAA,MAAgCzG,EAAM,KAAM,GAAI,SACxF,CAEM,SAAUqG,GAAkBpC,EAAkBC,GAChDA,EAAWc,GAAYd,GAEvB3oC,GAAOmrC,iBAEP,IAAMtpC,EAAQ8mC,EAAS9uB,MAAM6uB,GAC7B,GAAK7mC,EAAM1J,OAAS,IAAO,EAAK,MAAM,IAAIc,MAAM,oBAKhD,IAHA,IAAMu2B,GAAUnvB,EAAAA,EAAAA,IAAS,IAAInH,WAAW8J,KAAKiB,KAAK,GAAKpC,EAAM1J,OAAS,KAElEizC,EAAS,EACJhzC,EAAI,EAAGA,EAAIyJ,EAAM1J,OAAQC,IAAK,CACnC,IAAIkE,EAAQqsC,EAASE,aAAahnC,EAAMzJ,GAAGizC,UAAU,SACrD,IAAe,IAAX/uC,EAAgB,MAAM,IAAIrD,MAAM,oBAEpC,IAAK,IAAIoQ,EAAM,EAAGA,EAAM,GAAIA,IACpB/M,EAAS,GAAM,GAAK+M,IACpBmmB,EAAQ4b,GAAU,IAAO,GAAM,EAAKA,EAAS,GAEjDA,G,CAIR,IAAME,EAAc,GAAKzpC,EAAM1J,OAAS,EAGlCozC,EAAejC,GADAznC,EAAM1J,OAAS,GAKpC,KAFiBkI,EAAAA,EAAAA,KAASE,EAAAA,GAAAA,IAAOivB,EAAQ52B,MAAM,EAAG0yC,EAAc,KAAK,GAAKC,MAExD/b,EAAQA,EAAQr3B,OAAS,GAAKozC,GAC5C,MAAM,IAAItyC,MAAM,oBAGpB,OAAOkjB,EAAAA,EAAAA,IAAQqT,EAAQ52B,MAAM,EAAG0yC,EAAc,GAClD,CAEM,SAAUT,GAAkBrb,EAAoBmZ,GAKlD,GAJAA,EAAWc,GAAYd,IAEvBnZ,GAAUnvB,EAAAA,EAAAA,IAASmvB,IAENr3B,OAAS,IAAO,GAAKq3B,EAAQr3B,OAAS,IAAMq3B,EAAQr3B,OAAS,GACtE,MAAM,IAAIc,MAAM,mBAMpB,IAHA,IAAMuyC,EAAyB,CAAE,GAE7BC,EAAgB,GACXrzC,EAAI,EAAGA,EAAIo3B,EAAQr3B,OAAQC,IAG5BqzC,EAAgB,GAChBD,EAAQA,EAAQrzC,OAAS,KAAO,EAChCqzC,EAAQA,EAAQrzC,OAAS,IAAMq3B,EAAQp3B,GAEvCqzC,GAAiB,IAIjBD,EAAQA,EAAQrzC,OAAS,KAAOszC,EAChCD,EAAQA,EAAQrzC,OAAS,IAAMq3B,EAAQp3B,IAAO,EAAIqzC,EAGlDD,EAAQtxC,KAAKs1B,EAAQp3B,IAtVtB,GAsVwC,EAAIqzC,GAtV/B,GAwVZA,GAAiB,GAKzB,IAAMC,EAAelc,EAAQr3B,OAAS,EAChCwzC,GAAWtrC,EAAAA,EAAAA,KAASE,EAAAA,GAAAA,IAAOivB,IAAU,GAAK8Z,GAAaoC,GAM7D,OAHAF,EAAQA,EAAQrzC,OAAS,KAAOuzC,EAChCF,EAAQA,EAAQrzC,OAAS,IAAOwzC,GAAa,EAAID,EAE1C/C,EAASnuC,KAAKgxC,EAAQ1iB,KAAI,SAACxsB,GAAK,OAAgBqsC,EAAUC,QAAQtsC,EAAM,IACnF,CAEM,SAAUsvC,GAAgBlD,EAAkBC,GAC9C,IAEI,OADAmC,GAAkBpC,EAAUC,IACrB,CACM,CAAf,MAAO3pB,GAAQ,CACjB,OAAO,CACX,CAEM,SAAU6sB,GAAevvC,GAI3B,OAHsB,kBAAXA,GAAuBA,EAAQ,GAAKA,GAAS+sC,IAAe/sC,EAAQ,IAC3E0D,GAAOyb,mBAAmB,wBAAyB,QAASnf,GAEzD,aAAP,OAAqBA,EAAM,QAC/B,CEzZO,ICMD0D,GAAS,IAAIC,EAAAA,GDNI,gBCmBvB,IAAM6rC,GAPN,WACE,GAAoB,qBAATzlC,KAAwB,OAAOA,KAC1C,GAAsB,qBAAXnE,OAA0B,OAAOA,OAC5C,GAAsB,qBAAX6pC,EAAAA,EAA0B,OAAOA,EAAAA,EAC5C,MAAM,IAAI9yC,MAAM,iCAClB,CAEkB+yC,GAEdC,GAAcH,GAAUG,QAAUH,GAAUI,SAc1C,SAAUC,GAAYh0C,IACpBA,GAAU,GAAKA,EAAS,MAASA,EAAS,GAAMA,GAAUA,IAC1D6H,GAAOyb,mBAAmB,iBAAkB,SAAUtjB,GAG1D,IAAM2B,EAAS,IAAIZ,WAAWf,GAE9B,OADA8zC,GAAOG,gBAAgBtyC,IAChBuG,EAAAA,EAAAA,IAASvG,EACpB,CArBKmyC,IAAWA,GAAOG,kBAEnBpsC,GAAOk+B,KAAK,gDAEZ+N,GAAS,CACLG,gBAAiB,SAAS5zC,GACtB,OAAOwH,GAAOY,WAAW,oCAAqCX,EAAAA,GAAAA,OAAAA,sBAAqC,CAC/FY,UAAW,0BAEnB,I,kDC1BF,SAAUwrC,GAAcC,GAI1B,MAH0B,kBAAfA,GAAyD,OAA9BA,EAAU3wB,UAAU,EAAG,KACzD2wB,EAAY,KAAOA,IAEhBjsC,EAAAA,EAAAA,IAASisC,EACpB,CAEM,SAAUC,GAAKx0C,EAAwBI,GAEzC,IADAJ,EAAQuC,OAAOvC,GACRA,EAAMI,OAASA,GAAUJ,EAAQ,IAAMA,EAC9C,OAAOA,CACX,CAEM,SAAUy0C,GAAY1E,GACxB,MAAyB,kBAAdA,GACAvsB,EAAAA,GAAAA,IAAYusB,EAAUoD,GAAAA,GAAAA,OAE1B7qC,EAAAA,EAAAA,IAASynC,EACpB,CAEM,SAAU2E,GAAW7L,EAAaqJ,GAIpC,IAHA,IAAIyC,EAAe9L,EAEbsB,EAAQ+H,EAAK9sB,cAActD,MAAM,KAC9BzhB,EAAI,EAAGA,EAAI8pC,EAAM/pC,OAAQC,IAAK,CAGnC,IAAIu0C,EAAgB,KACpB,IAAK,IAAM7wC,KAAO4wC,EACb,GAAI5wC,EAAIqhB,gBAAkB+kB,EAAM9pC,GAAI,CAChCu0C,EAAgBD,EAAa5wC,GAC7B,K,CAKT,GAAsB,OAAlB6wC,EACA,OAAO,KAIXD,EAAeC,C,CAGnB,OAAOD,CACX,CAGM,SAAUE,GAAOT,GACnB,IAAM9xC,GAAQgG,EAAAA,EAAAA,IAAS8rC,GAIvB9xC,EAAM,GAAiB,GAAXA,EAAM,GAAa,GAK/BA,EAAM,GAAiB,GAAXA,EAAM,GAAa,IAE/B,IAAMtC,GAAQokB,EAAAA,EAAAA,IAAQ9hB,GAEtB,MAAO,CACJtC,EAAM4jB,UAAU,EAAG,IACnB5jB,EAAM4jB,UAAU,GAAI,IACpB5jB,EAAM4jB,UAAU,GAAI,IACpB5jB,EAAM4jB,UAAU,GAAI,IACpB5jB,EAAM4jB,UAAU,GAAI,KACrBnhB,KAAK,IACX,CC1EO,IAAM05B,GAAU,qB,uSCmBjBl0B,GAAS,IAAIC,EAAAA,GAAOi0B,IAI1B,SAAS2Y,GAAY90C,GACjB,OAAiB,MAATA,GAAiBA,EAAM2wC,UAAY3wC,EAAM2wC,SAAS8B,MAC9D,CAUO,IAAMsC,GAAgB,qGASxB,OATwB,yCAOzB,SAAkB/0C,GACd,SAAUA,IAASA,EAAMg1C,mBAC7B,KAAC,EATwB,CAAQxuB,EAAAA,IAyCrC,SAASyuB,GAAYttC,EAAW5D,GAC5B,IAAMoB,EAAamvC,GAAcI,GAAW/sC,EAAM,sBAGlD,IADoByc,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAUN,EAAAA,EAAAA,IAAO,CAAEhgB,EAAIlD,MAAM,GAAI,IAAKsE,MAAgBye,UAAU,KACxE8wB,GAAW/sC,EAAM,cAAcyd,cAC/C,MAAM,IAAIlkB,MAAM,oBAGpB,IAAMw7B,EAtBV,SAAkB/0B,EAAW5D,EAAiBoB,GAE1C,GAAe,gBADAuvC,GAAW/sC,EAAM,iBACF,CAC1B,IAAMlC,EAAK6uC,GAAcI,GAAW/sC,EAAM,2BACpChB,EAAU,IAAIuuC,KAAAA,SAAYzvC,GAE1B0vC,EAAS,IAAID,KAAAA,gBAAAA,KAAwBnxC,EAAK4C,GAEhD,OAAO2B,EAAAA,EAAAA,IAAS6sC,EAAOjwC,QAAQC,G,CAGnC,OAAO,IACX,CAUuBiwC,CAASztC,EAAM5D,EAAIlD,MAAM,EAAG,IAAKsE,GAE/Cu3B,GACDz0B,GAAOY,WAAW,qBAAsBX,EAAAA,GAAAA,OAAAA,sBAAqC,CACzEY,UAAW,YAInB,IAAMusC,EAActxC,EAAIlD,MAAM,GAAI,IAE5B4oB,EAAUyU,GAAexB,GAC/B,GAAI/0B,EAAK8hB,QAAS,CACd,IAAImY,EAAQj6B,EAAK8hB,QAAQrE,cAGzB,GAF8B,OAA1Bwc,EAAMhe,UAAU,EAAG,KAAege,EAAQ,KAAOA,IAEjD3Z,EAAAA,EAAAA,IAAW2Z,KAAWnY,EACtB,MAAM,IAAIvoB,MAAM,mB,CAIxB,IAAMo0C,EAA4B,CAC9BN,oBAAoB,EACpBvrB,QAASA,EACTiT,YAAYtY,EAAAA,EAAAA,IAAQsY,IAIxB,GAA6C,QAAzCgY,GAAW/sC,EAAM,oBAA+B,CAChD,IAAM4tC,EAAqBjB,GAAcI,GAAW/sC,EAAM,gCACpD6tC,EAAalB,GAAcI,GAAW/sC,EAAM,6BAE5C8tC,EAAkB,IAAIP,KAAAA,SAAYM,GAClCE,EAAiB,IAAIR,KAAAA,gBAAAA,KAAwBG,EAAaI,GAE1DvD,EAAOwC,GAAW/sC,EAAM,kBAAoBgqC,GAC5CjB,EAASgE,GAAW/sC,EAAM,oBAAsB,KAEhD8vB,GAAUnvB,EAAAA,EAAAA,IAASotC,EAAexwC,QAAQqwC,IAEhD,IACI,IAAM5E,EAAWmC,GAAkBrb,EAASiZ,GACtCiF,EAAO/D,GAAOgE,aAAajF,EAAU,KAAMD,GAAQmF,WAAW3D,GAEpE,GAAIyD,EAAKjZ,YAAc4Y,EAAQ5Y,WAC3B,MAAM,IAAIx7B,MAAM,qBAGpBo0C,EAAQ3E,SAAWgF,EAAKhF,Q,CAE1B,MAAO1pB,GAIL,GAAIA,EAAM6C,OAAS5hB,EAAAA,GAAAA,OAAAA,kBAAqD,aAAnB+e,EAAMia,SACvD,MAAMja,C,EAKlB,OAAO,IAAI8tB,GAAgBO,EAC/B,CAKA,SAASQ,GAAWC,EAA2BrJ,EAAkBsJ,EAAeC,EAAeC,GAC3F,OAAO5tC,EAAAA,EAAAA,IAAS6tC,GAAQJ,EAAerJ,EAAMsJ,EAAOC,EAAOC,GAC/D,CAEA,SAASpG,GAAOiG,EAA2BrJ,EAAkBsJ,EAAeC,EAAeC,GACvF,OAAO/sB,QAAQE,QAAQysB,GAAWC,EAAerJ,EAAMsJ,EAAOC,EAAOC,GACzE,CAEA,SAASE,GAAkBzuC,EAAWooC,EAA0BsG,EAA2BC,EAA2BC,GAClH,IAAMR,EAAgBtB,GAAY1E,GAE5ByG,EAAM9B,GAAW/sC,EAAM,cAE7B,GAAI6uC,GAAuB,kBAATA,EAAmB,CACjC,IAAM3tC,EAAa,SAASjI,EAAcZ,GACtC,OAAOiI,GAAOyb,mBAAmB,6CAA8C9iB,EAAMZ,EACzF,EAEA,GAA0B,WAAtBw2C,EAAIpxB,cAA4B,CAChC,IAAMsnB,EAAO4H,GAAcI,GAAW/sC,EAAM,0BACtC4P,EAAItX,SAASy0C,GAAW/sC,EAAM,uBAC9B7C,EAAI7E,SAASy0C,GAAW/sC,EAAM,uBAC9B6Q,EAAIvY,SAASy0C,GAAW/sC,EAAM,uBAG/B4P,GAAMzS,GAAM0T,GAAK3P,EAAW,MAAO2tC,GAGlB,KAAjBj/B,EAAKA,EAAI,IAAa1O,EAAW,IAAK0O,GAE3C,IAAM0+B,EAAQh2C,SAASy0C,GAAW/sC,EAAM,2BAGxC,OAFc,KAAVsuC,GAAgBptC,EAAW,QAASotC,GAEjCK,EAAWP,EAAerJ,EAAMn1B,EAAGzS,EAAG0T,EAAG,GAAI+9B,E,CAEjD,GAA0B,WAAtBC,EAAIpxB,cAA4B,CAEvC,IAAMsnB,EAAO4H,GAAcI,GAAW/sC,EAAM,0BAExCuuC,EAAkB,KAChBO,EAAM/B,GAAW/sC,EAAM,wBACjB,gBAAR8uC,EACAP,EAAU,SACK,gBAARO,EACPP,EAAU,SAEVrtC,EAAW,MAAO4tC,GAGtB,IAAMT,EAAQ/1C,SAASy0C,GAAW/sC,EAAM,uBAElCsuC,EAAQh2C,SAASy0C,GAAW/sC,EAAM,2BAGxC,OAFc,KAAVsuC,GAAgBptC,EAAW,QAASotC,GAEjCI,EAAWN,EAAerJ,EAAMsJ,EAAOC,EAAOC,E,EAI7D,OAAOjuC,GAAOyb,mBAAmB,sCAAuC,MAAO8yB,EACnF,CClMA,IAAMvuC,GAAS,IAAIC,EAAAA,GAAOi0B,IAWbua,GAAiB,qGAUzB,OAVyB,0CAQ1B,SAAmB12C,GACf,SAAUA,IAASA,EAAM22C,oBAC7B,KAAC,EAVyB,CAAQnwB,EAAAA,IAchC,SAAUthB,GAAQ0xC,EAAc7G,GAClC,IAAMpoC,EAAO8qB,KAAKC,MAAMkkB,GAExB7G,EAAW0E,GAAY1E,GAGvB,IAAM8G,GAAU5uB,EAAAA,EAAAA,IAAWysB,GAAW/sC,EAAM,YAGtCmvC,EAAUxC,GAAcI,GAAW/sC,EAAM,YAC1CmvC,GAAYA,EAAQ12C,OAAS,KAAQ,GACtC6H,GAAOyb,mBAAmB,kBAAmB,OAAQkzB,GAczD,IAXA,IAAM7yC,GAAMuE,EAAAA,EAAAA,IAASwnC,GAAOC,EAAUA,EAAU,IAAM,GAAI,WAAWlvC,MAAM,EAAG,IAExE4E,EAAKqxC,EAAQj2C,MAAM,EAAG,IACtBk2C,EAAgBD,EAAQj2C,MAAM,IAG9Bm2C,EAAS,IAAI9B,KAAAA,gBAAAA,KAAwBnxC,EAAK0B,GAC1CqyB,EAAOod,KAAAA,QAAAA,MAAAA,OAAwB5sC,EAAAA,EAAAA,IAAS0uC,EAAO9xC,QAAQ6xC,KAGzDE,EAAU,GACL52C,EAAI,EAAGA,EAAIy3B,EAAK13B,OAAQC,IAC7B42C,GAAW10C,OAAOC,aAAas1B,EAAKz3B,IAGxC,IAAM62C,GAAe1zB,EAAAA,GAAAA,IAAYyzB,GAE3Bva,GAAarY,EAAAA,EAAAA,GAAU6yB,GAE7B,OAAO,IAAIR,GAAkB,CACzBC,qBAAqB,EACrBltB,QAASotB,EACTna,WAAYA,GAEpB,CCxEM,SAAUya,GAAkBP,GAC9B,IAAIjvC,EAAY,KAChB,IACIA,EAAO8qB,KAAKC,MAAMkkB,E,CACpB,MAAO3vB,GAAS,OAAO,C,CAEzB,OAAQtf,EAAKmvC,SAAWnvC,EAAKkvC,OACjC,CAEM,SAAUO,GAAiBR,GAC7B,IAAIjvC,EAAY,KAChB,IACIA,EAAO8qB,KAAKC,MAAMkkB,E,CACpB,MAAO3vB,GAAS,OAAO,C,CAEzB,SAAKtf,EAAKw0B,SAAWl8B,SAAS0H,EAAKw0B,WAAax0B,EAAKw0B,SAAsC,IAA3Bl8B,SAAS0H,EAAKw0B,SAMlF,CAMM,SAAUkb,GAAqBT,GACjC,GAAIO,GAAkBP,GAClB,IACI,OAAO3uB,EAAAA,EAAAA,IAAWwK,KAAKC,MAAMkkB,GAAMC,Q,CACrC,MAAO5vB,GAAS,OAAO,I,CAG7B,GAAImwB,GAAiBR,GACjB,IACI,OAAO3uB,EAAAA,EAAAA,IAAWwK,KAAKC,MAAMkkB,GAAMntB,Q,CACrC,MAAOxC,GAAS,OAAO,I,CAG7B,OAAO,IACX,CCrCA,SAASqwB,GAAkBV,EAAc7G,EAA0BwG,GAC/D,GAAIY,GAAkBP,GAAO,CACrBL,GAAoBA,EAAiB,GACzC,IAAMjB,EAAUiC,GAAiBX,EAAM7G,GAEvC,OADIwG,GAAoBA,EAAiB,GAClCptB,QAAQE,QAAQisB,E,CAG3B,OAAI8B,GAAiBR,GHyMnB,SAAwBA,EAAc7G,EAA0BwG,G,wIAGtD,OAFN5uC,EAAO8qB,KAAKC,MAAMkkB,GAAK,SAEXR,GAAezuC,EAAMooC,EAAUD,GAAQ0H,KAAAA,OAAejB,GAAiB,OAAhF,OAAHxyC,EAAM,EAAH,uBACFkxC,GAAYttC,EAAM5D,IAAI,0C,CG5MlB0zC,CAAgBb,EAAM7G,EAAUwG,GAGpCptB,QAAQ6X,OAAO,IAAI9/B,MAAM,uBACpC,CAEA,SAASw2C,GAAsBd,EAAc7G,GACzC,GAAIoH,GAAkBP,GAClB,OAAOW,GAAiBX,EAAM7G,GAGlC,GAAIqH,GAAiBR,GACjB,OHqLF,SAAsBA,EAAc7G,GACtC,IAAMpoC,EAAO8qB,KAAKC,MAAMkkB,GAGxB,OAAO3B,GAAYttC,EADPyuC,GAAezuC,EAAMooC,EAAU+F,GAAY0B,KAAAA,YAE3D,CG1LeG,CAAoBf,EAAM7G,GAGrC,MAAM,IAAI7uC,MAAM,sBACpB,CClCO,I,uSCkBD+G,GAAS,IAAIC,EAAAA,GDlBI,gBC6BhB,IAAM0vC,GAAO,0CAUhB,WAAYlb,EAA6D3U,GAAmB,MAnB7E/nB,EAsBX,IAHwF,eACxF,eAnBa,OADFA,EAsBG08B,KArBOoL,EAAAA,EAAAA,IAAY9nC,EAAM08B,WAAY,KAAwB,MAAjB18B,EAAMypB,QAqBrC,CACvB,IAAMiU,EAAa,IAAIjB,GAAWC,EAAWA,YAQ7C,IAPA/V,EAAAA,EAAAA,KAAe,UAAM,eAAe,kBAAM+W,CAAU,KACpD/W,EAAAA,EAAAA,KAAe,UAAM,UAAWuX,GAAe,EAAKpB,YAEhD,EAAKrT,WAAYxB,EAAAA,EAAAA,IAAWyU,EAAWjT,UACvCxhB,GAAOyb,mBAAmB,8BAA+B,aAAc,cAxBvF,SAAqB1jB,GACjB,IAAM2wC,EAAW3wC,EAAM2wC,SACvB,OAAQA,GAAYA,EAAS8B,MACjC,CAwBgBqC,CAAYpY,GAAa,CACzB,IAAM8V,EAAc9V,EAAWiU,UAC/BhqB,EAAAA,EAAAA,KAAe,UAAM,aAAa,iBAC9B,CACI8rB,OAAQD,EAAYC,OACpBP,KAAMM,EAAYN,MAAQP,GAC1BjB,OAAQ8B,EAAY9B,QAAU,KACjC,IAEL,IAAMC,EAAW,EAAKA,SAElBzS,GADS0T,GAAOgE,aAAajF,EAAS8B,OAAQ,KAAM9B,EAASD,QAAQmF,WAAWlF,EAASuB,MACrExV,cAAgB,EAAKjT,SACzCxhB,GAAOyb,mBAAmB,4BAA6B,aAAc,a,MAGzEiD,EAAAA,EAAAA,KAAe,UAAM,aAAa,kBAAgB,IAAI,G,KAIvD,CACH,GAAI8V,GAAWob,aAAanb,GAEC,cAArBA,EAAW3P,OACX9kB,GAAOyb,mBAAmB,uCAAwC,aAAc,eAEpFiD,EAAAA,EAAAA,KAAe,UAAM,eAAe,kBAAmB+V,CAAW,QAE/D,CAEwB,kBAAhBA,GACHA,EAAWjZ,MAAM,iBAAyC,KAAtBiZ,EAAWt8B,SAC/Cs8B,EAAa,KAAOA,GAI5B,IAAMgB,EAAa,IAAIjB,GAAWC,IAClC/V,EAAAA,EAAAA,KAAe,UAAM,eAAe,kBAAM+W,CAAU,G,EAGxD/W,EAAAA,EAAAA,KAAe,UAAM,aAAa,kBAAgB,IAAI,KACtDA,EAAAA,EAAAA,KAAe,UAAM,UAAWuX,GAAe,EAAKpB,W,CAQL,OAJ/C/U,IAAatB,EAASsf,WAAWhe,IACjC9f,GAAOyb,mBAAmB,mBAAoB,WAAYqE,IAG9DpB,EAAAA,EAAAA,KAAe,UAAM,WAAYoB,GAAY,MAAM,CACvD,CA4FC,OA5FA,8BAED,WAA2B,OAAO/jB,KAAK8zC,WAAa,GAAC,sBACrD,WAA2B,OAAO9zC,KAAK+zC,cAAcrb,UAAY,GAAC,qBAClE,WAA0B,OAAO14B,KAAK+zC,cAAcjb,SAAW,GAAC,wBAEhE,WACI,OAAO3T,QAAQE,QAAQrlB,KAAKylB,QAChC,GAAC,qBAED,SAAQ1B,GACJ,OAAO,IAAI6vB,EAAO5zC,KAAM+jB,EAC5B,GAAC,6BAED,SAAgBI,GAA+B,WAC3C,OAAOvB,EAAAA,EAAAA,IAAkBuB,GAAamB,MAAK,SAACjB,GACzB,MAAXA,EAAGa,QACCjB,EAAAA,EAAAA,IAAWI,EAAGa,QAAU,EAAKO,SAC7BxhB,GAAOyb,mBAAmB,oCAAqC,mBAAoByE,EAAYe,aAE5Fb,EAAGa,MAGd,IAAMoQ,EAAY,EAAKye,cAAcC,YAAW3zB,EAAAA,EAAAA,GAAUob,GAA+BpX,KACzF,OAAOoX,GAA+BpX,EAAIiR,EAC9C,GACJ,GAAC,yBAEK,SAAYnP,G,0JACP8tB,EAAAA,EAAAA,IAAcj0C,KAAK+zC,cAAcC,WAAW7L,GAAYhiB,MAAU,+C,GAC5E,4BAEK,SAAeE,EAAyBpG,EAA8CjkB,G,6IAEtE,O,SAAMk4C,GAAAA,aAA+B7tB,EAAQpG,EAAOjkB,GAAO,SAACY,GAO1E,OANqB,MAAjB,EAAKmnB,UACL9f,GAAOY,WAAW,8CAA+CX,EAAAA,GAAAA,OAAAA,sBAAqC,CAClGY,UAAW,cACX9I,MAAOY,IAGR,EAAKmnB,SAASgB,YAAYnoB,EACrC,IAAE,OARa,OAATu3C,EAAY,EAAH,wBAURF,EAAAA,EAAAA,IAAcj0C,KAAK+zC,cAAcC,WAAWE,GAAAA,KAAuBC,EAAU9tB,OAAQpG,EAAOk0B,EAAUn4C,UAAQ,+C,GACxH,qBAED,SAAQ+vC,EAA0BlZ,EAAe0f,GAM7C,GALwB,oBAAb1f,GAA4B0f,IACnCA,EAAmB1f,EACnBA,EAAU,CAAC,GAGX0f,GAAiD,oBAAtBA,EAC3B,MAAM,IAAIr1C,MAAM,oBAKpB,OAFK21B,IAAWA,EAAU,CAAC,GLqE7B,SAAkBye,EAAiCvF,EAA0BlZ,EAA0B0f,GAEzG,IAEI,IAAItuB,EAAAA,EAAAA,IAAWqtB,EAAQ7rB,WAAayU,GAAeoX,EAAQ5Y,YACvD,MAAM,IAAIx7B,MAAM,+BAIpB,GAAI4zC,GAAYQ,GAAU,CACtB,IAAM3E,EAAW2E,EAAQ3E,SAGzB,GAFaiB,GAAOgE,aAAajF,EAAS8B,OAAQ,KAAM9B,EAASD,QAAQmF,WAAWlF,EAASuB,MAAQP,IAE5FjV,YAAc4Y,EAAQ5Y,WAC3B,MAAM,IAAIx7B,MAAM,oB,EAI1B,MAAOmJ,GACL,OAAO8e,QAAQ6X,OAAO32B,E,CAIF,oBAAbwsB,GAA4B0f,IACnCA,EAAmB1f,EACnBA,EAAU,CAAC,GAEVA,IAAWA,EAAU,CAAC,GAE3B,IAAM6F,GAAyBp0B,EAAAA,EAAAA,IAASgtC,EAAQ5Y,YAC1CqZ,EAAgBtB,GAAY1E,GAE9BtY,EAAsB,KACtBya,EAAe,KACfxB,EAAiB,KACrB,GAAIoE,GAAYQ,GAAU,CACtB,IAAM9C,EAAc8C,EAAQ3E,SAC5BlZ,GAAUnvB,EAAAA,EAAAA,IAASyqC,GAAkBP,EAAYC,OAAQD,EAAY9B,QAAU,OAC/EwB,EAAOM,EAAYN,MAAQP,GAC3BjB,EAAS8B,EAAY9B,QAAU,I,CAGnC,IAAI0H,EAASvhB,EAAQuhB,OAChBA,IAAUA,EAAS,aAGxB,IAAI1L,EAAmB,KAEnBA,EADA7V,EAAQ6V,MACDpkC,EAAAA,EAAAA,IAASuuB,EAAQ6V,MAEjB0H,GAAY,IAIvB,IAAI3uC,EAAiB,KACrB,GAAIoxB,EAAQpxB,IAER,GAAkB,MADlBA,GAAK6C,EAAAA,EAAAA,IAASuuB,EAAQpxB,KACfrF,OAAiB,MAAM,IAAIc,MAAM,mBAEzCuE,EAAK2uC,GAAY,IAIpB,IAAIiE,EAAyB,KAC7B,GAAIxhB,EAAQyhB,MAER,GAA0B,MAD1BD,GAAa/vC,EAAAA,EAAAA,IAASuuB,EAAQyhB,OACfl4C,OAAiB,MAAM,IAAIc,MAAM,qBAEhDm3C,EAAajE,GAAY,IAI7B,IAAI78B,EAAK,GAAK,GAAKzS,EAAI,EAAG0T,EAAI,EAU9B,OATIqe,EAAQ2gB,SACJ3gB,EAAQ2gB,OAAOjgC,IAAKA,EAAIsf,EAAQ2gB,OAAOjgC,GACvCsf,EAAQ2gB,OAAO1yC,IAAKA,EAAI+xB,EAAQ2gB,OAAO1yC,GACvC+xB,EAAQ2gB,OAAOh/B,IAAKA,EAAIqe,EAAQ2gB,OAAOh/B,IAMxCg/B,KAAAA,OAAczB,EAAerJ,EAAMn1B,EAAGzS,EAAG0T,EAAG,GAAI+9B,GAAkBjtB,MAAK,SAACvlB,GAI3E,IAAMw0C,GAHNx0C,GAAMuE,EAAAA,EAAAA,IAASvE,IAGQlD,MAAM,EAAG,IAC1B23C,EAAYz0C,EAAIlD,MAAM,GAAI,IAG1Bw0C,EAActxC,EAAIlD,MAAM,GAAI,IAG5B8F,EAAU,IAAIuuC,KAAAA,SAAYzvC,GAC1B0vC,EAAS,IAAID,KAAAA,gBAAAA,KAAwBqD,EAAY5xC,GACjDxB,GAAamD,EAAAA,EAAAA,IAAS6sC,EAAOpwC,QAAQ23B,IAGrC+b,GAAMp0B,EAAAA,EAAAA,IAAUN,EAAAA,EAAAA,IAAO,CAACy0B,EAAWrzC,KAGnCwC,EAA+B,CACjC8hB,QAAS6rB,EAAQ7rB,QAAQ7F,UAAU,GAAGwB,cACtC+nB,GAAI0H,GAAOwD,GACXlc,QAAS,EACT+X,OAAQ,CACJwE,OAAQ,cACRC,aAAc,CACVlzC,IAAI2e,EAAAA,EAAAA,IAAQ3e,GAAIme,UAAU,IAE9Bze,YAAYif,EAAAA,EAAAA,IAAQjf,GAAYye,UAAU,GAC1C4yB,IAAK,SACLoC,UAAW,CACPlM,MAAMtoB,EAAAA,EAAAA,IAAQsoB,GAAM9oB,UAAU,GAC9B3K,EAAG1B,EACHshC,MAAO,GACPrgC,EAAGA,EACH1T,EAAGA,GAEP2zC,IAAKA,EAAI70B,UAAU,KAK3B,GAAI6T,EAAS,CACT,IAAM+d,EAAapB,GAAY,IACzBqB,EAAkB,IAAIP,KAAAA,SAAYM,GAClCE,EAAiB,IAAIR,KAAAA,gBAAAA,KAAwBG,EAAaI,GAC1DF,GAAqBjtC,EAAAA,EAAAA,IAASotC,EAAe3wC,QAAQ0yB,IACrDqhB,EAAM,IAAIC,KACVC,EAAaF,EAAIG,iBAAmB,IACvBzE,GAAKsE,EAAII,cAAgB,EAAG,GAAK,IACjC1E,GAAKsE,EAAIK,aAAc,GAAK,IAC5B3E,GAAKsE,EAAIM,cAAe,GAAK,IAC7B5E,GAAKsE,EAAIO,gBAAiB,GAAK,IAC/B7E,GAAKsE,EAAIQ,gBAAiB,GAAK,MAElD3xC,EAAK,YAAc,CACfywC,OAAQA,EACRmB,aAAe,QAAUP,EAAY,KAAOrxC,EAAK8hB,QACjDgsB,iBAAiBrxB,EAAAA,EAAAA,IAAQoxB,GAAY5xB,UAAU,GAC/C2xB,oBAAoBnxB,EAAAA,EAAAA,IAAQmxB,GAAoB3xB,UAAU,GAC1DsuB,KAAMA,EACNxB,OAAQA,EACRvU,QAAS,M,CAIjB,OAAO1J,KAAK8P,UAAU56B,EAC1B,GACJ,CKzNe6xC,CAAgBx1C,KAAM+rC,EAAUlZ,EAAS0f,EACpD,IAGA,2BAGA,SAAoB1f,GAChB,IAAIY,EAAsB2c,GAAY,IAEjCvd,IAAWA,EAAU,CAAC,GAEvBA,EAAQ4iB,eACRhiB,GAAUnvB,EAAAA,EAAAA,KAAS61B,EAAAA,EAAAA,KAAa9Z,EAAAA,EAAAA,IAAUN,EAAAA,EAAAA,IAAO,CAAE0T,EAASZ,EAAQ4iB,gBAAkB,EAAG,MAG7F,IAAM9I,EAAWmC,GAAkBrb,EAASZ,EAAQ6Z,QACpD,OAAOkH,EAAOhC,aAAajF,EAAU9Z,EAAQqb,KAAMrb,EAAQ6Z,OAC/D,GAAC,+BAED,SAAyBkG,EAAc7G,EAA0BwG,GAC7D,OAAOe,GAAkBV,EAAM7G,EAAUwG,GAAkBjtB,MAAK,SAACgsB,GAC7D,OAAO,IAAIsC,EAAOtC,EACtB,GACJ,GAAC,mCAED,SAA6BsB,EAAc7G,GACvC,OAAO,IAAI6H,EAAOF,GAAsBd,EAAM7G,GAClD,GAAC,0BAED,SAAoBY,EAAkBuB,EAAetB,GAEjD,OADKsB,IAAQA,EAAOP,IACb,IAAIiG,EAAOhG,GAAOgE,aAAajF,EAAU,KAAMC,GAAUiF,WAAW3D,GAC/E,KAAC,EAnKe,CAAQtqB,GAsKtB,SAAU8xB,GAAcvvB,EAAyBmP,GACnD,OAAO8E,GAAe+N,GAAYhiB,GAAUmP,EAChD,CAEM,SAAUqgB,GAAgBtvB,EAAyBpG,EAA8CjkB,EAA4Bs5B,GAC/H,OAAO8E,GAAe8Z,GAAAA,KAAuB7tB,EAAQpG,EAAOjkB,GAAQs5B,EACxE,CCzMO,IAAMsgB,GAAc,6CCAdC,GAAW,qECCXC,GAAc,SCGrB7xC,GAAS,IAAIC,EAAAA,GCJI,kBDuBvB,SAAS6xC,GAAmBnxB,GACxB,IAAMoxB,EAAO,SAASC,EAAgBpjB,GACnB,MAAXA,IAAmBA,EAAU,CAAC,GAClC,IAAMqjB,EAA2B,GAEjC,GAAID,EAAUE,gBAAqC,MAAnBtjB,EAAQujB,OACpC,IACIF,EAAa/3C,KAAK,IAAI83C,EAAUE,eAAevxB,EAASiO,EAAQujB,QACpD,CAAd,MAAMnzB,GAAQ,CAGpB,GAAIgzB,EAAUI,mBAA2C,MAAtBxjB,EAAQyjB,UACvC,IACIJ,EAAa/3C,KAAK,IAAI83C,EAAUI,kBAAkBzxB,EAASiO,EAAQyjB,WACvD,CAAd,MAAMrzB,GAAQ,CAGpB,GAAIgzB,EAAUM,iBAAuC,MAApB1jB,EAAQ2jB,QACrC,IACIN,EAAa/3C,KAAK,IAAI83C,EAAUM,gBAAgB3xB,EAASiO,EAAQ2jB,SACrD,CAAd,MAAMvzB,GAAQ,CAGpB,GAAIgzB,EAAUQ,gBAAqC,MAAnB5jB,EAAQ6jB,OAAgB,CAMpD,IACI,IAAM3yB,EAAW,IAAIkyB,EAAUQ,eAAe7xB,EAASiO,EAAQ6jB,QAC3D3yB,EAASa,UAAoD,IAHxD,CAAE,SAAU,UAAW,UAAW,WAGdI,QAAQjB,EAASa,QAAQhoB,OAClDs5C,EAAa/3C,KAAK4lB,EAEV,CAAd,MAAMd,GAAQ,C,CAGpB,GAAIgzB,EAAUU,oBAA6C,MAAvB9jB,EAAQ+jB,WACxC,IACIV,EAAa/3C,KAAK,IAAI83C,EAAUU,mBAAmB/xB,GACvC,CAAd,MAAM3B,GAAQ,CAGpB,GAAIgzB,EAAUY,cAAiC,MAAjBhkB,EAAQikB,KAClC,IACI,IACM/yB,EAAW,IAAIkyB,EAAUY,aAAajyB,EAASiO,EAAQikB,MACzD/yB,EAASa,UAAoD,IAFpD,CAAE,WAEcI,QAAQjB,EAASa,QAAQhoB,OAClDs5C,EAAa/3C,KAAK4lB,EAEV,CAAd,MAAMd,GAAQ,CAGpB,GAA4B,IAAxBizB,EAAa95C,OAAgB,OAAO,KAExC,GAAI65C,EAAUc,iBAAkB,CAC5B,IAAIC,EAAS,EAMb,OALsB,MAAlBnkB,EAAQmkB,OACRA,EAASnkB,EAAQmkB,OACE,cAAZpyB,IACPoyB,EAAS,GAEN,IAAIf,EAAUc,iBAAiBb,EAAcc,E,CAGxD,OAAOd,EAAa,EACxB,EAMA,OAJAF,EAAKiB,UAAY,SAASryB,GACtB,OAAOmxB,GAAmBnxB,EAC9B,EAEOoxB,CACX,CAEA,SAASkB,GAAmBC,EAAavyB,GACrC,IAAMoxB,EAAO,SAASC,EAAgBpjB,GAClC,OAAIojB,EAAUmB,gBACH,IAAInB,EAAUmB,gBAAgBD,EAAKvyB,GAGvC,IACX,EAMA,OAJAoxB,EAAKiB,UAAY,SAASryB,GACtB,OAAOsyB,GAAmBC,EAAKvyB,EACnC,EAEOoxB,CACX,CAEA,IAAMqB,GAAqB,CACvBxyB,QAAS,EACTyyB,WAAY,6CACZ16C,KAAM,YACN26C,iBAAkBxB,GAAmB,cAGnCyB,GAAmB,CACrB3yB,QAAS,EACTyyB,WAAY,6CACZ16C,KAAM,UACN26C,iBAAkBxB,GAAmB,YAGnC0B,GAAyB,CAC3B5yB,QAAS,GACTjoB,KAAM,gBACN26C,iBAAkBL,GAAmB,sCAAuC,kBAI1EQ,GAAwC,CAC1CC,YAAa,CAAE9yB,QAAS,EAAGjoB,KAAM,eAEjCy6C,UAAWA,GACXO,QAASP,GAETQ,OAAQ,CAAEhzB,QAAS,EAAGjoB,KAAM,UAE5B46C,QAASA,GACTM,QAASN,GAETO,QAAS,CACLlzB,QAAS,EACTyyB,WAAY,6CACZ16C,KAAM,UACN26C,iBAAkBxB,GAAmB,YAGzCiC,MAAO,CACHnzB,QAAS,GACTjoB,KAAM,QACN26C,iBAAkBxB,GAAmB,UAGzCkC,OAAQ,CACJpzB,QAAS,EACTyyB,WAAY,6CACZ16C,KAAM,SACN26C,iBAAkBxB,GAAmB,WAGzCmC,SAAU,CAAErzB,QAAS,QAASjoB,KAAM,YAEpCu7C,QAAS,CACLtzB,QAAS,SACTjoB,KAAM,UACN26C,iBAAkBxB,GAAmB,YAKzCqC,QAAS,CACLvzB,QAAS,GACTjoB,KAAM,UACN26C,iBAAkBL,GAAmB,mCAAqC,YAG9EmB,cAAe,CAAExzB,QAAS,GAAIjoB,KAAM,iBAEpC66C,cAAeA,GACfa,eAAgBb,GAEhBc,aAAc,CACV1zB,QAAS,EACTjoB,KAAM,eACN26C,iBAAkBL,GAAmB,qCAAuC,iBAGhFsB,KAAM,CAAE3zB,QAAS,IAAKjoB,KAAM,QAE5B67C,MAAO,CACH5zB,QAAS,IACTjoB,KAAM,QACN26C,iBAAkBxB,GAAmB,UAEzC2C,SAAU,CAAE7zB,QAAS,MAAOjoB,KAAM,YAElC+7C,SAAU,CACN9zB,QAAS,GACTjoB,KAAM,WACN26C,iBAAkBxB,GAAmB,aAEzC,iBAAkB,CAAElxB,QAAS,GAAIjoB,KAAM,kBACvC,kBAAmB,CAAEioB,QAAS,IAAKjoB,KAAM,mBAEzCg8C,SAAU,CAAE/zB,QAAS,MAAOjoB,KAAM,YAClC,mBAAoB,CAAEioB,QAAS,OAAQjoB,KAAM,oBAC7C,kBAAmB,CAAEioB,QAAS,OAAQjoB,KAAM,mBAE5Ci8C,IAAK,CAAEh0B,QAAS,GAAIjoB,KAAM,OAC1Bk8C,KAAM,CAAEj0B,QAAS,GAAIjoB,KAAM,SASzB,SAAU+nB,GAAWC,GAEvB,GAAe,MAAXA,EAAmB,OAAO,KAE9B,GAAwB,kBAAbA,EAAuB,CAC9B,IAAK,IAAMhoB,KAAQ86C,GAAU,CACzB,IAAMqB,EAAWrB,GAAS96C,GAC1B,GAAIm8C,EAASl0B,UAAYD,EACrB,MAAO,CACHhoB,KAAMm8C,EAASn8C,KACfioB,QAASk0B,EAASl0B,QAClByyB,WAAayB,EAASzB,YAAc,KACpCC,iBAAmBwB,EAASxB,kBAAoB,K,CAK5D,MAAO,CACH1yB,QAASD,EACThoB,KAAM,U,CAId,GAAwB,kBAAbgoB,EAAuB,CAC9B,IAAMm0B,EAAWrB,GAAS9yB,GAC1B,OAAgB,MAAZm0B,EAA2B,KACxB,CACHn8C,KAAMm8C,EAASn8C,KACfioB,QAASk0B,EAASl0B,QAClByyB,WAAYyB,EAASzB,WACrBC,iBAAmBwB,EAASxB,kBAAoB,K,CAIxD,IAAMwB,EAAYrB,GAAS9yB,EAAQhoB,MAGnC,IAAKm8C,EAID,MAHgC,kBAArBn0B,EAAQC,SACf5gB,GAAOyb,mBAAmB,0BAA2B,UAAWkF,GAE7DA,EAIa,IAApBA,EAAQC,SAAiBD,EAAQC,UAAYk0B,EAASl0B,SACtD5gB,GAAOyb,mBAAmB,2BAA4B,UAAWkF,GAKrE,IAhQqB5oB,EAgQjBg9C,EAAuCp0B,EAAQ2yB,kBAAoB,KAUvE,OATuB,MAAnByB,GAA2BD,EAASxB,mBAEhCyB,GAnQah9C,EAkQG+8C,EAASxB,mBAjQY,oBAArBv7C,EAAMi7C,UAkQJ8B,EAASxB,iBAAiBN,UAAUryB,GAEpCm0B,EAASxB,kBAK5B,CACH36C,KAAMgoB,EAAQhoB,KACdioB,QAASk0B,EAASl0B,QAClByyB,WAAa1yB,EAAQ0yB,YAAcyB,EAASzB,YAAc,KAC1DC,iBAAkByB,EAE1B,CE/RM,SAAUh3B,GAAOi3B,GACnBA,EAAWC,KAAKD,GAEhB,IADA,IAAMt1C,EAAO,GACJtH,EAAI,EAAGA,EAAI48C,EAAS78C,OAAQC,IACjCsH,EAAKxF,KAAK86C,EAAS/6C,WAAW7B,IAElC,OAAOiI,EAAAA,EAAAA,IAASX,EACpB,CAEM,SAAUse,GAAOte,GACnBA,GAAOW,EAAAA,EAAAA,IAASX,GAEhB,IADA,IAAIs1C,EAAW,GACN58C,EAAI,EAAGA,EAAIsH,EAAKvH,OAAQC,IAC7B48C,GAAY16C,OAAOC,aAAamF,EAAKtH,IAEzC,OAAO88C,KAAKF,EAChB,C,cCaA,SAASG,GAAKC,EAAmBtL,GAChB,MAATA,IAAiBA,EAAQ,GAC7B,IAAMhwC,EAAqB,GAErB+hB,EAAU/hB,EAAO+hB,QAavB,OAXiB,SAAXw5B,EAAqB5yB,EAAiBqnB,GACxCjuB,EAAQ9iB,KAAK0pB,GAAK,SAAU1hB,GACpB+oC,EAAQ,GAAKjxC,MAAMG,QAAQ+H,GAC3Bs0C,EAASt0C,EAAK+oC,EAAQ,GAEvBhwC,EAAOI,KAAK6G,EAEnB,GACJ,CAEAs0C,CAASD,EAAOtL,GACThwC,CACX,CAmGM,SAAUw7C,GAAwBj7C,GACvC,OALK,SAAuBM,GAC5B,IAAI46C,EAAM,EACV,OAAO,kBAAM56C,EAAE46C,IAAM,CACtB,CAEQC,CAzFF,SAA4Bn7C,GACjC,IAAIk7C,EAAM,EACV,SAASE,IAAQ,OAAQp7C,EAAMk7C,MAAU,EAAKl7C,EAAMk7C,IAAQ,CAM5D,IAHA,IAAIG,EAAeD,IACflxC,EAAQ,EACRwQ,EAAM,CAAC,EAAG,GACL3c,EAAI,EAAGA,EAAIs9C,EAAct9C,IACjC2c,EAAI7a,KAAKqK,GAASkxC,KAInB,IAAIE,EAAOF,IACPG,EAAcL,EAClBA,GAAOI,EAEP,IAAIE,EAAa,EACbC,EAAc,EAClB,SAASC,IAOR,OANkB,GAAdF,IAGHC,EAAeA,GAAe,EAAKz7C,EAAMk7C,KACzCM,EAAa,GAENC,KAAiBD,EAAc,CACxC,CAUA,IARA,IACMG,EAAOhzC,KAAAA,IAAAA,EADH,IAEJizC,EAAOD,IAAS,EAChBE,EAAOD,GAAQ,EACfE,EAAOH,EAAO,EAGhB/M,EAAW,EACN7wC,EAAI,EAAGA,EARN,GAQaA,IAAK6wC,EAAYA,GAAY,EAAK8M,IAKzD,IAHA,IAAIK,EAAU,GACVC,EAAM,EACNC,EAAQN,IACC,CAIZ,IAHA,IAAIj+C,EAAQiL,KAAKomB,QAAS6f,EAAWoN,EAAM,GAAK9xC,EAAS,GAAK+xC,GAC1D3zC,EAAQ,EACRC,EAAM8yC,EACH9yC,EAAMD,EAAQ,GAAG,CACvB,IAAIiH,EAAOjH,EAAQC,IAAS,EACxB7K,EAAQgd,EAAInL,GACfhH,EAAMgH,EAENjH,EAAQiH,C,CAGV,GAAa,GAATjH,EAAY,MAChByzC,EAAQl8C,KAAKyI,GAGb,IAFA,IAAI3F,EAAIq5C,EAAMrzC,KAAKomB,MAAMktB,EAAQvhC,EAAIpS,GAAW4B,GAC5CzB,EAAIuzC,EAAMrzC,KAAKomB,MAAMktB,EAAQvhC,EAAIpS,EAAM,GAAK4B,GAAS,EAC9B,KAAlBvH,EAAI8F,GAAKmzC,IACjBhN,EAAYA,GAAY,EAAKkN,EAAOJ,IACpC/4C,EAAKA,GAAK,EAAKm5C,EACfrzC,EAAKA,GAAK,EAAKqzC,EAAO,EAEvB,KAAOn5C,GAAK8F,EAAIozC,GACfjN,EAAYA,EAAWgN,EAAUhN,GAAY,EAAMkN,IAAS,EAAMJ,IAClE/4C,EAAKA,GAAK,EAAKi5C,EACfnzC,GAAMA,EAAImzC,IAAS,EAAKA,EAAO,EAEhCI,EAAMr5C,EACNs5C,EAAQ,EAAIxzC,EAAI9F,C,CAEjB,IAAIouC,EAASsK,EAAe,EAC5B,OAAOU,EAAQttB,KAAI,SAAA5Z,GAClB,OAAQA,EAAIk8B,GACX,KAAK,EAAG,OAAOA,EAAS,OAAY/wC,EAAMu7C,MAAkB,GAAOv7C,EAAMu7C,MAAkB,EAAKv7C,EAAMu7C,MACtG,KAAK,EAAG,OAAOxK,EAAS,KAAU/wC,EAAMu7C,MAAkB,EAAKv7C,EAAMu7C,MACrE,KAAK,EAAG,OAAOxK,EAAS/wC,EAAMu7C,KAC9B,QAAS,OAAO1mC,EAAI,EAEtB,GACD,CASqBqnC,CAAkBl8C,GACvC,CAGM,SAAUmoC,GAAOpqC,GACtB,OAAY,EAAJA,GAAWA,GAAK,EAAMA,GAAK,CACpC,CAQA,SAASo+C,GAAexlC,EAAWoJ,GAElC,IADA,IAAIzf,EAAI9B,MAAMmY,GACL5Y,EAAI,EAAG8W,GAAK,EAAG9W,EAAI4Y,EAAG5Y,IAAKuC,EAAEvC,GAAK8W,GAAK,EAAIkL,IACpD,OAAOzf,CACR,CAEA,SAAS87C,GAAYzlC,EAAWoJ,GAE/B,IADA,IAAIzf,EAAI9B,MAAMmY,GACL5Y,EAAI,EAAG8W,EAAI,EAAG9W,EAAI4Y,EAAG5Y,IAAKuC,EAAEvC,GAAK8W,GAAKszB,GAAOpoB,KACtD,OAAOzf,CACR,CAEM,SAAU+7C,GAAkBt8B,EAAgBu8B,GAK9C,IAJA,IAAIh8C,EAAI67C,GAAep8B,IAAQA,GAC3BpJ,EAAIoJ,IACJw8B,EAAKJ,GAAexlC,EAAGoJ,GACvBy8B,EAtBR,SAAqB7lC,EAAWoJ,GAE/B,IADA,IAAIzf,EAAI9B,MAAMmY,GACL5Y,EAAI,EAAGA,EAAI4Y,EAAG5Y,IAAKuC,EAAEvC,GAAK,EAAIgiB,IACvC,OAAOzf,CACR,CAkBam8C,CAAY9lC,EAAGoJ,GACfhiB,EAAI,EAAGA,EAAI4Y,EAAG5Y,IACnB,IAAK,IAAIsF,EAAI,EAAGA,EAAIm5C,EAAGz+C,GAAIsF,IACvB/C,EAAET,KAAK08C,EAAGx+C,GAAKsF,GAGvB,OAAOi5C,EAASh8C,EAAEmuB,KAAI,SAAA5Z,GAAC,OAAIynC,EAAOznC,EAAE,IAAIvU,CAC5C,CA8BA,SAASo8C,GAAgB/lC,EAAW9M,EAAWkW,GAE3C,IADA,IAAInJ,EAAIpY,MAAMmY,GAAG8R,UAAK/I,GAAW+O,KAAI,iBAAM,EAAE,IACpC1wB,EAAI,EAAGA,EAAI8L,EAAG9L,IACnBq+C,GAAYzlC,EAAGoJ,GAAMyB,SAAQ,SAAC3M,EAAGxR,GAAC,OAAKuT,EAAEvT,GAAGxD,KAAKgV,EAAE,IAEvD,OAAO+B,CACX,CAGA,SAAS+lC,GAAkB9yC,EAAWkW,GACrC,IAAI68B,EAAK,EAAI78B,IACT88B,EAAK98B,IACLy8B,EAtBC,SAAqCz8B,GAE1C,IADA,IAAIzf,EAAI,KACK,CACZ,IAAIvC,EAAIgiB,IACR,GAAS,GAALhiB,EAAQ,MACZuC,EAAET,KAAK9B,E,CAER,OAAOuC,CACR,CAcUw8C,CAA2B/8B,GAEpC,OAAO+6B,GADC4B,GAAgBF,EAAG1+C,OAAQ,EAAE+L,EAAGkW,GAC1B0O,KAAI,SAACnuB,EAAGvC,GACpB,IAAM8W,EAAIvU,EAAE,GAAIy8C,EAAKz8C,EAAE/B,MAAM,GAG9B,OAAOC,MAAMg+C,EAAGz+C,IAAI0qB,UAAK/I,GAAW+O,KAAI,SAACnX,EAAGjU,GAC3C,IAAI25C,EAAO35C,EAAIw5C,EACf,MAAO,CAAChoC,EAAIxR,EAAIu5C,EAAIG,EAAGtuB,KAAI,SAAA3Z,GAAC,OAAIA,EAAIkoC,CAAI,IACzC,GACD,IACD,CAEA,SAASC,GAAuBpzC,EAAWkW,GAG1C,OADQ28B,GADA,EAAI38B,IACe,EAAElW,EAAGkW,GACvB0O,KAAI,SAAAnuB,GAAC,MAAI,CAACA,EAAE,GAAIA,EAAE/B,MAAM,GAAG,GACrC,CCvNA,IAAMiE,GCEKy4C,GAAwBv3B,GAAO,q6cDIpCw5B,GAAQ,IAAIC,IAAId,GAAkB75C,KAClC46C,GAAU,IAAID,IAAId,GAAkB75C,KACpC66C,GDyJA,SAA0Bt9B,GAE/B,IADA,IAAIpU,EAAM,KACG,CACZ,IAAI9B,EAAIkW,IACR,GAAS,GAALlW,EAAQ,MACZ8B,EAAI9L,KAAK88C,GAAkB9yC,EAAGkW,G,CAE/B,OAAa,CACZ,IAAIlW,EAAIkW,IAAS,EACjB,GAAIlW,EAAI,EAAG,MACX8B,EAAI9L,KAAKo9C,GAAuBpzC,EAAGkW,G,CAEpC,OAxJD,SAA6Fg7B,GAEzF,IADA,IAAMt7C,EAAqC,CAAC,EACnC1B,EAAI,EAAGA,EAAIg9C,EAAMj9C,OAAQC,IAAK,CACnC,IAAML,EAAQq9C,EAAMh9C,GACpB0B,EAAO/B,EAAM,IAAMA,EAAM,E,CAE7B,OAAO+B,CACX,CAiJQ69C,CAAmCxC,GAAKnvC,GAChD,CCtKe4xC,CAAgB/6C,IACzBg7C,GD6NA,SAA0Bz9B,GAC/B,IAAI09B,EAASpB,GAAkBt8B,GAAM2c,MAAK,SAAC/5B,EAAG8F,GAAC,OAAK9F,EAAI8F,CAAC,IACzD,OACA,SAASi1C,IACR,IAAIC,EAAW,GACf,OAAa,CACZ,IAAIphB,EAAO8f,GAAkBt8B,EAAM09B,GACnC,GAAmB,GAAflhB,EAAKz+B,OAAa,MACtB6/C,EAAS99C,KAAK,CAACR,IAAK,IAAI89C,IAAI5gB,GAAO8W,KAAMqK,K,CAExCC,EAASjhB,MAAK,SAAC/5B,EAAG8F,GAAC,OAAKA,EAAEpJ,IAAIsL,KAAOhI,EAAEtD,IAAIsL,IAAI,IAChD,IAAIorB,EAAOhW,IAOX,MAAO,CAAC49B,SAAAA,EAAUC,MANN7nB,EAAO,EAMM8nB,QAJJ,GADrB9nB,EAAQA,EAAO,EAAG,IAKa+nB,KAFZ,IADnB/nB,IAAS,GAG4BuJ,MADjB,GAARvJ,EAEd,CAjBO2nB,EAkBR,CCjPmBK,CAAgBv7C,IAOnC,SAASw7C,GAAW1/C,GAChB,OAAO2/C,EAAAA,GAAAA,IAAiB3/C,EAC5B,CAEA,SAAS4/C,GAAYC,GACjB,OAAOA,EAAIne,QAAO,SAAAoe,GAAE,OAAU,OAANA,CAAY,GACxC,CAEM,SAAUC,GAAyB//C,GAAY,IACnB,EADmB,WAClCA,EAAKkhB,MAAM,MAAI,IAAjC,IAAK,EAAL,qBAAmC,KAA1B8+B,EAAK,QACTH,EAAMH,GAAWM,GACrB,IACC,IAAK,IAAIvgD,EAAIogD,EAAIl7B,YAdD,IAc2B,EAAGllB,GAAK,EAAGA,IACrD,GAfe,KAeXogD,EAAIpgD,GACP,MAAM,IAAIa,MAAM,oCAGlB,GAAIu/C,EAAIrgD,QAAU,GAAKqgD,EAAII,OAAM,SAAAH,GAAE,OAAIA,EAAK,GAAI,KApBpC,KAoByCD,EAAI,IApB7C,KAoB8DA,EAAI,GAC7E,MAAM,IAAIv/C,MAAM,0B,CAEhB,MAAO4/C,GACR,MAAM,IAAI5/C,MAAM,kBAAD,OAAmB0/C,EAAK,cAAME,EAAI32B,S,EAElD,+BACD,OAAOvpB,CACR,CAEM,SAAUmgD,GAAcngD,GAC7B,OAAO+/C,GAGR,SAAmB//C,EAAcogD,GAChC,IAAI/+B,EAAQq+B,GAAW1/C,GAAMgvC,UACzB1tB,EAAS,GACb,KAAOD,EAAM7hB,QAAQ,CACpB,IAAI6gD,EAAQC,GAAuBj/B,GACnC,GAAIg/B,EACH/+B,EAAO/f,KAAI,MAAX+f,GAAM,OAAS8+B,EAAaC,SAD7B,CAIA,IAAIP,EAAKz+B,EAAM8d,MACf,GAAIyf,GAAM2B,IAAIT,GACbx+B,EAAO/f,KAAKu+C,QAGb,IAAIhB,GAAQyB,IAAIT,GAAhB,CAGA,IAAID,EAAMd,GAAOe,GACjB,IAAID,EAIJ,MAAM,IAAIv/C,MAAM,2BAAD,OAA4Bw/C,EAAG70C,SAAS,IAAIyZ,gBAH1DpD,EAAO/f,KAAI,MAAX+f,GAAM,OAASu+B,G,GAKjB,OAAOE,IAGKzoC,EAHwB3V,OAAO6+C,cAAa,MAApB7+C,OAAwB2f,GAIlDhK,EAAEo7B,UAAU,SADvB,IAAap7B,CAFb,CA5BiCo7B,CAAU1yC,EAAM4/C,IACjD,CAiCA,SAASU,GAAuBT,EAAoBY,G,MAE/CJ,EACAK,EAFA3L,EAAOmK,GAGPyB,EAAQ,GACR/D,EAAMiD,EAAIrgD,OACVihD,IAAOA,EAAMjhD,OAAS,GAC1B,IAD6B,iBAE5B,IAAIsgD,EAAKD,IAAMjD,GAEf,KADA7H,EAA6C,QAAtC,EAAAA,EAAKsK,SAASuB,MAAK,SAAArqC,GAAC,OAAIA,EAAExV,IAAIw/C,IAAIT,EAAG,WAAC,eAAE/K,MACpC,cACX,GAAIA,EAAKyK,KACRkB,EAAQZ,OACF,GAAI/K,EAAK/T,OACX8e,IAAOY,EAAO,cAEnBC,EAAMp/C,KAAKu+C,GACP/K,EAAKwK,OACRoB,EAAMp/C,KAAK,OACPq7C,EAAM,GAAqB,OAAhBiD,EAAIjD,EAAM,IAAcA,KAEpC7H,EAAKuK,QACRe,EAAQM,EAAM1gD,QACI,GAAd80C,EAAKuK,OAAYe,EAAMQ,OAAO,EAAG,GACjCJ,GAAOA,EAAMl/C,KAAI,MAAVk/C,GAAK,OAASZ,EAAI5/C,MAAM28C,GAAK5N,YACxC6Q,EAAIrgD,OAASo9C,EACb,EAnBKA,GAAK,kBAOQ,K,CAcpB,OAAOyD,CACR,CErIA,IAAMh5C,GAAS,IAAIC,EAAAA,GAAOi0B,IAIpBulB,GAAQ,IAAIvgD,WAAW,IAG7B,SAASwgD,GAAeC,GACpB,GAAoB,IAAhBA,EAAKxhD,OAAgB,MAAM,IAAIc,MAAM,qCACzC,OAAO0gD,CACX,CAEA,SAASC,GAAajhD,GAClB,IAAM0B,GAAQkhB,EAAAA,GAAAA,IAAYu9B,GAAcngD,IAClCupC,EAA2B,GAEjC,GAAoB,IAAhBvpC,EAAKR,OAAgB,OAAO+pC,EAGhC,IADA,IAAI2X,EAAO,EACFzhD,EAAI,EAAGA,EAAIiC,EAAMlC,OAAQC,IAAK,CAIzB,KAHAiC,EAAMjC,KAIZ8pC,EAAMhoC,KAAKw/C,GAAer/C,EAAMzB,MAAMihD,EAAMzhD,KAC5CyhD,EAAOzhD,EAAI,E,CAKnB,GAAIyhD,GAAQx/C,EAAMlC,OAAU,MAAM,IAAIc,MAAM,qCAG5C,OADAipC,EAAMhoC,KAAKw/C,GAAer/C,EAAMzB,MAAMihD,KAC/B3X,CACX,CAMM,SAAU4X,GAAYnhD,GACxB,IACI,OAAsC,IAA9BihD,GAAajhD,GAAMR,MACd,CAAf,MAAO6mB,GAAQ,CACjB,OAAO,CACX,CAEM,SAAU+6B,GAASphD,GAEA,kBAAVA,GACPqH,GAAOyb,mBAAmB,iCAAkC,OAAQ9iB,GAMxE,IAHA,IAAImB,EAA8B2/C,GAE5BvX,EAAQ0X,GAAajhD,GACpBupC,EAAM/pC,QACT2B,GAASsiB,EAAAA,EAAAA,IAAUN,EAAAA,EAAAA,IAAO,CAAChiB,GAAQsiB,EAAAA,EAAAA,GAAU8lB,EAAMpK,UAGvD,OAAO3b,EAAAA,EAAAA,IAAQriB,EACnB,CAEM,SAAUkgD,GAAUrhD,GACtB,OAAOwjB,EAAAA,EAAAA,KAAQL,EAAAA,EAAAA,IAAO89B,GAAajhD,GAAMmwB,KAAI,SAAC6wB,GAE1C,GAAIA,EAAKxhD,OAAS,GACd,MAAM,IAAIc,MAAM,sDAGpB,IAAMoB,EAAQ,IAAInB,WAAWygD,EAAKxhD,OAAS,GAG3C,OAFAkC,EAAMX,IAAIigD,EAAM,GAChBt/C,EAAM,GAAKA,EAAMlC,OAAS,EACnBkC,CAEX,MAAO,IACX,CAvEAo/C,GAAM32B,KAAK,GCXJ,I,uSCQD,SAAgBm3B,GAAOC,EAActrB,G,8IA0BtB,OAzBF,MAAXA,IAAmBA,EAAU,CAAC,GAE5BurB,EAAuB,CACzBC,OAASxrB,EAAQwrB,QAAU,MAC3BC,QAAUzrB,EAAQyrB,SAAW,CAAC,EAC9BC,KAAO1rB,EAAQ0rB,WAAQvgC,IAGI,IAA3B6U,EAAQ2rB,iBACRJ,EAAQlmC,KAAoB,OAC5BkmC,EAAQK,MAAsB,WAC9BL,EAAQM,YAAkC,cAC1CN,EAAQO,SAA4B,SACpCP,EAAQQ,SAAW,UAGK,MAAxB/rB,EAAQgsB,gBACFC,EAAOjsB,EAAQgsB,cACZ3mC,OAAQkmC,EAAQlmC,KAAqB4mC,EAAK5mC,MAC/C4mC,EAAKL,QAASL,EAAQK,MAAuBK,EAAKL,OAClDK,EAAKJ,cAAeN,EAAQM,YAAmCI,EAAKJ,aACpEI,EAAKH,WAAYP,EAAQO,SAA6BG,EAAKH,UAC3DG,EAAKF,WAAYR,EAAQQ,SAAWE,EAAKF,WAChD,SAEsBG,MAAMZ,EAAMC,GAAQ,OAC9B,OADPY,EAAW,EAAH,eACKA,EAASC,cAAa,QAWxC,OAXKV,EAAO,EAAH,KAEJD,EAAwC,CAAC,EAC3CU,EAASV,QAAQx+B,QACjBk/B,EAASV,QAAQx+B,SAAQ,SAAC9jB,EAAO+D,GAC7Bu+C,EAAQv+C,EAAIqhB,eAAiBplB,CACjC,IAE8BgjD,EAASV,QAAUzjB,OAAS/a,SAAQ,SAAC/f,GAC/Du+C,EAAQv+C,EAAIqhB,eAAiB49B,EAASV,QAAQvrB,IAAIhzB,EACtD,IACH,kBAEM,CACHu+C,QAASA,EACTY,WAAYF,EAASG,OACrBC,cAAeJ,EAASK,WACxBd,MAAMj6C,EAAAA,EAAAA,IAAS,IAAInH,WAAWohD,MACjC,2C,4SC5CCt6C,GAAS,IAAIC,EAAAA,GFTI,aEavB,SAASo7C,GAAQC,GACb,OAAO,IAAIp6B,SAAQ,SAACE,GAChB4b,WAAW5b,EAASk6B,EACxB,GACJ,CAEA,SAASC,GAAQxjD,EAAYsjB,GACzB,GAAa,MAATtjB,EAAiB,OAAO,KAE5B,GAAsB,kBAAXA,EAAuB,OAAOA,EAEzC,IAAI8/B,EAAAA,EAAAA,IAAY9/B,GAAQ,CACpB,GAAIsjB,IAAgC,SAAvBA,EAAKxB,MAAM,KAAK,IAA+C,qBAA9BwB,EAAKxB,MAAM,KAAK,GAAG2hC,QAC7D,IACI,OAAOC,EAAAA,GAAAA,IAAa1jD,EACP,CAAf,MAAOinB,GAAQ,CAErB,OAAO7C,EAAAA,EAAAA,IAAQpkB,E,CAGnB,OAAOA,CACX,CA8DM,SAAU2jD,GAA2BC,EAAqCrB,EAAmBsB,GAG/F,IAAMC,EAAuC,kBAAhBF,GAAwD,MAA5BA,EAAWG,cAAyBH,EAAWG,cAAe,GACvH97C,GAAO+7C,eAAgBF,EAAe,GAAMA,EAAe,IAAO,EAC9D,oCAAqC,2BAA4BA,GAErE,IAAMG,EAA4C,kBAAhBL,EAA4BA,EAAWK,iBAAkB,KACrFC,EAAgD,kBAAhBN,GAAwE,kBAArCA,EAAWM,qBAAsCN,EAAWM,qBAAsB,IAC3Jj8C,GAAO+7C,eAAgBE,EAAuB,GAAMA,EAAuB,IAAO,EAC9E,4CAA6C,kCAAmCA,GAEpF,IAAMC,EAA4C,kBAAhBP,KAA+BA,EAAWO,iBAEtE7B,EAAqC,CAAC,EAExCnH,EAAc,KAGZtkB,EAAmB,CACrBwrB,OAAQ,OAGR+B,GAAW,EAEXC,EAAU,KAEd,GAA2B,kBAAhBT,EACPzI,EAAMyI,OAEH,GAA2B,kBAAhBA,EAA0B,CAWxC,GAVkB,MAAdA,GAAwC,MAAlBA,EAAWzI,KACjClzC,GAAOyb,mBAAmB,cAAe,iBAAkBkgC,GAG/DzI,EAAMyI,EAAWzI,IAEkB,kBAAxByI,EAAWS,SAAyBT,EAAWS,QAAU,IAChEA,EAAUT,EAAWS,SAGrBT,EAAWtB,QACX,IAAK,IAAMv+C,KAAO6/C,EAAWtB,QACzBA,EAAQv+C,EAAIqhB,eAAiB,CAAErhB,IAAKA,EAAK/D,MAAOuC,OAAOqhD,EAAWtB,QAAQv+C,KACtE,CAAC,gBAAiB,qBAAqBilB,QAAQjlB,EAAIqhB,gBAAkB,IACrEg/B,GAAW,GAOvB,GAFAvtB,EAAQytB,YAAcV,EAAWU,UAEV,MAAnBV,EAAWW,MAAuC,MAAvBX,EAAW7T,SAAkB,CAC5B,WAAxBoL,EAAIv3B,UAAU,EAAG,KAA8D,IAA3CggC,EAAWY,6BAC/Cv8C,GAAOY,WACH,mDACAX,EAAAA,GAAAA,OAAAA,iBACA,CAAEg5B,SAAU,MAAOia,IAAKA,EAAKoJ,KAAMX,EAAWW,KAAMxU,SAAU,eAItE,IAAM0U,EAAgBb,EAAWW,KAAO,IAAMX,EAAW7T,SACzDuS,EAAuB,cAAI,CACvBv+C,IAAK,gBACL/D,MAAO,SAAW0kD,IAAalhC,EAAAA,GAAAA,IAAYihC,I,CAIlB,MAA7Bb,EAAWpB,iBACX3rB,EAAQ2rB,iBAAmBoB,EAAWpB,gBAGX,MAA3BoB,EAAWf,eACXhsB,EAAQgsB,cAAe55B,EAAAA,EAAAA,IAAY26B,EAAWf,c,CAItD,IAzFe7iD,EAyFT2kD,EAAS,IAAIzhC,OAAO,kCAAmC,KACvD0hC,EAAczJ,EAAOA,EAAI13B,MAAMkhC,GAAS,KAC9C,GAAIC,EACA,IACI,IAAM5B,EAAW,CACbE,WAAY,IACZE,cAAe,KACfd,QAAS,CAAE,eAAiBsC,EAAU,IAAM,cAC5CrC,KAAOqC,EAAU,GAAKC,GAAaD,EAAU,KAjG1C5kD,EAiGyD4kD,EAAU,IAhG3EphC,EAAAA,GAAAA,IAAYxjB,EAAM8L,QAAQ,yBAAyB,SAACsd,EAAKU,GAC5D,OAAOvnB,OAAOC,aAAavC,SAAS6pB,EAAM,IAC9C,OAiGY/nB,EAAwBihD,EAAST,KAIrC,OAHIsB,IACA9hD,EAAS8hD,EAAYb,EAAST,KAAMS,IAEjC75B,QAAQE,QAAoBtnB,E,CAErC,MAAOklB,GACLhf,GAAOY,WAAW,4BAA6BX,EAAAA,GAAAA,OAAAA,aAA4B,CACvEq6C,KAAMiB,GAAQoB,EAAU,GAAIA,EAAU,IACtC39B,MAAOA,EACP69B,YAAa,KACbC,cAAe,MACf5J,IAAKA,G,CAKboH,IACA1rB,EAAQwrB,OAAS,OACjBxrB,EAAQ0rB,KAAOA,EACgB,MAA3BD,EAAQ,kBACRA,EAAQ,gBAAkB,CAAEv+C,IAAK,eAAgB/D,MAAO,6BAE3B,MAA7BsiD,EAAQ,oBACRA,EAAQ,kBAAoB,CAAEv+C,IAAK,iBAAkB/D,MAAOuC,OAAOggD,EAAKniD,WAIhF,IAAM4kD,EAA2C,CAAC,EAClD/gD,OAAO46B,KAAKyjB,GAASx+B,SAAQ,SAAC/f,GAC1B,IAAMkhD,EAAS3C,EAAQv+C,GACvBihD,EAAYC,EAAOlhD,KAAOkhD,EAAOjlD,KACrC,IACA62B,EAAQyrB,QAAU0C,EAElB,IAAME,EAAkB,WACpB,IAAIC,EAAsB,KAuB1B,MAAO,CAAEC,QAtBuB,IAAIj8B,SAAQ,SAASE,EAAS2X,GACtDqjB,IACAc,EAAQlgB,YAAW,WACF,MAATkgB,IACJA,EAAQ,KAERnkB,EAAO/4B,GAAOg5B,UAAU,UAAW/4B,EAAAA,GAAAA,OAAAA,QAAuB,CACtD48C,YAAatB,GAAQ3sB,EAAQ0rB,KAAMyC,EAAY,iBAC/CD,cAAeluB,EAAQwrB,OACvBgC,QAASA,EACTlJ,IAAKA,KAEb,GAAGkJ,GAEX,IAQkBgB,OANH,WACE,MAATF,IACJG,aAAaH,GACbA,EAAQ,KACZ,EAGJ,CAzBwB,GA2BlBI,EAAgB,W,wJAETC,EAAU,EAAC,YAAEA,EAAU1B,GAAY,iBAIzB,OAHXd,EAA2B,KAAI,kBAGdd,GAAO/G,EAAKtkB,GAAQ,OAA7B,GAARmsB,EAAW,EAAH,OAEJwC,EAAU1B,GAAY,oBACM,MAAxBd,EAASE,YAA8C,MAAxBF,EAASE,WAAkB,iBAEV,GAA1CuC,EAAWzC,EAASV,QAAQmD,UAAY,GACvB,QAAnB5uB,EAAQwrB,SAAoBoD,EAAShiC,MAAM,WAAU,iBACrB,OAAhC03B,EAAM6H,EAASV,QAAQmD,SAAS,2DAIL,MAAxBzC,EAASE,WAAkB,iBAEf,GAAfwC,GAAW,GACXzB,EAAkB,CAAF,gBACL,OADK,UACCA,EAAiBuB,EAASrK,GAAI,QAA/CuK,EAAW,EAAH,iBAGRA,EAAU,CAAF,gBAWR,OAVIC,EAAQ,EAENC,EAAa5C,EAASV,QAAQ,eAEhCqD,EADuB,kBAAhBC,GAA4BA,EAAWniC,MAAM,iBACrB,IAAvBxjB,SAAS2lD,GAET1B,EAAuBjkD,SAASsC,OAAO0I,KAAK46C,SAAW56C,KAAK4B,IAAI,EAAG24C,KAG/E,UACMlC,GAAQqC,GAAM,iGAQhB,OADhB3C,EAAiB,KAAOA,YAEpBkC,EAAeG,SACfp9C,GAAOY,WAAW,mBAAoBX,EAAAA,GAAAA,OAAAA,aAA4B,CAC9D48C,YAAatB,GAAQ3sB,EAAQ0rB,KAAMyC,EAAY,iBAC/CD,cAAeluB,EAAQwrB,OACvByD,YAAa,EAAF,GACX3K,IAAKA,KAEZ,QAkBJ,GAdGoH,EAAOS,EAAST,KAEhB6B,GAAoC,MAAxBpB,EAASE,WACrBX,EAAO,MACC4B,IAAqBnB,EAASE,WAAa,KAAOF,EAASE,YAAc,OACjFgC,EAAeG,SACfp9C,GAAOY,WAAW,eAAgBX,EAAAA,GAAAA,OAAAA,aAA4B,CAC1Di7C,OAAQH,EAASE,WACjBZ,QAASU,EAASV,QAClBC,KAAMiB,GAAQjB,EAAQS,EAASV,QAAWU,EAASV,QAAQ,gBAAiB,MAC5EwC,YAAatB,GAAQ3sB,EAAQ0rB,KAAMyC,EAAY,iBAC/CD,cAAeluB,EAAQwrB,OACvBlH,IAAKA,MAIT0I,EAAa,CAAF,gBAEQ,OAFR,oBAEcA,EAAYtB,EAAMS,GAAS,QACxB,OADlBjhD,EAAS,EAAH,KACZmjD,EAAeG,SAAS,kBACjBtjD,GAAM,wCAIT,KAAMgkD,eAAiBP,EAAU1B,GAAY,iBAC1B,GAAf4B,GAAW,GACXzB,EAAkB,CAAF,gBACL,OADK,UACCA,EAAiBuB,EAASrK,GAAI,QAA/CuK,EAAW,EAAH,iBAGRA,EAAU,CAAF,gBAGR,OAFMrB,EAAUH,EAAuBjkD,SAASsC,OAAO0I,KAAK46C,SAAW56C,KAAK4B,IAAI,EAAG24C,KACnF,UACMlC,GAAQe,GAAQ,+CAK9Ba,EAAeG,SACfp9C,GAAOY,WAAW,4BAA6BX,EAAAA,GAAAA,OAAAA,aAA4B,CACvEq6C,KAAMiB,GAAQjB,EAAQS,EAASV,QAAWU,EAASV,QAAQ,gBAAiB,MAC5Er7B,MAAO,EAAF,GACL69B,YAAatB,GAAQ3sB,EAAQ0rB,KAAMyC,EAAY,iBAC/CD,cAAeluB,EAAQwrB,OACvBlH,IAAKA,IACN,QAOX,OAHA+J,EAAeG,SAGf,kBACoB9C,GAAK,QA1GiBiD,IAAS,gDA6GhDv9C,GAAOY,WAAW,kBAAmBX,EAAAA,GAAAA,OAAAA,aAA4B,CACpE48C,YAAatB,GAAQ3sB,EAAQ0rB,KAAMyC,EAAY,iBAC/CD,cAAeluB,EAAQwrB,OACvBlH,IAAKA,KACP,iE,CAnHgB,GAsHtB,OAAOhyB,QAAQ68B,KAAK,CAAEd,EAAeE,QAASG,GAClD,CAEM,SAAUU,GAAUrC,EAAqChN,EAAeiN,GAC1E,IAuBItB,EAAmB,KACvB,GAAY,MAAR3L,EAAc,CACd2L,GAAO/+B,EAAAA,GAAAA,IAAYozB,GAGnB,IAAMsP,EAAkD,kBAAhBtC,EAA6B,CAAEzI,IAAKyI,IAAe36B,EAAAA,EAAAA,IAAY26B,GACvG,GAAIsC,EAAQ5D,QAC6G,IAA7Fr+C,OAAO46B,KAAKqnB,EAAQ5D,SAAShgB,QAAO,SAAC9zB,GAAC,MAA0B,iBAApBA,EAAE4W,aAAgC,IAAGhlB,SAErG8lD,EAAQ5D,SAAUr5B,EAAAA,EAAAA,IAAYi9B,EAAQ5D,SACtC4D,EAAQ5D,QAAQ,gBAAkB,yBAGtC4D,EAAQ5D,QAAU,CAAE,eAAgB,oBAExCsB,EAAasC,C,CAGjB,OAAOvC,GAAgBC,EAAYrB,GAzCb,SAACviD,EAAmBgjD,GACtC,IAAIjhD,EAAc,KAClB,GAAa,MAAT/B,EACA,IACI+B,EAAS0wB,KAAKC,OAAMgxB,EAAAA,GAAAA,IAAa1jD,G,CACnC,MAAOinB,GACLhf,GAAOY,WAAW,eAAgBX,EAAAA,GAAAA,OAAAA,aAA4B,CAC1Dq6C,KAAMviD,EACNinB,MAAOA,G,CASnB,OAJI48B,IACA9hD,EAAS8hD,EAAY9hD,EAAQihD,IAG1BjhD,CACX,GAwBJ,CAEM,SAAUokD,GAAQnM,EAAwBnjB,GAO5C,OANKA,IAAWA,EAAU,CAAC,GAEN,OADrBA,GAAU5N,EAAAA,EAAAA,IAAY4N,IACVxF,QAAiBwF,EAAQxF,MAAQ,GACtB,MAAnBwF,EAAQuvB,UAAmBvvB,EAAQuvB,QAAU,KACzB,MAApBvvB,EAAQwvB,WAAoBxvB,EAAQwvB,SAAW,KAE5C,IAAIl9B,SAAQ,SAASE,EAAS2X,GAEjC,IAAImkB,EAAsB,KACtBtgB,GAAgB,EAGdwgB,EAAS,WACX,OAAIxgB,IACJA,GAAO,EACHsgB,GAASG,aAAaH,IACnB,EACX,EAEItuB,EAAQwtB,UACRc,EAAQlgB,YAAW,WACXogB,KAAYrkB,EAAO,IAAI9/B,MAAM,WACrC,GAAG21B,EAAQwtB,UAGf,IAAMiC,EAAazvB,EAAQyvB,WAEvBd,EAAU,GACd,SAAS5jB,IACL,OAAOoY,IAAO1wB,MAAK,SAASvnB,GAGxB,QAAeigB,IAAXjgB,EACIsjD,KAAYh8B,EAAQtnB,QAErB,GAAI80B,EAAQ0vB,SACf1vB,EAAQ0vB,SAAS3hB,KAAK,OAAQhD,QAE3B,GAAI/K,EAAQ2vB,UACf3vB,EAAQ2vB,UAAU5hB,KAAK,QAAShD,QAG7B,IAAKiD,EAAM,CAEd,KADA2gB,EACcc,EAEV,YADIjB,KAAYrkB,EAAO,IAAI9/B,MAAM,yBAIrC,IAAImjD,EAAUxtB,EAAQwvB,SAAWpmD,SAASsC,OAAO0I,KAAK46C,SAAW56C,KAAK4B,IAAI,EAAG24C,KACzEnB,EAAUxtB,EAAQxF,QAASgzB,EAAUxtB,EAAQxF,OAC7CgzB,EAAUxtB,EAAQuvB,UAAW/B,EAAUxtB,EAAQuvB,SAEnDnhB,WAAWrD,EAAOyiB,E,CAGtB,OAAO,IACX,IAAG,SAASp9B,GACJo+B,KAAYrkB,EAAO/Z,EAC3B,GACJ,CACA2a,EACJ,GACJ,C,2BC5dazF,GAAU,kBCYjBl0B,GAAS,IAAIC,EAAAA,GAAOi0B,IAiBbsqB,GAAS,WAGlB,6BACIziD,KAAK0iD,QAAU1iD,KAAK2iD,mBACxB,CAucC,OAvcA,yCAED,WAAiB,WACPD,EAA6B,CAAC,EAE9Bj9B,EAAUzlB,KAAKylB,QAAQiZ,KAAK1+B,MAC5B4iD,EAAY5iD,KAAK4iD,UAAUlkB,KAAK1+B,MAChC6jB,EAAW7jB,KAAK6jB,SAAS6a,KAAK1+B,MAC9B2D,EAAO3D,KAAK2D,KAAK+6B,KAAK1+B,MACtBoE,EAAOpE,KAAKoE,KAAKs6B,KAAK1+B,MACtBsD,EAAMtD,KAAKsD,IAAIo7B,KAAK1+B,MACpByF,EAASzF,KAAKyF,OAAOi5B,KAAK1+B,MAC1Bsf,EAAOtf,KAAKsf,KAAKof,KAAK1+B,MAmI5B,OA/HA0iD,EAAQv+B,YAAc,CAClB/f,KAAMA,EAENkb,KAAMA,EACN+b,WAAYonB,EAAUI,UAAU7iD,KAAKq7B,WAAWqD,KAAK1+B,MAAO,MAE5Dw/B,UAAWijB,EAAUI,UAAUz+C,EAAM,MACrC0+C,YAAaL,EAAUI,UAAUp9C,EAAQ,MACzCs9C,iBAAkBN,EAAUI,UAAUp9C,EAAQ,MAE9Ck5B,cAAe8jB,EAAUI,UAAUp9C,EAAQ,MAE3Cyf,KAAMO,EAIN3C,SAAU2/B,EAAUI,UAAUD,GAC9Bx/B,qBAAsBq/B,EAAUI,UAAUD,GAC1Cz/B,aAAcs/B,EAAUI,UAAUD,GAElC/8B,SAAU+8B,EACVr9B,GAAIk9B,EAAUI,UAAUp9B,EAAS,MACjCzpB,MAAO4mD,EACPh9B,MAAOngB,EACP9B,KAAMA,EAEN7C,EAAG2hD,EAAUI,UAAU7iD,KAAKgjD,SAC5B9uC,EAAGuuC,EAAUI,UAAU7iD,KAAKgjD,SAC5BpkD,EAAG6jD,EAAUI,UAAUp9C,GAEvBw9C,QAASR,EAAUI,UAAUp9B,EAAS,MAEtCkW,IAAK8mB,EAAUI,UAAUl/C,IAG7B++C,EAAQQ,mBAAqB,CACzBh+B,KAAMu9B,EAAUI,UAAUp9B,GAC1BG,MAAO68B,EAAUI,UAAUp9C,GAC3BogB,SAAU48B,EAAUI,UAAUD,GAC9B9/B,SAAU2/B,EAAUI,UAAUD,GAC9Bx/B,qBAAsBq/B,EAAUI,UAAUD,GAC1Cz/B,aAAcs/B,EAAUI,UAAUD,GAClCr9B,GAAIk9B,EAAUI,UAAUp9B,GACxBzpB,MAAOymD,EAAUI,UAAUD,GAC3Bj/C,KAAM8+C,EAAUI,WA9CD,SAACjkD,GAAa,OAAO,EAAK+E,KAAK/E,GAAG,EAAO,IA+CxD0gB,KAAMmjC,EAAUI,UAAUp9C,GAC1B41B,WAAYonB,EAAUI,UAAU7iD,KAAKq7B,WAAWqD,KAAK1+B,MAAO,OAGhE0iD,EAAQS,WAAa,CACjBJ,iBAAkBt9C,EAClBq9C,YAAar9C,EACbi6B,gBAAiBt7B,EACjBqhB,QAASA,EACT0Z,OAAQsjB,EAAUW,QAAQh/C,GAC1BT,KAAMA,EACN0/C,SAAU59C,EACV+5B,UAAWp7B,GAGfs+C,EAAQ9jB,QAAU,CACdrZ,GAAIk9B,EAAUI,UAAU7iD,KAAKylB,QAAS,MACtCP,KAAMu9B,EAAUI,UAAU7iD,KAAKylB,QAAS,MACxCod,gBAAiB4f,EAAUI,UAAUp9B,EAAS,MAC9Cs9B,iBAAkBt9C,EAElB3J,KAAM2mD,EAAUI,UAAUv/C,GAC1BggD,QAASV,EACTW,UAAWd,EAAUI,UAAUl/C,GAC/B67B,UAAWp7B,EACXs7B,gBAAiBt7B,EACjB06B,KAAM2jB,EAAUW,QAAQpjD,KAAKmjD,WAAWzkB,KAAK1+B,OAC7C8iD,YAAar9C,EACbk5B,cAAe8jB,EAAUI,UAAUp9C,EAAQ,MAC3C+9C,kBAAmBZ,EACnBa,kBAAmBhB,EAAUI,UAAUD,GACvCzD,OAAQsD,EAAUI,UAAUp9C,GAC5B6Z,KAAMA,GAGVojC,EAAQnhD,MAAQ,CACZ6C,KAAMq+C,EAAUI,UAAUz+C,GAC1Bs/C,WAAYt/C,EACZqB,OAAQA,EAERuvC,UAAWvvC,EACXmgB,MAAO68B,EAAUI,UAAUv/C,GAC3BqgD,WAAY3jD,KAAK2jD,WAAWjlB,KAAK1+B,MAEjC6lB,SAAU+8B,EACVU,QAASV,EAETgB,MAAOnB,EAAUI,UAAUp9B,GAC3Bo+B,UAAWlgD,EAEXmgD,aAAcrB,EAAUI,UAAUJ,EAAUW,QAAQh/C,IAEpDif,cAAeo/B,EAAUI,UAAUD,IAGvCF,EAAQqB,uBAAwB9+B,EAAAA,EAAAA,IAAYy9B,EAAQnhD,OACpDmhD,EAAQqB,sBAAsBD,aAAerB,EAAUI,UAAUJ,EAAUW,QAAQpjD,KAAKgkD,oBAAoBtlB,KAAK1+B,QAEjH0iD,EAAQpkB,OAAS,CACbyF,UAAW0e,EAAUI,UAAUh/B,OAAU7F,GACzC4lB,QAAS6e,EAAUI,UAAUh/B,OAAU7F,GACvCwhB,UAAWijB,EAAUI,UAAUz+C,OAAM4Z,GACrCyH,QAASg9B,EAAUI,UAAUp9B,OAASzH,GACtCmhB,OAAQsjB,EAAUI,UAAU7iD,KAAKm/B,OAAOT,KAAK1+B,WAAOge,IAGxD0kC,EAAQuB,UAAY,CAChBnB,YAAaL,EAAUI,UAAUp9C,GACjC+5B,UAAWijB,EAAUI,UAAUz+C,GAC/B2+C,iBAAkBt9C,EAElBy+C,QAASzB,EAAUI,UAAU7iD,KAAKmkD,QAAQzlB,KAAK1+B,OAE/CylB,QAASA,EACT9hB,KAAM8+C,EAAU2B,aAAazgD,EAAM,MAEnCw7B,OAAQsjB,EAAUW,QAAQh/C,GAE1Bs7B,gBAAiBt7B,EACjBi/C,SAAU59C,GAGPi9C,CACX,GAAC,wBAED,SAAWrnB,GACP,OAAOT,GAAcS,GAAc,GACvC,GAGA,oBACA,SAAO51B,GACH,MAAe,OAAXA,EAA0B,EACvBka,EAAAA,GAAAA,KAAela,GAAQuE,UAClC,GAAC,kBAED,SAAKvE,GACD,MAAe,OAAXA,GAA6B,MAAVA,EAAyB,EACzCka,EAAAA,GAAAA,KAAela,GAAQuE,UAClC,GAEA,uBACA,SAAUhO,GACN,OAAO2jB,EAAAA,GAAAA,KAAe3jB,EAC1B,GAEA,qBACA,SAAQA,GACJ,GAAsB,mBAAXA,EAAwB,OAAOA,EAC1C,GAAsB,kBAAXA,EAAqB,CAE5B,GAAc,UADdA,EAAQA,EAAMolB,eACU,OAAO,EAC/B,GAAc,UAAVplB,EAAqB,OAAO,C,CAEpC,MAAM,IAAIkB,MAAM,qBAAuBlB,EAC3C,GAAC,iBAED,SAAIA,EAAYqoD,GACZ,MAAsB,kBAAXroD,IACFqoD,GAAoC,OAA1BroD,EAAM4jB,UAAU,EAAG,KAAe5jB,EAAQ,KAAOA,IAC5D8nC,EAAAA,EAAAA,IAAY9nC,IACNA,EAAMolB,cAGbnd,GAAOyb,mBAAmB,eAAgB,QAAS1jB,EAC9D,GAAC,kBAED,SAAKA,EAAYqoD,GACb,IAAMtmD,EAASiC,KAAKsD,IAAItH,EAAOqoD,GAC/B,GAAKtmD,EAAO3B,OAAS,IAAO,EACxB,MAAM,IAAIc,MAAM,8BAAgClB,GAEpD,OAAO+B,CACX,GAGA,qBACA,SAAQ/B,GACJ,OAAOioB,EAAAA,EAAAA,IAAWjoB,EACtB,GAAC,yBAED,SAAYA,GACR,KAAK8nC,EAAAA,EAAAA,IAAY9nC,EAAO,IAAO,OAAO,KACtC,IAAMypB,GAAUxB,EAAAA,EAAAA,KAAWkW,EAAAA,EAAAA,IAAan+B,EAAO,KAC/C,OAAQypB,IAAYmwB,GAAe,KAAMnwB,CAC7C,GAAC,6BAED,SAAgBzpB,GACZ,OAAOqoC,EAAAA,EAAAA,IAAmBroC,EAC9B,GAEA,sBACA,SAAS6nB,GACL,GAAgB,MAAZA,EAAoB,MAAO,SAE/B,GAAiB,aAAbA,EAA2B,MAAO,MAEtC,OAAQA,GACJ,IAAK,WAAY,MAAO,MACxB,IAAK,SAAU,IAAK,UAAW,IAAK,OAAQ,IAAK,YAC7C,OAAOA,EAGf,GAAyB,kBAAdA,IAA0BigB,EAAAA,EAAAA,IAAYjgB,GAC7C,OAAOygC,EAAAA,EAAAA,IAA0BzgC,GAGrC,MAAM,IAAI3mB,MAAM,mBACpB,GAEA,kBACA,SAAKlB,EAAYqoD,GACb,IAAMtmD,EAASiC,KAAKsD,IAAItH,EAAOqoD,GAC/B,OAA8B,MAA1B1rB,EAAAA,EAAAA,IAAc56B,GACPkG,GAAOyb,mBAAmB,eAAgB,QAAS1jB,GAEvD+B,CACX,GAEA,wBACA,SAAW/B,GACP,GAAa,MAATA,EAAiB,OAAO,KAE5B,IAAM4C,EAAI+gB,EAAAA,GAAAA,KAAe3jB,GAEzB,IACI,OAAO4C,EAAEoL,UACI,CAAf,MAAOiZ,GAAQ,CAElB,OAAO,IACV,GAAC,qBAED,SAAQjnB,GACJ,KAAK8nC,EAAAA,EAAAA,IAAY9nC,GACb,MAAM,IAAIkB,MAAM,mBAEpB,OAAO+7B,EAAAA,EAAAA,IAAWj9B,EAAO,GAC7B,GAAC,oBAED,SAAOA,EAAYslC,GACK,MAAhBtlC,EAAMuoD,QAAiC,MAAfvoD,EAAM4nD,QAC9B5nD,EAAM4nD,MAAQ5nD,EAAMuoD,QAGxB,IAAMZ,EAAmC,MAArB3nD,EAAMwoD,YAAuBxoD,EAAMwoD,YAAaxoD,EAAM2nD,WACpE5lD,EAAS0kD,EAAU7kB,MAAM0D,EAAQtlC,GAEvC,OADA+B,EAAOymD,YAA8B,MAAdb,EAAsB,KAAMhkC,EAAAA,GAAAA,KAAegkC,GAC3D5lD,CACX,GAAC,mBAED,SAAM/B,GACF,OAAOgE,KAAKykD,OAAOzoD,EAAOgE,KAAK0iD,QAAQnhD,MAC3C,GAAC,mCAED,SAAsBvF,GAClB,OAAOgE,KAAKykD,OAAOzoD,EAAOgE,KAAK0iD,QAAQqB,sBAC3C,GAEA,gCACA,SAAmB/nD,GACf,OAAOymD,EAAU7kB,MAAM59B,KAAK0iD,QAAQQ,mBAAoBlnD,EAC5D,GAAC,iCAED,SAAoBmoB,GAGO,MAAnBA,EAAY8Z,KAAuC,MAAxB9Z,EAAY0B,WACvC1B,EAAY0B,SAAW1B,EAAY8Z,KAKnC9Z,EAAYoB,IAAM5F,EAAAA,GAAAA,KAAewE,EAAYoB,IAAI1b,WACjDsa,EAAYoB,GAAK,8CAII,MAArBpB,EAAYlG,OAAqC,MAApBkG,EAAYxgB,OACzCwgB,EAAYxgB,KAAOwgB,EAAYlG,OAIb,MAAlBkG,EAAYoB,IAAqC,MAAvBpB,EAAY8+B,UACtC9+B,EAAY8+B,QAAUjjD,KAAK6iC,gBAAgB1e,IAGrB,IAArBA,EAAY7E,MAAmC,IAArB6E,EAAY7E,MAAwC,MAA1B6E,EAAYkX,aACjElX,EAAYkX,WAAa,IAG7B,IAAMt9B,EAA8B0kD,EAAU7kB,MAAM59B,KAAK0iD,QAAQv+B,YAAaA,GAE9E,GAA2B,MAAvBA,EAAYU,QAAiB,CAC7B,IAAIA,EAAUV,EAAYU,SAEtBif,EAAAA,EAAAA,IAAYjf,KACZA,EAAUlF,EAAAA,GAAAA,KAAekF,GAAS7a,YAGtCjM,EAAO8mB,QAAUA,C,KAEd,CACH,IAAIA,EAAUV,EAAYugC,UAGX,MAAX7/B,GAA+B,MAAZ9mB,EAAOa,IAC1BimB,EAAUV,EAAYU,UAGtBif,EAAAA,EAAAA,IAAYjf,KACZA,EAAUlF,EAAAA,GAAAA,KAAekF,GAAS7a,YAGd,kBAAb6a,GAAqC,MAAZ9mB,EAAOa,KACvCimB,GAAW9mB,EAAOa,EAAI,IAAM,GACd,IAAKimB,EAAU,GAC7BA,EAAU5oB,SAAS4oB,IAGC,kBAAbA,IAAyBA,EAAU,GAE9C9mB,EAAO8mB,QAAUA,C,CAQrB,OAJI9mB,EAAOyhC,WAAoD,MAAvCzhC,EAAOyhC,UAAU13B,QAAQ,KAAM,MACnD/J,EAAOyhC,UAAY,MAGhBzhC,CACX,GAAC,yBAED,SAAY/B,GACR,OAAO2oD,GAAiB3oD,EAC5B,GAAC,wBAED,SAAWA,GACP,OAAOymD,EAAU7kB,MAAM59B,KAAK0iD,QAAQS,WAAYnnD,EACpD,GAAC,qBAED,SAAQA,GACJ,IAAM+B,EAA6B0kD,EAAU7kB,MAAM59B,KAAK0iD,QAAQ9jB,QAAS5iC,GAGzE,GAAmB,MAAf+B,EAAOjC,KACP,GAAIiC,EAAOjC,KAAKM,QAAU,EAAG,CAEzB,IAAMJ,EAAQ2jB,EAAAA,GAAAA,KAAe5hB,EAAOjC,MAAMkO,WAC5B,IAAVhO,GAAyB,IAAVA,GAEM,MAAjB+B,EAAOohD,QAAmBphD,EAAOohD,SAAWnjD,GAC5CiI,GAAOyb,mBAAmB,kCAAmC,QAAS,CAAE5jB,KAAMiC,EAAOjC,KAAMqjD,OAAQphD,EAAOohD,SAE9GphD,EAAOohD,OAASnjD,SACT+B,EAAOjC,MAEdmI,GAAOyb,mBAAmB,0BAA2B,aAAc3hB,EAAOjC,K,MAEhD,KAAvBiC,EAAOjC,KAAKM,QAEnB6H,GAAOyb,mBAAmB,oBAAqB,aAAc3hB,EAAOjC,MAQ5E,OAJqB,MAAjBiC,EAAOohD,SACPphD,EAAO6mD,WAAY,GAGhB7mD,CACX,GAAC,oBAED,SAAO/B,GAAU,WACb,OAAIc,MAAMG,QAAQjB,GACPA,EAAM+wB,KAAI,SAACnuB,GAAC,OAAK,EAAKugC,OAAOvgC,EAAE,IAEtB,MAAT5C,EACAgE,KAAKoE,KAAKpI,GAAO,GAGrB,IACX,GAAC,oBAED,SAAOA,GACH,OAAOymD,EAAU7kB,MAAM59B,KAAK0iD,QAAQpkB,OAAQtiC,EAChD,GAAC,uBAED,SAAUA,GACN,OAAOymD,EAAU7kB,MAAM59B,KAAK0iD,QAAQuB,UAAWjoD,EACnD,IAAC,oBAED,SAAaslC,EAA0CuD,GACnD,IAAM9mC,EAAc,CAAC,EACrB,IAAK,IAAMgC,KAAOuhC,EACd,IACI,IAAMtlC,EAAQslC,EAAOvhC,GAAK8kC,EAAO9kC,SACnBie,IAAVhiB,IAAuB+B,EAAOgC,GAAO/D,E,CAC3C,MAAOinB,GAGL,MAFAA,EAAM4hC,SAAW9kD,EACjBkjB,EAAM6hC,WAAajgB,EAAO9kC,GACpBkjB,C,CAGd,OAAOllB,CACX,GAEA,uBACA,SAAiBujC,EAAoByjB,GACjC,OAAQ,SAAS/oD,GACb,OAAa,MAATA,EAAwB+oD,EACrBzjB,EAAOtlC,EAClB,CACJ,GAEA,0BACA,SAAoBslC,EAAoB0jB,GACpC,OAAQ,SAAShpD,GACb,OAAKA,EACEslC,EAAOtlC,GADOgpD,CAEzB,CACJ,GAEA,qBACA,SAAe1jB,GACX,OAAQ,SAAS+X,GACb,IAAKv8C,MAAMG,QAAQo8C,GAAU,MAAM,IAAIn8C,MAAM,gBAE7C,IAAMa,EAAc,GAMpB,OAJAs7C,EAAMv5B,SAAQ,SAAS9jB,GACnB+B,EAAOI,KAAKmjC,EAAOtlC,GACvB,IAEO+B,CACX,CACJ,KAAC,EA5ciB,GAmdhB,SAAUknD,GAAuBjpD,GACnC,OAAQA,GAA+C,oBAA/BA,EAAMkpD,mBAClC,CAEM,SAAUA,GAAoBlpD,GAChC,OAAQipD,GAAuBjpD,IAAUA,EAAMkpD,qBACnD,CAGA,IAAIC,IAAkB,EAChB,SAAUC,KACRD,KACJA,IAAkB,EAElBE,QAAQlvB,IAAI,8BACZkvB,QAAQlvB,IAAI,8DACZkvB,QAAQlvB,IAAI,IACZkvB,QAAQlvB,IAAI,6EACZkvB,QAAQlvB,IAAI,sEACZkvB,QAAQlvB,IAAI,IACZkvB,QAAQlvB,IAAI,2EACZkvB,QAAQlvB,IAAI,0EACZkvB,QAAQlvB,IAAI,iFACZkvB,QAAQlvB,IAAI,IACZkvB,QAAQlvB,IAAI,sDACZkvB,QAAQlvB,IAAI,8BAChB,C,2SCnfMlyB,GAAS,IAAIC,EAAAA,GAAOi0B,IAS1B,SAASmtB,GAAW9kB,GACf,OAAa,MAATA,EAAwB,QACC,MAAzB7H,EAAAA,EAAAA,IAAc6H,IACdv8B,GAAOyb,mBAAmB,gBAAiB,QAAS8gB,GAEjDA,EAAMpf,cAClB,CAEA,SAASmkC,GAAgBpmB,GAGrB,IADAA,EAASA,EAAOtiC,QACTsiC,EAAO/iC,OAAS,GAAkC,MAA7B+iC,EAAOA,EAAO/iC,OAAS,IAAc+iC,EAAOpD,MAExE,OAAOoD,EAAOpS,KAAI,SAACyT,GACf,GAAI1jC,MAAMG,QAAQujC,GAAQ,CAGtB,IAAMglB,EAAyC,CAAC,EAChDhlB,EAAM1gB,SAAQ,SAAC0gB,GACXglB,EAAOF,GAAW9kB,KAAU,CAChC,IAGA,IAAMub,EAAS97C,OAAO46B,KAAK2qB,GAG3B,OAFAzJ,EAAO/gB,OAEA+gB,EAAOt9C,KAAK,I,CAGnB,OAAO6mD,GAAW9kB,EAE1B,IAAG/hC,KAAK,IACZ,CAgBA,SAAS8hC,GAAYjd,GACjB,GAA0B,kBAAfA,EAAyB,CAGhC,GAFAA,EAAYA,EAAUlC,cAEW,MAA7BuX,EAAAA,EAAAA,IAAcrV,GACd,MAAO,MAAQA,EAGnB,IAAgC,IAA5BA,EAAU0B,QAAQ,KAClB,OAAO1B,C,KAGR,IAAIxmB,MAAMG,QAAQqmB,GACrB,MAAO,YAAciiC,GAAgBjiC,GAElC,GAAIhB,EAAUmjC,YAAYniC,GAE7B,MADArf,GAAOk+B,KAAK,mBACN,IAAIjlC,MAAM,mBAEb,GAAIomB,GAAmC,kBAAfA,EAC3B,MAAO,WAAaA,EAAUmC,SAAW,KAAO,IAAM8/B,GAAgBjiC,EAAU6b,QAAU,G,CAG9F,MAAM,IAAIjiC,MAAM,mBAAqBomB,EACzC,CAKA,SAASoiC,KACL,OAAQ,IAAI3Q,MAAQ2Q,SACxB,CAEA,SAAS/D,GAAMpC,GACX,OAAO,IAAIp6B,SAAQ,SAACE,GAChB4b,WAAW5b,EAASk6B,EACxB,GACJ,CAmBA,IAAMoG,GAAiB,CAAE,QAAS,UAAW,UAAW,QAE3CC,GAAK,WAQd,WAAYllB,EAAand,EAAoBqd,IAAa,gBACtDje,EAAAA,EAAAA,IAAe3iB,KAAM,MAAO0gC,IAC5B/d,EAAAA,EAAAA,IAAe3iB,KAAM,WAAYujB,IACjCZ,EAAAA,EAAAA,IAAe3iB,KAAM,OAAQ4gC,GAE7B5gC,KAAK6lD,kBAAoB,EACzB7lD,KAAK8lD,WAAY,CACrB,CAsCC,OAtCA,2BAED,WACI,OAAQ9lD,KAAKsf,MACT,IAAK,KACF,OAAOtf,KAAKoE,KACf,IAAK,SACF,OAAOpE,KAAKs+B,OAEnB,OAAOt+B,KAAK0gC,GAChB,GAAC,gBAED,WACI,OAAO1gC,KAAK0gC,IAAI5iB,MAAM,KAAK,EAC/B,GAAC,gBAED,WACI,IAAMqoB,EAAQnmC,KAAK0gC,IAAI5iB,MAAM,KAC7B,MAAiB,OAAbqoB,EAAM,GAAsB,KACzBA,EAAM,EACjB,GAAC,kBAED,WACI,IAAMA,EAAQnmC,KAAK0gC,IAAI5iB,MAAM,KAC7B,GAAiB,WAAbqoB,EAAM,GAAmB,OAAO,KACpC,IAhHmBxiC,EAgHb8hB,EAAU0gB,EAAM,GAEhBhH,EAjHG,MADUx7B,EAkHcwiC,EAAM,IAjHjB,GAEnBxiC,EAAKma,MAAM,MAAMiP,KAAI,SAACyT,GACzB,GAAc,KAAVA,EAAgB,MAAO,GAE3B,IAAM2F,EAAQ3F,EAAM1iB,MAAM,KAAKiP,KAAI,SAACyT,GAChC,MAAmB,SAAVA,EAAoB,KAAMA,CACvC,IAEA,OAA0B,IAAjB2F,EAAM/pC,OAAgB+pC,EAAM,GAAIA,CAC7C,IAwGU7H,EAAiB,CAAC,EAKxB,OAHIa,EAAO/iC,OAAS,IAAKkiC,EAAOa,OAASA,GACrC1Z,GAAuB,MAAZA,IAAmB6Y,EAAO7Y,QAAUA,GAE5C6Y,CACX,GAAC,sBAED,WACI,OAAQt+B,KAAK0gC,IAAI1b,QAAQ,MAAQ,GAAK2gC,GAAe3gC,QAAQhlB,KAAK0gC,MAAQ,CAC9E,KAAC,EArDa,GA4FZqlB,GAAgD,CAClD,EAAO,CAAEC,OAAQ,MAAQC,MAAO,EAAMC,KAAM,EAAMnlC,OAAQ,MAC1D,EAAO,CAAEilC,OAAQ,MAAQC,MAAO,GAAMC,KAAM,GAAMnlC,OAAQ,OAC1D,EAAO,CAAEilC,OAAQ,OAAQC,MAAO,GAAMC,KAAM,IAC5C,GAAO,CAAEF,OAAQ,MAAQG,IAAK,OAC9B,GAAO,CAAEH,OAAQ,MAAQG,IAAK,OAC9B,IAAO,CAAEH,OAAQ,OAAQG,IAAK,QAGlC,SAASC,GAAWpqD,GAChB,OAAOi9B,EAAAA,EAAAA,IAAWtZ,EAAAA,GAAAA,KAAe3jB,GAAOu+B,cAAe,GAC3D,CAGA,SAAS8rB,GAAa1iD,GAClB,OAAOkoC,GAAO5pB,QAAOlC,EAAAA,EAAAA,IAAO,CAAEpc,GAAMw2B,EAAAA,EAAAA,KAAa31B,EAAAA,GAAAA,KAAOA,EAAAA,GAAAA,IAAOb,IAAQ,EAAG,KAC9E,CAOA,IAAM2iD,GAAc,IAAIpnC,OAAO,kBAAoB,KAC7CqnC,GAAW,CACb,IAAIrnC,OAAO,mBAAqB,KAChC,IAAIA,OAAO,gBAAiB,KAC5BonC,GACA,IAAIpnC,OAAO,mCAAoC,MAGnD,SAASsnC,GAAazoD,EAAgB6I,GAClC,IACI,OAAO84C,EAAAA,GAAAA,IAAa+G,GAAY1oD,EAAQ6I,GAC5B,CAAd,MAAMqc,GAAQ,CAChB,OAAO,IACX,CAEA,SAASwjC,GAAY1oD,EAAgB6I,GACjC,GAAe,OAAX7I,EAAmB,OAAO,KAE9B,IAAMsxC,EAAS1vB,EAAAA,GAAAA,MAAewa,EAAAA,EAAAA,IAAap8B,EAAQ6I,EAAOA,EAAQ,KAAKoD,WACjE5N,EAASujB,EAAAA,GAAAA,MAAewa,EAAAA,EAAAA,IAAap8B,EAAQsxC,EAAQA,EAAS,KAAKrlC,WAEzE,OAAOmwB,EAAAA,EAAAA,IAAap8B,EAAQsxC,EAAS,GAAIA,EAAS,GAAKjzC,EAC3D,CAGA,SAASsqD,GAAYC,GASjB,OARIA,EAAKlnC,MAAM,qBACXknC,EAAOA,EAAK/mC,UAAU,IACf+mC,EAAKlnC,MAAM,eAClBknC,EAAOA,EAAK/mC,UAAU,GAEtB3b,GAAOyb,mBAAmB,0BAA2B,OAAQinC,GAG1D,gCAAP,OAAyCA,EAC7C,CAEA,SAASC,GAAO5qD,GACZ,IAAM+B,GAASuG,EAAAA,EAAAA,IAAStI,GACxB,GAAI+B,EAAO3B,OAAS,GAAM,MAAM,IAAIc,MAAM,+BAE1C,IAAM2pD,EAAS,IAAI1pD,WAAW,IAE9B,OADA0pD,EAAOlpD,IAAII,EAAQ,GAAKA,EAAO3B,QACxByqD,CACX,CAEA,SAASC,GAAS9qD,GACd,GAAKA,EAAMI,OAAS,KAAQ,EAAK,OAAOJ,EAExC,IAAM+B,EAAS,IAAIZ,WAA0C,GAA/B8J,KAAKiB,KAAKlM,EAAMI,OAAS,KAEvD,OADA2B,EAAOJ,IAAI3B,GACJ+B,CACX,CAGA,SAASgpD,GAAYC,GAMjB,IALA,IAAMjpD,EAA4B,GAE9BkpD,EAAY,EAGP5qD,EAAI,EAAGA,EAAI2qD,EAAM5qD,OAAQC,IAC9B0B,EAAOI,KAAK,MACZ8oD,GAAa,GAGjB,IAAK,IAAI5qD,EAAI,EAAGA,EAAI2qD,EAAM5qD,OAAQC,IAAK,CACnC,IAAMsH,GAAOW,EAAAA,EAAAA,IAAS0iD,EAAM3qD,IAG5B0B,EAAO1B,GAAKuqD,GAAOK,GAGnBlpD,EAAOI,KAAKyoD,GAAOjjD,EAAKvH,SACxB2B,EAAOI,KAAK2oD,GAASnjD,IACrBsjD,GAAa,GAAmC,GAA9BhgD,KAAKiB,KAAKvE,EAAKvH,OAAS,G,CAG9C,OAAOk/B,EAAAA,EAAAA,IAAUv9B,EACrB,CAEO,IAAMmpD,GAAQ,WAYjB,WAAYnjC,EAAwB0B,EAAiB7oB,EAAcihC,IAAwB,gBACvFlb,EAAAA,EAAAA,IAAe3iB,KAAM,WAAY+jB,IACjCpB,EAAAA,EAAAA,IAAe3iB,KAAM,OAAQpD,IAC7B+lB,EAAAA,EAAAA,IAAe3iB,KAAM,UAAW+jB,EAASojC,UAAU1hC,QAAQA,KAC3D9C,EAAAA,EAAAA,IAAe3iB,KAAM,mBAAoB69B,EAC7C,CAuVC,OAvVA,wCAED,WAAgB,WAgBZ,OAfK79B,KAAKonD,mBAENpnD,KAAKonD,iBAAmBpnD,KAAK+jB,SAAS/mB,KAAK,CACvCuoB,GAAIvlB,KAAKylB,QACT9hB,KAAM,+EACP2hB,MAAK,SAACvnB,GACL,OAAO4hB,EAAAA,GAAAA,KAAe5hB,GAAQid,GAAG,EACrC,IAAGgI,OAAM,SAACC,GACN,GAAIA,EAAM6C,OAAS5hB,EAAAA,GAAAA,OAAAA,eAAgC,OAAO,EAG1D,MADA,EAAKkjD,iBAAmB,KAClBnkC,CACV,KAGGjjB,KAAKonD,gBAChB,GAAC,oBAEK,SAAOC,EAAkBC,G,0IAWvB,OAREjjC,EAAK,CACPkB,GAAIvlB,KAAKylB,QACTiX,iBAAiB,EACjB/4B,MAAM23B,EAAAA,EAAAA,IAAU,CAAE+rB,EAAUrJ,GAASh+C,KAAKpD,MAAQ0qD,GAAc,QAIhEx/B,GAAa,EAAK,SACZ9nB,KAAKunD,mBAAkB,kCAC7Bz/B,GAAa,EAGbzD,EAAG1gB,MAAO23B,EAAAA,EAAAA,IAAU,CAAE,aAAcyrB,GAAY,CAAE9I,GAAUj+C,KAAKpD,MAAOynB,EAAG1gB,SAAW,OAIzE,OAJyE,mBAInE3D,KAAK+jB,SAAS/mB,KAAKqnB,GAAG,QAMW,OANhDtmB,EAAS,EAAH,MACLuG,EAAAA,EAAAA,IAASvG,GAAQ3B,OAAS,KAAQ,GACnC6H,GAAOY,WAAW,uBAAwBX,EAAAA,GAAAA,OAAAA,eAA8B,CACpEigB,YAAaE,EAAI1gB,KAAM5F,IAG3B+pB,IAAc/pB,EAAS0oD,GAAY1oD,EAAQ,IAAK,kBAC7CA,GAAM,qCAET,KAAM+nB,OAAS5hB,EAAAA,GAAAA,OAAAA,eAA4B,0CAAW,MAAI,4E,GAGrE,yBAEK,SAAYmjD,EAAkBC,G,sIACjB,O,SAAMtnD,KAAKwnD,OAAOH,EAAUC,GAAW,OAA1C,GACE,OADRvpD,EAAS,EAAH,MACM,yCAAW0oD,GAAY1oD,EAAQ,IAAE,gCAC5C,MAAI,+C,GACd,yBAED,SAAY0pD,EAAkBC,GAC1B,IAAMC,EAAW5B,GAAUxnD,OAAOkpD,IAQlC,GANgB,MAAZE,GACA1jD,GAAOY,WAAW,0BAAD,OAA4B4iD,GAAavjD,EAAAA,GAAAA,OAAAA,sBAAqC,CAC3FY,UAAW,cAAF,OAAiB2iD,EAAS,OAItB,QAAjBE,EAASxB,IACT,OAAOnmD,KAAK+jB,SAASojC,UAAU1hC,QAAQiiC,GAG3C,IAAMppD,GAAQgG,EAAAA,EAAAA,IAASojD,GAGvB,GAAsB,MAAlBC,EAAS1B,MAAe,CACxB,IAAMA,EAAQyB,EAASjoC,MAAM,6CAC7B,GAAIwmC,EAAO,CACP,IAAM7pD,EAASH,SAASgqD,EAAM,GAAI,IAClC,GAAIA,EAAM,GAAG7pD,SAAoB,EAATA,GAAcA,GAAU,GAAKA,GAAU,GAC3D,OAAOiqD,IAAatmC,EAAAA,EAAAA,IAAO,CAAE,CAAE4nC,EAAS1B,OAAU,KAAOA,EAAM,K,EAM3E,GAAqB,MAAjB0B,EAASzB,KAAc,CACvB,IAAMA,EAAOwB,EAASjoC,MAAM,yCAC5B,GAAIymC,EAAM,CACN,IAAM9pD,EAASH,SAASiqD,EAAK,GAAI,IACjC,GAAIA,EAAK,GAAG9pD,SAAoB,EAATA,GAAcA,GAAU,GAAKA,GAAU,GAC1D,OAAOiqD,IAAatmC,EAAAA,EAAAA,IAAO,CAAE,CAAE4nC,EAASzB,MAAS,KAAOA,EAAK,K,EAMzE,GAAuB,MAAnByB,EAAS5mC,OAAgB,CACzB,IAAM3kB,EAASkC,EAAM,GAGjB65B,EAAU75B,EAAM,GASpB,GARgB,IAAZ65B,EACe,KAAX/7B,GAA4B,KAAXA,IACjB+7B,GAAW,GAGfA,GAAW,EAGXA,GAAW,GAAK75B,EAAMlC,SAAW,EAAIA,GAAUA,GAAU,GAAKA,GAAU,GAAI,CAC5E,IAAM0J,EAAQ8hD,KAAAA,QAAetpD,EAAMzB,MAAM,IAEzC,OADAiJ,EAAM0kC,QAAQrS,GACPyvB,KAAAA,OAAcD,EAAS5mC,OAAQjb,E,EAI9C,OAAO,IACX,GAAC,wBAGK,SAAW2hD,G,0IAGb,GAFgB,MAAZA,IAAoBA,EAAW,IAGlB,KAAbA,EAAe,iBAGI,OAHJ,kBAGUznD,KAAKwnD,OAAO,cAAa,OAAlC,GAGG,QAHTzpD,EAAS,EAAH,OAGWA,IAAW83C,GAAQ,yCAAW,MAAI,gCAElD71C,KAAK+jB,SAASojC,UAAUU,YAAY9pD,IAAO,qCAE9C,KAAM+nB,OAAS5hB,EAAAA,GAAAA,OAAAA,eAA4B,0CAAW,MAAI,2BAMrD,OANqD,UAM/ClE,KAAK8nD,YAAY,aAAc1B,GAAWqB,IAAU,QAA7D,GAGE,OAHVC,EAAW,EAAH,OAGuB,OAAbA,EAAiB,0CAAW,MAAI,QAWvD,OANc,OAFTjiC,EAAUzlB,KAAK+nD,YAAYN,EAAUC,KAGvCzjD,GAAOY,WAAW,mCAAoCX,EAAAA,GAAAA,OAAAA,sBAAqC,CACvFY,UAAW,cAAF,OAAiB2iD,EAAS,KACnCA,SAAUA,EACV9jD,KAAM+jD,IAEb,kBAEMjiC,GAAO,yD,GACjB,uBAEK,W,oKAKiB,OAJbuiC,EAAoD,CAAE,CAAE1oC,KAAM,OAAQ2oC,QAASjoD,KAAKpD,OAAQ,kBAIzEoD,KAAKkoD,QAAQ,UAAS,OAA/B,GACE,OADRC,EAAS,EAAH,MACM,yCAAW,MAAI,OAExB9rD,EAAI,EAAC,YAAEA,EAAIkqD,GAASnqD,QAAM,iBACQ,GAC1B,OADPqjB,EAAQ0oC,EAAO1oC,MAAM8mC,GAASlqD,KACnB,wDAEX+rD,EAAS3oC,EAAM,GAAG2B,cAAa,KAE7BgnC,EAAM,OACL,UADK,KACE,GAIP,SAJO,KAID,GAIN,SAJM,KAIA,GAIN,WAJM,MAKN,YADQ,QACC,iBAZqC,OAA/CJ,EAAQ7pD,KAAK,CAAEmhB,KAAM,MAAO2oC,QAASE,IAAU,kBACxC,CAAEH,QAAAA,EAAS7Q,IAAKgR,IAAQ,QAGiB,OAAhDH,EAAQ7pD,KAAK,CAAEmhB,KAAM,OAAQ2oC,QAASE,IAAU,kBACzC,CAAEH,QAAAA,EAAS7Q,IAAKgR,IAAQ,QAGiB,OAAhDH,EAAQ7pD,KAAK,CAAEmhB,KAAM,OAAQ2oC,QAASE,IAAU,kBACzC,CAAEH,QAAAA,EAAS7Q,IAAKuP,GAAYyB,KAAS,QASR,GAJ9Bd,EAAuB,WAAXe,EAAuB,aAAc,aACvDJ,EAAQ7pD,KAAK,CAAEmhB,KAAM8oC,EAAQH,QAASE,IAEtC,KACenoD,KAAKqoD,iBAAgB,sBAAI,OAAJ,UAAUroD,KAAKikB,aAAY,4BAEtB,GAFnCqkC,EAAQ,EAAH,GAGU,KADfniB,GAAS1mB,EAAM,IAAM,IAAI3B,MAAM,MAC3B1hB,OAAY,0CAAW,MAAI,QAExB,OAFwB,UAElB4D,KAAK+jB,SAASojC,UAAU1hC,QAAQ0gB,EAAM,IAAG,QAG5D,GAHM1L,EAAO,EAAH,KACJ8tB,GAAUtvB,EAAAA,EAAAA,IAAWtZ,EAAAA,GAAAA,KAAewmB,EAAM,IAAI5L,cAAe,IAGpD,WAAX6tB,EAAmB,iBAEoC,OAFpC,KAEApoD,KAAK+jB,SAASojC,UAAS,UAAmBnnD,KAAK+jB,SAAS/mB,KAAK,CAC5EuoB,GAAIkV,EAAM92B,MAAM23B,EAAAA,EAAAA,IAAU,CAAE,aAAcitB,MAC5C,QAFoD,GAEpD,YAFIC,EAAa,EAAH,GAA2BX,YAAW,gBAGlDS,IAAUE,EAAU,0CAAW,MAAI,QACvCR,EAAQ7pD,KAAK,CAAEmhB,KAAM,QAAS2oC,QAASO,IAAc,2BAEnC,YAAXJ,EAAoB,iBAEI,OAFJ,KAEXzoC,EAAAA,GAAS,UAAY3f,KAAK+jB,SAAS/mB,KAAK,CACpDuoB,GAAIkV,EAAM92B,MAAM23B,EAAAA,EAAAA,IAAU,CAAE,cAAcrC,EAAAA,EAAAA,IAAWqvB,EAAO,IAAKC,MACnE,QAF4B,GAE5B,cAFIE,EAAU,EAAH,GAAavjC,KAAI,iBAGlBrb,SAAU,CAAF,yCAAW,MAAI,QACnCm+C,EAAQ7pD,KAAK,CAAEmhB,KAAM,UAAW2oC,QAASQ,EAAQ5gD,aAAc,QASpC,OALzBwc,EAAK,CACPkB,GAAIvlB,KAAK+jB,SAASojC,UAAU1hC,QAAQ0gB,EAAM,IAC1CxiC,MAAM23B,EAAAA,EAAAA,IAAU,CAAE+rB,EAAUkB,KAC/B,KAEiB/B,GAAY,UAAOxmD,KAAK+jB,SAAS/mB,KAAKqnB,GAAG,QAAG,GAAH,YACxC,OADfqkC,GAAc,EAAH,WAA8C,IACtC,0CAAW,MAAI,QAiBrB,OAhBjBV,EAAQ7pD,KAAK,CAAEmhB,KAAM,oBAAqB2oC,QAASS,IAGpC,YAAXN,IACAM,EAAcA,EAAY5gD,QAAQ,OAAQygD,EAAQ3oC,UAAU,IAC5DooC,EAAQ7pD,KAAK,CAAEmhB,KAAM,wBAAyB2oC,QAASS,KAIvDA,EAAYjpC,MAAM,aAClBipC,EAAchC,GAAYgC,IAG9BV,EAAQ7pD,KAAK,CAAEmhB,KAAM,eAAgB2oC,QAASS,IAE9C,UACuBzG,GAAUyG,GAAY,QAA/B,GAARC,EAAW,EAAH,KACC,CAAF,yCAAW,MAAI,QAIC,GAH7BX,EAAQ7pD,KAAK,CAAEmhB,KAAM,WAAY2oC,QAASx5B,KAAK8P,UAAUoqB,KAIhC,kBADrBC,EAAWD,EAASE,OACS,0CAAW,MAAI,YAE5CD,EAASnpC,MAAM,wBAAyB,CAAF,wCAIE,GAC5B,MADCmpC,EAASnpC,MAAM6mC,IACZ,0CAAW,MAAI,QAE/B0B,EAAQ7pD,KAAK,CAAEmhB,KAAM,WAAY2oC,QAASW,IAC1CA,EAAWlC,GAAYkC,GAAU,QAGY,OAAjDZ,EAAQ7pD,KAAK,CAAEmhB,KAAM,MAAO2oC,QAASW,IAAY,kBAE1C,CAAEZ,QAAAA,EAAS7Q,IAAKyR,IAAU,QAjGRvsD,IAAG,0GAuGrC,MAAI,yD,GACd,4BAEK,W,sJAGe,O,SAAM2D,KAAK8nD,YAAY,cAAa,OAAvC,GAGE,OAHVJ,EAAW,EAAH,OAGuB,OAAbA,EAAiB,yCAAW,MAAI,OAGoC,KAAtFoB,EAAOpB,EAASjoC,MAAM,kEAClB,CAAF,gBACgC,GAA9BrjB,EAASH,SAAS6sD,EAAK,GAAI,IAC7BA,EAAK,GAAG1sD,SAAoB,EAATA,EAAU,0CACtB,UAAayvC,GAAO5pB,OAAO,KAAO6mC,EAAK,KAAG,QAKmC,KAAtFC,EAAOrB,EAASjoC,MAAM,kEAClB,CAAF,gBACgC,GAA9BrjB,EAASH,SAAS8sD,EAAK,GAAI,IAC7BA,EAAK,GAAG3sD,SAAoB,EAATA,EAAU,0CACtB,UAAayvC,GAAO5pB,OAAO,KAAO8mC,EAAK,KAAG,QAKI,KAAvDC,EAAQtB,EAASjoC,MAAM,kCAClB,CAAF,mBACoB,KAArBupC,EAAM,GAAG5sD,OAAmB,0CACrB,SAAY4sD,EAAM,IAAE,QAIqB,KAAlDC,EAASvB,EAASjoC,MAAM,4BAClB,CAAF,mBACoB,KAAtBwpC,EAAO,GAAG7sD,OAAmB,iBAGsD,OAD7E8sD,EAAkC,CAAE,IAAK,GAAI,IAAK,IAAK,IAAK,KAC5D9kD,EAAOs8C,GAAa,KAAOuI,EAAO,IAAInhD,QAAQ,WAAW,SAAC7G,GAAC,OAAMioD,EAAQjoD,EAAE,IAAE,kBAC5E,SAAYmD,GAAI,iCAIxBH,GAAOY,WAAW,2CAA4CX,EAAAA,GAAAA,OAAAA,sBAAqC,CACtGY,UAAW,mBACXnB,KAAM+jD,KACR,gD,GACL,qBAEK,SAAQ3nD,G,wIAcO,OAXbopD,GAAW3pC,EAAAA,GAAAA,IAAYzf,IAI3BopD,GAAWppC,EAAAA,EAAAA,IAAO,CAAEqmC,GAAW,IAAKA,GAAW+C,EAAS/sD,QAAS+sD,KAGnD/sD,OAAS,KAAQ,IAC3B+sD,GAAWppC,EAAAA,EAAAA,IAAO,CAAEopC,GAAUlwB,EAAAA,EAAAA,IAAW,KAAM,GAAMl5B,EAAI3D,OAAS,OACrE,SAEsB4D,KAAK8nD,YAAY,cAAc1nC,EAAAA,EAAAA,IAAQ+oC,IAAU,OAA1D,GACE,OADVzB,EAAW,EAAH,OACuB,OAAbA,EAAiB,yCAAW,MAAI,iCAEjDhI,EAAAA,GAAAA,IAAagI,IAAS,+C,KAChC,EAxWgB,GA2WjB0B,GAA8B,KAE9BC,GAAa,EAEJC,GAAa,0CAiDtB,WAAY1kC,GAAsC,MAkB9C,IAlB8C,gBAC9C,gBAGK2kC,QAAU,GAEf,EAAKC,SAAW,CAAEjoD,OAAQ,GAE1B,EAAKkoD,iBAAkB,EAEvB,EAAKtC,WAAY,2CAAWuC,gBAK5B/mC,EAAAA,EAAAA,KAAe,UAAM,aAA2B,QAAZiC,GAChC,EAAK+kC,aAAc/kC,EAAU,EAAKglC,iBAElChlC,aAAmBO,QACnB,EAAK0kC,gBAAkBjlC,EAGvBA,EAAQ5B,OAAM,SAACC,GAAY,IAG3B,EAAK6mC,SAAS9mC,OAAM,SAACC,GAAY,QAE9B,CACH,IAAM8mC,GAAeloB,EAAAA,EAAAA,IAAS,0CAA+C,aAAxDA,CAAsEjd,GACvFmlC,IACApnC,EAAAA,EAAAA,KAAe,UAAM,WAAYonC,GACjC,EAAK5mB,KAAK,UAAW4mB,EAAc,OAGnC9lD,GAAOyb,mBAAmB,kBAAmB,UAAWkF,E,CAWxC,OAPxB,EAAKolC,yBAA2B,KAEhC,EAAKnE,kBAAoB,EACzB,EAAKoE,qBAAuB,GAE5B,EAAKC,iBAAmB,IAExB,EAAKC,eAAiB,EAAE,CAC5B,CAgEC,OAhEA,8BAEK,W,yIACmB,MAAjBnqD,KAAKoqD,SAAgB,iBACM,GAAvBxlC,EAAmB,MACnB5kB,KAAK6pD,gBAAiB,CAAF,gBAEN,OAFM,kBAEA7pD,KAAK6pD,gBAAe,OAApCjlC,EAAU,EAAH,gEAKA,MAAXA,EAAe,iBACL,OADK,UACC5kB,KAAK4pD,gBAAe,QAApChlC,EAAU,EAAH,aAKNA,GACD3gB,GAAOY,WAAW,sBAAuBX,EAAAA,GAAAA,OAAAA,cAA6B,CAAC,GAItD,MAAjBlE,KAAKoqD,WACDpqD,KAAK2pD,WACL3pD,KAAKoqD,SAAWxlC,GAEhBjC,EAAAA,EAAAA,IAAe3iB,KAAM,WAAY4kB,GAErC5kB,KAAKmjC,KAAK,UAAWve,EAAS,OACjC,iCAGE5kB,KAAKoqD,UAAQ,wD,GAKxB,iBACA,WAAS,WACL,OAAOjI,IAAK,WACR,OAAO,EAAK2H,SAASxkC,MAAK,SAACV,GACvB,OAAOA,CACX,IAAG,SAAC3B,GAEA,GAAIA,EAAM6C,OAAS5hB,EAAAA,GAAAA,OAAAA,eAA+C,cAAhB+e,EAAM8b,MAGxD,MAAM9b,CACV,GACJ,GACJ,GAEA,2BAaM,SAAcoB,EAAiBgmC,EAAkBC,G,0JAC/CtqD,KAAKypD,iBAAmC,IAAhBa,EAAKluD,OAAY,yCAAW,MAAI,OAEtDmuD,EAASlmC,EAAGkB,GAAGnE,cACfzd,EAAO0mD,EAASjpC,cAEhBopC,EAA+B,GAE5BnuD,EAAI,EAAC,YAAEA,EAAIiuD,EAAKluD,QAAM,iBASZ,OART+6C,EAAMmT,EAAKjuD,GAGX8hD,EAAOhH,EAAIrvC,QAAQ,WAAYyiD,GAAQziD,QAAQ,SAAUnE,GAGzDivC,EAAuBuE,EAAInyB,QAAQ,WAAa,EAAK,KAAMyJ,KAAK8P,UAAU,CAAE56B,KAAAA,EAAM4mD,OAAAA,IAAS,UAE5EtI,GAAU,CAAE9K,IAAKgH,EAAMgC,kBAAkB,GAAQvN,GAAM,SAAC52C,EAAOgjD,GAEhF,OADAhjD,EAAMmjD,OAASH,EAASE,WACjBljD,CACX,IAAE,QAHU,KAAN+B,EAAS,EAAH,MAKD4F,KAAM,CAAF,yCAAW5F,EAAO4F,MAAI,QAIrC,GAFM8mD,EAAgB1sD,EAAOooB,SAAW,kBAGpCpoB,EAAOohD,QAAU,KAAOphD,EAAOohD,OAAS,KAAG,0CACpCl7C,GAAOY,WAAW,yCAAD,OAA2C4lD,GAAiBvmD,EAAAA,GAAAA,OAAAA,aAA4B,CAAEizC,IAAAA,EAAKsT,aAAAA,KAAe,QAI1ID,EAAcrsD,KAAKssD,GAAc,QAxBJpuD,IAAG,gDA2B7B4H,GAAOY,WAAW,wCAAD,OAA0C2lD,EAAcz9B,KAAI,SAAC7X,GAAC,OAAKuZ,KAAK8P,UAAUrpB,EAAE,IAAEzW,KAAK,OAAUyF,EAAAA,GAAAA,OAAAA,aAA4B,CACrJomD,KAAAA,EAAME,cAAAA,KACR,gD,GAIN,qCACM,SAAwBE,G,mJAC1B,O,SAAM1qD,KAAK8pD,SAAQ,YAGfY,EAAS,GAAC,4BAGH1qD,KAAK2qD,qBAAsB,CAAF,gBAOT,OAJbC,EAAsB5qD,KAAK2qD,qBAAoB,kBAI5BC,EAAmB,OAA5B,GAAN7sD,EAAS,EAAH,OACP2nD,KAAY3nD,EAAO8sD,UAAaH,GAAM,0CAChC3sD,EAAO+kD,aAAW,yEAYzB9iD,KAAK2qD,uBAAyBC,EAAmB,4EAyCzD,OAlCFE,EAAUpF,KAEVqF,GAA2BnoC,EAAAA,EAAAA,IAAkB,CAC/CkgC,YAAa9iD,KAAKgrD,QAAQ,iBAAkB,CAAC,GAC7CC,aAAcjrD,KAAK2kB,aAAaW,MAAK,SAACV,GAAO,OAAM,IAAI,IAAG,SAAC3B,GAAK,OAAMA,CAAK,MAC5EqC,MAAK,YAAkC,IAA/Bw9B,EAAW,EAAXA,YAAamI,EAAY,EAAZA,aACpB,GAAIA,EAKA,MAHI,EAAKN,uBAAyBI,IAC9B,EAAKJ,qBAAuB,MAE1BM,EAGV,IAAMJ,EAAWnF,KAOjB,OALA5C,EAAcnjC,EAAAA,GAAAA,KAAemjC,GAAa94C,YACxB,EAAKggD,0BAA2BlH,EAAc,EAAKkH,yBAErE,EAAKA,wBAA0BlH,EAC/B,EAAKoI,oBAAoBpI,GAClB,CAAEA,YAAAA,EAAagI,QAAAA,EAASD,SAAAA,EACnC,IAEA7qD,KAAK2qD,qBAAuBI,EAG5BA,EAAyB/nC,OAAM,SAACC,GAExB,EAAK0nC,uBAAyBI,IAC9B,EAAKJ,qBAAuB,KAEpC,IAAG,UAEWI,EAAwB,wCAAEjI,aAAW,yD,GACtD,kBAEK,W,mJAQgB,OAPZqI,EAAS9B,KAGT+B,EAAgC,GAElCtI,EAAsB,KAAI,kBAEN9iD,KAAKqrD,wBAAwB,IAAMrrD,KAAKsrD,gBAAkB,GAAE,OAAhFxI,EAAc,EAAH,4BAEe,OAFf,yBAEX9iD,KAAKmjC,KAAK,QAAS,EAAF,IAAS,2BAQ9B,GALAnjC,KAAKkrD,oBAAoBpI,GAGzB9iD,KAAKmjC,KAAK,OAAQgoB,EAAQrI,GAGtBA,IAAgB9iD,KAAK6lD,iBAAgB,iBACR,OAA7B7lD,KAAKmjC,KAAK,UAAWgoB,GAAQ,2BASjC,IAJ6B,IAAzBnrD,KAAKwpD,SAASjoD,QACdvB,KAAKwpD,SAASjoD,MAAQuhD,EAAc,GAGpC77C,KAAK6E,IAAc9L,KAAKwpD,SAASjoD,MAAUuhD,GAAe,IAC1D7+C,GAAOk+B,KAAK,+DAAD,OAAiEniC,KAAKwpD,SAASjoD,MAAM,uBAAgBuhD,EAAY,MAC5H9iD,KAAKmjC,KAAK,QAASl/B,GAAOg5B,UAAU,8BAA+B/4B,EAAAA,GAAAA,OAAAA,cAA6B,CAC5F4+C,YAAaA,EACb/jB,MAAO,YACPwsB,oBAAqBvrD,KAAKwpD,SAASjoD,SAEvCvB,KAAKmjC,KAAK,QAAS2f,QAInB,IAASzmD,EAAa2D,KAAKwpD,SAASjoD,MAAS,EAAGlF,GAAKymD,EAAazmD,IAC9D2D,KAAKmjC,KAAK,QAAS9mC,GAiHyB,OA5GvC2D,KAAKwpD,SAASjoD,QAAWuhD,IAClC9iD,KAAKwpD,SAASjoD,MAAQuhD,EAEtB7iD,OAAO46B,KAAK76B,KAAKwpD,UAAU1pC,SAAQ,SAAC/f,GAEhC,GAAY,UAARA,EAAJ,CAGA,IAAMyrD,EAAmB,EAAKhC,SAASzpD,GAKd,YAArByrD,GAIA1I,EAAc0I,EAAmB,WAC1B,EAAKhC,SAASzpD,E,CAE7B,MAI2B,IAA3BC,KAAK6lD,mBACL7lD,KAAK6lD,iBAAmB/C,EAAc,GAG1C9iD,KAAKupD,QAAQzpC,SAAQ,SAACif,GAClB,OAAQA,EAAMzf,MACV,IAAK,KACD,IAAMlb,EAAO26B,EAAM36B,KACfqnD,EAAS,EAAK9rB,sBAAsBv7B,GAAMkhB,MAAK,SAACsZ,GAChD,OAAKA,GAAkC,MAAvBA,EAAQkkB,aACxB,EAAK0G,SAAS,KAAOplD,GAAQw6B,EAAQkkB,YACrC,EAAK3f,KAAK/+B,EAAMw6B,GACT,MAH+C,IAI1D,IAAG5b,OAAM,SAACC,GAAmB,EAAKkgB,KAAK,QAASlgB,EAAQ,IAExDmoC,EAAQjtD,KAAKstD,GAEb,MAGJ,IAAK,SAED,IAAK1sB,EAAM+mB,UAAW,CAClB/mB,EAAM+mB,WAAY,GAIc,IAA5B/mB,EAAM8mB,mBACN9mB,EAAM8mB,iBAAmB/C,EAAc,GAO3C,IAAMxkB,EAASS,EAAMT,OACrBA,EAAOyF,UAAYhF,EAAM8mB,iBAAmB,EAC5CvnB,EAAOsF,QAAUkf,EAIjB,IAAM4I,EAAeptB,EAAOsF,QAAU,EAAKqmB,qBACvCyB,EAAeptB,EAAOyF,YAAazF,EAAOyF,UAAY2nB,GAEtDptB,EAAOyF,UAAY,IAAKzF,EAAOyF,UAAY,GAE/C,IAAM0nB,EAAS,EAAKznB,QAAQ1F,GAAQhZ,MAAK,SAACwZ,GAEtCC,EAAM+mB,WAAY,EAEE,IAAhBhnB,EAAK1iC,QAET0iC,EAAKhf,SAAQ,SAACqW,GAGNA,EAAI2sB,YAAc/jB,EAAM8mB,mBACxB9mB,EAAM8mB,iBAAmB1vB,EAAI2sB,aAIjC,EAAK0G,SAAS,KAAOrzB,EAAIqJ,WAAarJ,EAAI2sB,YAC1C,EAAK0G,SAAS,KAAOrzB,EAAIuJ,iBAAmBvJ,EAAI2sB,YAEhD,EAAK3f,KAAK7E,EAAQnI,EACtB,GACJ,IAAGnT,OAAM,SAACC,GACN,EAAKkgB,KAAK,QAASlgB,GAGnB8b,EAAM+mB,WAAY,CACtB,IACAsF,EAAQjtD,KAAKstD,E,EAM7B,IAEAzrD,KAAK6lD,iBAAmB/C,EAGxB39B,QAAQC,IAAIgmC,GAAS9lC,MAAK,WACtB,EAAK6d,KAAK,UAAWgoB,EACzB,IAAGnoC,OAAM,SAACC,GAAY,EAAKkgB,KAAK,QAASlgB,EAAQ,IAAG,2E,GAKxD,8BACA,SAAiB6/B,GACb9iD,KAAK6lD,iBAAmB/C,EAAc,EAClC9iD,KAAK2rD,SAAW3rD,KAAKmiD,MAC7B,GAAC,mBAED,WACI,OAAOniD,KAAKoqD,QAChB,GAGA,2BACM,W,yJACKnmD,GAAOY,WAAW,8CAA+CX,EAAAA,GAAAA,OAAAA,sBAAqC,CACzGY,UAAW,4BACb,0C,GACL,wBAEK,W,0IACc,O,SAAM9E,KAAK8pD,SAAQ,OAKZ,OALjBllC,EAAU,EAAH,cAKgB5kB,KAAK4pD,gBAAe,OAA7B,GAAdgC,EAAiB,EAAH,KAChBhnC,EAAQC,UAAY+mC,EAAe/mC,QAAO,qBAItC7kB,KAAK2pD,WAAY,CAAF,gBAgBf,OAfA3pD,KAAKoqD,SAAWwB,EAGhB5rD,KAAK6lD,kBAAoB,EACzB7lD,KAAK6rD,iBAAmB,KACxB7rD,KAAK8rD,wBAA0B,KAC/B9rD,KAAKmqD,eAAiB,EACtBnqD,KAAKwpD,SAASjoD,OAAS,EACvBvB,KAAKgqD,yBAA2B,KAChChqD,KAAK2qD,qBAAuB,KAK5B3qD,KAAKmjC,KAAK,UAAWyoB,EAAgBhnC,GAAS,UACxC+8B,GAAM,GAAE,iCAEP3hD,KAAKoqD,UAAQ,QASE,MANpBnnC,EAAQhf,GAAOg5B,UAAU,6BAA8B/4B,EAAAA,GAAAA,OAAAA,cAA6B,CACtF66B,MAAO,UACPna,QAASA,EACTmnC,gBAAiBH,IAGrB5rD,KAAKmjC,KAAK,QAASlgB,GACbA,EAAK,iCAGR2B,GAAO,gD,GACjB,uBAED,WAAe,WAKX,OAJA5kB,KAAKqrD,wBAAwB,IAAMrrD,KAAKsrD,gBAAkB,GAAGhmC,MAAK,SAACw9B,GAC/D,EAAKoI,oBAAoBpI,EAC7B,IAAG,SAAC7/B,GAAY,IAEiB,MAAzBjjB,KAAK6rD,iBAA4B7rD,KAAK6rD,kBAAmB,CACrE,GAAC,mBAED,WACI,OAAwB,MAAhB7rD,KAAKgsD,OACjB,EAAC,IAED,SAAYhwD,GAAc,WAClBA,IAAUgE,KAAKgsD,SACfhsD,KAAKgsD,QAAUC,aAAY,WAAQ,EAAK9J,MAAQ,GAAGniD,KAAKsrD,iBAEnDtrD,KAAKksD,iBACNlsD,KAAKksD,eAAiBjrB,YAAW,WAC7B,EAAKkhB,OAIL,EAAK+J,eAAiBjrB,YAAW,WAGxB,EAAK+qB,SAAW,EAAK7J,OAG1B,EAAK+J,eAAiB,IAC1B,GAAG,EAAKZ,gBACZ,GAAG,MAGCtvD,GAASgE,KAAKgsD,UACtBG,cAAcnsD,KAAKgsD,SACnBhsD,KAAKgsD,QAAU,KAEvB,GAAC,2BAED,WACI,OAAOhsD,KAAKkqD,gBAChB,EAAC,IAED,SAAoBluD,GAAa,WAC7B,GAAsB,kBAAXA,GAAuBA,GAAS,GAAKC,SAASsC,OAAOvC,KAAWA,EACvE,MAAM,IAAIkB,MAAM,4BAGpB8C,KAAKkqD,iBAAmBluD,EAEpBgE,KAAKgsD,UACLG,cAAcnsD,KAAKgsD,SACnBhsD,KAAKgsD,QAAUC,aAAY,WAAQ,EAAK9J,MAAQ,GAAGniD,KAAKkqD,kBAEhE,GAAC,iCAED,WAAmB,WACTpV,EAAM4Q,KAaZ,OAVK5Q,EAAM90C,KAAKmqD,eAAkB,EAAInqD,KAAKkqD,mBACvClqD,KAAKmqD,eAAiBrV,EACtB90C,KAAK8rD,wBAA0B9rD,KAAKosD,iBAAiB9mC,MAAK,SAACw9B,GAIvD,OAH6B,MAAzB,EAAK+I,kBAA4B/I,EAAc,EAAK+I,oBACpD,EAAKA,iBAAmB/I,GAErB,EAAK+I,gBAChB,KAGG7rD,KAAK8rD,uBAChB,GAAC,iCAED,SAAoBhJ,GAEa,MAAzB9iD,KAAK6rD,kBAA4B/I,EAAc9iD,KAAK6rD,mBAGxD7rD,KAAKmqD,eAAiBzE,MAGO,MAAzB1lD,KAAK6rD,kBAA4B/I,EAAc9iD,KAAK6rD,oBACpD7rD,KAAK6rD,iBAAmB/I,EACxB9iD,KAAK8rD,wBAA0B3mC,QAAQE,QAAQy9B,IAEvD,GAAC,gCAEK,SAAmBpjB,EAAyBf,EAAwB0hB,G,yJAC/DrgD,KAAKqsD,oBAAoB3sB,EAAmC,MAAjBf,EAAyB,EAAGA,EAAe0hB,GAAW,EAAG,OAAK,+C,GACnH,iCAEK,SAAoB3gB,EAAyBf,EAAuB0hB,EAAiBiM,G,6IACvE,O,SAAMtsD,KAAK2/B,sBAAsBD,GAAgB,OAApD,OAAPd,EAAU,EAAH,MAGEA,EAAQD,cAAe,IAAMA,GAAa,yCAAWC,GAAO,gCAGpE,IAAIzZ,SAAQ,SAACE,EAAS2X,GACzB,IAAMuvB,EAAiC,GAEnC1rB,GAAO,EACL2rB,EAAc,WAChB,QAAI3rB,IACJA,GAAO,EACP0rB,EAAYzsC,SAAQ,SAACk2B,GAAWA,GAAQ,KACjC,EACX,EAEMyW,EAAe,SAAC7tB,GACdA,EAAQD,cAAgBA,GACxB6tB,KACJnnC,EAAQuZ,EACZ,EAIA,GAHA,EAAKpb,GAAGkc,EAAiB+sB,GACzBF,EAAYpuD,MAAK,WAAQ,EAAKohC,eAAeG,EAAiB+sB,EAAe,IAEzEH,EAAa,CACb,IAAII,EAAkBJ,EAAYK,WAC9BC,EAAuB,KACrBC,EAAiB,SAAjBA,EAAwB/J,GAAmB,OAAIt9B,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,qFAC7Cqb,EAAM,CAAF,gDAKR,OALQ,SAKF8gB,GAAM,KAAK,OAEjB3hD,KAAKkkB,oBAAoBooC,EAAYpnC,MAAMI,MAAK,SAAOM,GAAK,OAAIJ,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,0FACxDqb,EAAM,CAAF,qDAEJjb,GAAS0mC,EAAY1mC,OAAK,gBAC1B8mC,EAAkB5J,EAAY,uBAKZ,OALY,SAKN9iD,KAAKy/B,eAAeC,GAAgB,OAA7C,KAALotB,EAAQ,EAAH,OACuB,MAArBA,EAAMhK,YAAmB,mDAOtB,MAAhB8J,IACAA,EAAeF,EAAkB,GACdJ,EAAYK,aAC3BC,EAAeN,EAAYK,YAElC,aAEMC,GAAgB9J,GAAW,qBAC1BjiB,EAAM,CAAF,kDAEM,OAFN,UAEY7gC,KAAK+sD,yBAAyBH,GAAa,QAAzDrrD,EAAQ,EAAH,KACFyrD,EAAK,EAAC,aAAEA,EAAKzrD,EAAMuiD,aAAa1nD,QAAM,iBAG3C,IAFMioB,EAAK9iB,EAAMuiD,aAAakJ,IAGvB5oD,OAASs7B,EAAe,sDAG3Brb,EAAGa,OAASonC,EAAYpnC,MAAQb,EAAGuB,QAAU0mC,EAAY1mC,MAAK,qBAC1Dib,EAAM,CAAF,kDAGQ,OAHR,UAGc7gC,KAAKitD,mBAAmB5oC,EAAGjgB,KAAMu6B,GAAc,QAAxD,GAAPC,EAAU,EAAH,MAGT4tB,IAAe,CAAF,kDAiBb,OAdAv3B,EAAS,WACT5Q,EAAG1gB,OAAS2oD,EAAY3oD,MAAQ0gB,EAAGkB,KAAO+mC,EAAY/mC,IAAMlB,EAAGroB,MAAMgf,GAAGsxC,EAAYtwD,OACpFi5B,EAAS,WACW,OAAZ5Q,EAAG1gB,MAAiB0gB,EAAGa,OAASb,EAAGkB,IAAMlB,EAAGroB,MAAM6N,WAC1DorB,EAAS,aAIb+H,EAAO/4B,GAAOg5B,UAAU,2BAA4B/4B,EAAAA,GAAAA,OAAAA,qBAAoC,CACpFgpD,UAAuB,aAAXj4B,GAAoC,cAAXA,EACrCA,OAAAA,EACAk4B,YAAantD,KAAKotD,iBAAiB/oC,GACnCjgB,KAAMs7B,EACNd,QAAAA,KACA,2BA/BqCouB,IAAI,wBAoCrDJ,IAAe,4BAInB/rB,EAAM,CAAF,kDACR7gC,KAAK4gC,KAAK,QAASisB,GAAgB,gDAEtC,IAAE,SAAC5pC,GACI4d,GACJ,EAAKD,KAAK,QAASisB,EACvB,IAAG,+CACN,EAED,GAAIhsB,EAAQ,OACZ,EAAKD,KAAK,QAASisB,GAEnBN,EAAYpuD,MAAK,WACb,EAAKohC,eAAe,QAASstB,EACjC,G,CAGJ,GAAwB,kBAAbxM,GAAyBA,EAAU,EAAG,CAC7C,IAAMc,EAAQlgB,YAAW,WACjBurB,KACJxvB,EAAO/4B,GAAOg5B,UAAU,mBAAoB/4B,EAAAA,GAAAA,OAAAA,QAAuB,CAAEm8C,QAASA,IAClF,GAAGA,GACCc,EAAMkM,OAASlM,EAAMkM,QAEzBd,EAAYpuD,MAAK,WAAQmjD,aAAaH,EAAQ,G,CAEtD,KAAE,+C,GACL,4BAEK,W,yJACKnhD,KAAKqrD,wBAAwB,IAAE,+C,GACzC,yBAEK,W,sIACF,O,SAAMrrD,KAAK2kB,aAAY,OAER,OAFQ,SAEF3kB,KAAKgrD,QAAQ,cAAe,CAAC,GAAG,OAAzC,OAANjtD,EAAS,EAAH,gCAED4hB,EAAAA,GAAAA,KAAe5hB,IAAO,yDAEtBkG,GAAOY,WAAW,0BAA2BX,EAAAA,GAAAA,OAAAA,aAA4B,CAC5Em6C,OAAQ,cACRtgD,OAAAA,EAAQklB,MAAK,QACf,wD,GAET,wBAEK,SAAW2e,EAAyC/d,G,wIACtD,O,SAAM7jB,KAAK2kB,aAAY,OACR,OADQ,UACF/B,EAAAA,EAAAA,IAAkB,CACnC6C,QAASzlB,KAAK+nD,YAAYnmB,GAC1B/d,SAAU7jB,KAAKstD,aAAazpC,KAC9B,OAEa,OALTmhB,EAAS,EAAH,cAKShlC,KAAKgrD,QAAQ,aAAchmB,GAAO,OAA3C,OAANjnC,EAAS,EAAH,gCAED4hB,EAAAA,GAAAA,KAAe5hB,IAAO,2DAEtBkG,GAAOY,WAAW,0BAA2BX,EAAAA,GAAAA,OAAAA,aAA4B,CAC5Em6C,OAAQ,aACRrZ,OAAAA,EAAQjnC,OAAAA,EAAQklB,MAAK,QACvB,yD,GAET,iCAEK,SAAoB2e,EAAyC/d,G,wIAC/D,O,SAAM7jB,KAAK2kB,aAAY,OACR,OADQ,UACF/B,EAAAA,EAAAA,IAAkB,CACnC6C,QAASzlB,KAAK+nD,YAAYnmB,GAC1B/d,SAAU7jB,KAAKstD,aAAazpC,KAC9B,OAEa,OALTmhB,EAAS,EAAH,cAKShlC,KAAKgrD,QAAQ,sBAAuBhmB,GAAO,OAApD,OAANjnC,EAAS,EAAH,gCAED4hB,EAAAA,GAAAA,KAAe5hB,GAAQiM,YAAU,2DAEjC/F,GAAOY,WAAW,0BAA2BX,EAAAA,GAAAA,OAAAA,aAA4B,CAC5Em6C,OAAQ,sBACRrZ,OAAAA,EAAQjnC,OAAAA,EAAQklB,MAAK,QACvB,yD,GAET,qBAEK,SAAQ2e,EAAyC/d,G,wIACnD,O,SAAM7jB,KAAK2kB,aAAY,OACR,OADQ,UACF/B,EAAAA,EAAAA,IAAkB,CACnC6C,QAASzlB,KAAK+nD,YAAYnmB,GAC1B/d,SAAU7jB,KAAKstD,aAAazpC,KAC9B,OAEa,OALTmhB,EAAS,EAAH,cAKShlC,KAAKgrD,QAAQ,UAAWhmB,GAAO,OAAxC,OAANjnC,EAAS,EAAH,iCAEDqiB,EAAAA,EAAAA,IAAQriB,IAAO,2DAEfkG,GAAOY,WAAW,0BAA2BX,EAAAA,GAAAA,OAAAA,aAA4B,CAC5Em6C,OAAQ,UACRrZ,OAAAA,EAAQjnC,OAAAA,EAAQklB,MAAK,QACvB,yD,GAET,0BAEK,SAAa2e,EAAyCz2B,EAAgD0Y,G,wIACxG,O,SAAM7jB,KAAK2kB,aAAY,OACR,OADQ,UACF/B,EAAAA,EAAAA,IAAkB,CACnC6C,QAASzlB,KAAK+nD,YAAYnmB,GAC1B/d,SAAU7jB,KAAKstD,aAAazpC,GAC5B1Y,SAAUga,QAAQE,QAAQla,GAAUma,MAAK,SAAC9Q,GAAC,OAAK8vC,EAAAA,EAAAA,IAAS9vC,EAAE,MAC7D,OACa,OALTwwB,EAAS,EAAH,cAKShlC,KAAKgrD,QAAQ,eAAgBhmB,GAAO,OAA7C,OAANjnC,EAAS,EAAH,iCAEDqiB,EAAAA,EAAAA,IAAQriB,IAAO,2DAEfkG,GAAOY,WAAW,0BAA2BX,EAAAA,GAAAA,OAAAA,aAA4B,CAC5Em6C,OAAQ,eACRrZ,OAAAA,EAAQjnC,OAAAA,EAAQklB,MAAK,QACvB,yD,GAIV,8BACA,SAAiBoB,EAAiBjgB,EAAeuoD,GAAmB,WAChE,GAAY,MAARvoD,GAAwC,MAAxBu0B,EAAAA,EAAAA,IAAcv0B,GAAgB,MAAM,IAAIlH,MAAM,sCAElE,IAAMa,EAA8BsmB,EAwCpC,OArCY,MAARjgB,GAAgBigB,EAAGjgB,OAASA,GAC5BH,GAAOY,WAAW,2DAA4DX,EAAAA,GAAAA,OAAAA,cAA6B,CAAEqpD,aAAclpC,EAAGjgB,KAAMopD,aAAcppD,IAGtJrG,EAAO0gC,KAAO,SAAOgvB,EAAmBpN,GAAgB,OAAI76B,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,8EAiBxC,OAhBA,MAAZioC,IAAoBA,EAAW,GACpB,MAAXpN,IAAmBA,EAAU,GAG7B8M,OAAcnvC,EACD,IAAbyvC,GAAgC,MAAdd,IAClBQ,EAAc,CACVxpD,KAAM0gB,EAAG1gB,KACTuhB,KAAMb,EAAGa,KACTU,MAAOvB,EAAGuB,MACVL,GAAIlB,EAAGkB,GACPvpB,MAAOqoB,EAAGroB,MACV2wD,WAAAA,IAEP,SAEqB3sD,KAAKqsD,oBAAoBhoC,EAAGjgB,KAAMqpD,EAAUpN,EAAS8M,GAAY,OAA1E,GACE,OADTvuB,EAAU,EAAH,OACuB,IAAb6uB,EAAc,yCAAW,MAAI,OAWnD,OARDztD,KAAKwpD,SAAS,KAAOnlC,EAAGjgB,MAAQw6B,EAAQkkB,YAEjB,IAAnBlkB,EAAQugB,QACRl7C,GAAOY,WAAW,qBAAsBX,EAAAA,GAAAA,OAAAA,eAA8B,CAClEw7B,gBAAiBrb,EAAGjgB,KACpB+f,YAAaE,EACbua,QAASA,IAEhB,kBACMA,GAAO,gDACjB,EAEM7gC,CACX,GAAC,6BAEK,SAAgB2vD,G,4IAClB,O,SAAM1tD,KAAK2kB,aAAY,OACT,OADS,SACHQ,QAAQE,QAAQqoC,GAAmBpoC,MAAK,SAAAzkB,GAAC,OAAIuf,EAAAA,EAAAA,IAAQvf,EAAE,IAAC,OAGxD,OAHd8sD,EAAQ,EAAH,KAEa,OADlBtpC,EAAKrkB,KAAKmnD,UAAUhjC,YAAYupC,IAC/B/uB,gBAAyBta,EAAGsa,cAAgB,GAAI,SAC7B3+B,KAAKqrD,wBAAwB,IAAM,EAAIrrD,KAAKsrD,iBAAgB,OAErE,OAFXxI,EAAc,EAAH,yBAEM9iD,KAAKgrD,QAAQ,kBAAmB,CAAE0C,kBAAmBC,IAAQ,QAAtE,OAAJvpD,EAAO,EAAH,uBACHpE,KAAKotD,iBAAiB/oC,EAAIjgB,EAAM0+C,IAAY,QAGZ,MAHY,2BAE7C,KAAO3+B,YAAcE,EACrB,KAAOqb,gBAAkBrb,EAAGjgB,KAAK,+D,GAG9C,oCAEK,SAAuB+f,G,+IACL,O,SAAMA,EAAW,OA4BI,OA5BnCjE,EAAM,OAENmE,EAAU,CAAC,EAEjB,CAAC,OAAQ,MAAMvE,SAAQ,SAAC/f,GACD,MAAfmgB,EAAOngB,KACXskB,EAAGtkB,GAAOolB,QAAQE,QAAQnF,EAAOngB,IAAMulB,MAAK,SAAC1mB,GAAC,OAAMA,EAAI,EAAKmpD,YAAYnpD,GAAI,IAAI,IACrF,IAEA,CAAC,WAAY,WAAY,eAAgB,uBAAwB,SAASkhB,SAAQ,SAAC/f,GAC5D,MAAfmgB,EAAOngB,KACXskB,EAAGtkB,GAAOolB,QAAQE,QAAQnF,EAAOngB,IAAMulB,MAAK,SAAC1mB,GAAC,OAAMA,EAAI+gB,EAAAA,GAAAA,KAAe/gB,GAAI,IAAI,IACnF,IAEA,CAAC,QAAQkhB,SAAQ,SAAC/f,GACK,MAAfmgB,EAAOngB,KACXskB,EAAGtkB,GAAOolB,QAAQE,QAAQnF,EAAOngB,IAAMulB,MAAK,SAAC1mB,GAAC,OAAY,MAALA,EAAaA,EAAG,IAAI,IAC7E,IAEIshB,EAAOmb,aACPhX,EAAGgX,WAAar7B,KAAKmnD,UAAU9rB,WAAWnb,EAAOmb,aAGrD,CAAC,QAAQvb,SAAQ,SAAC/f,GACK,MAAfmgB,EAAOngB,KACXskB,EAAGtkB,GAAOolB,QAAQE,QAAQnF,EAAOngB,IAAMulB,MAAK,SAAC1mB,GAAC,OAAMA,GAAIwhB,EAAAA,EAAAA,IAAQxhB,GAAI,IAAI,IAC5E,IAAG,KAEIoB,KAAKmnD,UAAS,WAA0BvkC,EAAAA,EAAAA,IAAkByB,GAAG,kDAA9C6+B,mBAAkB,iE,GAC3C,wBAEK,SAAW5kB,G,6IACJ,O,SAAMA,EAAM,OAkBQ,OAlB7BA,EAAS,EAAH,KAEAvgC,EAAc,CAAC,EAEC,MAAlBugC,EAAO7Y,UACP1nB,EAAO0nB,QAAUzlB,KAAK+nD,YAAYzpB,EAAO7Y,UAG7C,CAAC,YAAa,UAAU3F,SAAQ,SAAC/f,GACH,MAAhBu+B,EAAQv+B,KAClBhC,EAAOgC,GAAau+B,EAAQv+B,GAChC,IAEA,CAAC,YAAa,WAAW+f,SAAQ,SAAC/f,GACJ,MAAhBu+B,EAAQv+B,KAClBhC,EAAOgC,GAAO,EAAKutD,aAAmBhvB,EAAQv+B,IAClD,IAAG,KAEIC,KAAKmnD,UAAS,WAAcvkC,EAAAA,EAAAA,IAAkB7kB,GAAO,kDAAtCugC,OAAM,iE,GAC/B,mBAEK,SAAMna,EAAiCN,EAAoB29B,G,kKAS9C,OARXA,GApkDe,IAqkDfv9C,GAAOY,WAAW,0CAA2CX,EAAAA,GAAAA,OAAAA,aAA4B,CACrF0pD,UAAWpM,EAASr9B,YAAAA,IAItB0pC,EAAW1pC,EAAYoB,GAAE,SAEVvlB,KAAKgrD,QAAQ,OAAQ,CAAE7mC,YAAAA,EAAaN,SAAAA,IAAW,OAAxD,GAAN9lB,EAAS,EAAH,OAGRyjD,GAAW,GAAkB,WAAb39B,GAAqC,MAAZgqC,GAAgD,eAA5B9vD,EAAO6hB,UAAU,EAAG,MAAyB+Y,EAAAA,EAAAA,IAAc56B,GAAU,KAAO,GAAE,iBAmBvI,IAnBuI,SAEjI4F,GAAOw2B,EAAAA,EAAAA,IAAap8B,EAAQ,GAG5BwsD,GAASpwB,EAAAA,EAAAA,IAAax2B,EAAM,EAAG,IAChCgc,EAAAA,GAAAA,KAAe4qC,GAAQvvC,GAAG6yC,IAC3B5pD,GAAOY,WAAW,iCAAkCX,EAAAA,GAAAA,OAAAA,eAA8B,CAC9EtH,KAAM,iBACN04B,UAAW,sDACXnR,YAAAA,EAAaxgB,KAAM5F,IAKrBusD,EAAsB,GACtBwD,EAAanuC,EAAAA,GAAAA,MAAewa,EAAAA,EAAAA,IAAax2B,EAAM,GAAI,KAAKqG,WACxD+jD,EAAapuC,EAAAA,GAAAA,MAAewa,EAAAA,EAAAA,IAAax2B,EAAMmqD,EAAYA,EAAa,KAAK9jD,WAC7EgkD,GAAW7zB,EAAAA,EAAAA,IAAax2B,EAAMmqD,EAAa,IACxC9uC,EAAI,EAAGA,EAAI+uC,EAAY/uC,IAEjB,OADLm4B,EAAMqP,GAAawH,EAAc,GAAJhvC,KAE/B/a,GAAOY,WAAW,yCAA0CX,EAAAA,GAAAA,OAAAA,eAA8B,CACtFtH,KAAM,iBACN04B,UAAW,sDACXnR,YAAAA,EAAaxgB,KAAM5F,IAG3BusD,EAAKnsD,KAAKg5C,GAmBK,OAfbkT,EAAW5D,GAAY9iD,EAAM,IAG9Bgc,EAAAA,GAAAA,MAAewa,EAAAA,EAAAA,IAAax2B,EAAM,IAAK,MAAMkG,UAC9C5F,GAAOY,WAAW,4CAA6CX,EAAAA,GAAAA,OAAAA,eAA8B,CACzFtH,KAAM,iBACN04B,UAAW,sDACXnR,YAAAA,EAAaxgB,KAAM5F,IAGrBkwD,GAAmB9zB,EAAAA,EAAAA,IAAax2B,EAAM,GAAI,KAG1CkgD,EAAY4C,GAAY9iD,EAAM,KAAI,UAEf3D,KAAKkuD,cAA2B/pC,EAAakmC,EAAUC,GAAK,QAYpF,OAXiB,OADZ6D,EAAa,EAAH,OAEZlqD,GAAOY,WAAW,yCAA0CX,EAAAA,GAAAA,OAAAA,eAA8B,CACtFtH,KAAM,iBACN04B,UAAW,sDACXnR,YAAAA,EAAaxgB,KAAM5F,IAIrBsmB,EAAK,CACPkB,GAAIsoC,EACJlqD,MAAM23B,EAAAA,EAAAA,IAAU,CAAE2yB,EAAkBlH,GAAY,CAAEoH,EAAYtK,OACjE,kBAEM7jD,KAAKouD,MAAM/pC,EAAIR,EAAU29B,EAAU,IAAE,qCAGxC,KAAM17B,OAAS5hB,EAAAA,GAAAA,OAAAA,aAA0B,wEAK1Ckc,EAAAA,EAAAA,IAAQriB,IAAO,4DAEfkG,GAAOY,WAAW,0BAA2BX,EAAAA,GAAAA,OAAAA,aAA4B,CAC5Em6C,OAAQ,OACRrZ,OAAQ,CAAE7gB,YAAAA,EAAaN,SAAAA,GAAY9lB,OAAAA,EAAQklB,MAAK,QAClD,iE,GAGT,kBAEK,SAAKkB,EAA6CN,G,sIACpD,O,SAAM7jB,KAAK2kB,aAAY,OACN,OADM,UACA/B,EAAAA,EAAAA,IAAkB,CACrCuB,YAAankB,KAAKquD,uBAAuBlqC,GACzCN,SAAU7jB,KAAKstD,aAAazpC,GAC5B6Y,gBAAiBvX,QAAQE,QAAQlB,EAAYuY,mBAC/C,OAJY,OAARoB,EAAW,EAAH,uBAKP99B,KAAKouD,MAAMtwB,EAAS3Z,YAAa2Z,EAASja,SAAUia,EAASpB,gBAAkB,GAAI,IAAE,+C,GAC/F,yBAEK,SAAYvY,G,wIACd,O,SAAMnkB,KAAK2kB,aAAY,OACR,OADQ,UACF/B,EAAAA,EAAAA,IAAkB,CACnCuB,YAAankB,KAAKquD,uBAAuBlqC,KAC3C,OAEa,OAJT6gB,EAAS,EAAH,cAIShlC,KAAKgrD,QAAQ,cAAehmB,GAAO,OAA5C,OAANjnC,EAAS,EAAH,gCAED4hB,EAAAA,GAAAA,KAAe5hB,IAAO,2DAEtBkG,GAAOY,WAAW,0BAA2BX,EAAAA,GAAAA,OAAAA,aAA4B,CAC5Em6C,OAAQ,cACRrZ,OAAAA,EAAQjnC,OAAAA,EAAQklB,MAAK,QACvB,yD,GAET,yBAEK,SAAY2e,G,sIACE,O,SAAMA,EAAa,OAKnB,MAJc,kBAD9BA,EAAgB,EAAH,OAET39B,GAAOyb,mBAAmB,8BAA+B,OAAQkiB,GACpE,SAEqB5hC,KAAK+kB,YAAY6c,GAAc,OAKpD,OAJc,OADTnc,EAAU,EAAH,OAETxhB,GAAOY,WAAW,0BAA2BX,EAAAA,GAAAA,OAAAA,sBAAqC,CAC9EY,UAAW,eAAF,OAAkB2pB,KAAK8P,UAAUqD,GAAe,OAEhE,kBACMnc,GAAO,+C,GACjB,uBAEK,SAAU6oC,EAAqEC,G,+IACjF,O,SAAMvuD,KAAK2kB,aAAY,OAED,OAFC,SAEK2pC,EAAmB,OAO9C,GAPDA,EAAsB,EAAH,KAGfxL,GAAe,IAEb9d,EAAiC,CACnCupB,sBAAuBA,KAGvBzqB,EAAAA,EAAAA,IAAYwqB,EAAqB,IAAK,CAAF,gBACpCtpB,EAAOxF,UAAY8uB,EAAoB,wBAGjB,OAHiB,oBAGXtuD,KAAKstD,aAAagB,GAAoB,QAA9DtpB,EAAOnhB,SAAW,EAAH,MACXigB,EAAAA,EAAAA,IAAYkB,EAAOnhB,YACnBi/B,EAAc7mD,SAAS+oC,EAAOnhB,SAASjE,UAAU,GAAI,KACxD,mDAED3b,GAAOyb,mBAAmB,kCAAmC,sBAAuB4uC,GAAqB,iCAI1GnM,IAAK,kBAAW38B,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,6FACL,OADK,SACCxlB,KAAKgrD,QAAQ,WAAYhmB,GAAO,OAAzC,GAGE,OAHPzjC,EAAQ,EAAH,MAGM,oBAKW,MAApByjC,EAAOxF,UAAiB,mBACsB,MAA1Cx/B,KAAKwpD,SAAS,KAAOxkB,EAAOxF,WAAkB,yCAAW,MAAI,UAI9C,MAAnBwF,EAAOnhB,SAAgB,sBACnBi/B,EAAc9iD,KAAKwpD,SAASjoD,OAAK,0CAAW,MAAI,sCAIjDyc,GAAS,YAIhBuwC,EAAqB,CAAF,gBACfzL,EAAsB,KACjBzmD,EAAI,EAAC,aAAEA,EAAIkF,EAAMuiD,aAAa1nD,QAAM,iBACT,GACV,OADhBioB,EAAK9iB,EAAMuiD,aAAaznD,IACvBymD,YAAmB,iBACtBz+B,EAAGsa,cAAgB,EAAE,2BAEM,MAApBta,EAAGsa,cAAqB,oBACZ,MAAfmkB,EAAmB,iBACL,OADK,UACC9iD,KAAKqrD,wBAAwB,IAAM,EAAIrrD,KAAKsrD,iBAAgB,QAAhFxI,EAAc,EAAH,cAIXnkB,EAAiBmkB,EAAcz+B,EAAGy+B,YAAe,IAChC,IAAKnkB,EAAgB,GAC1Cta,EAAGsa,cAAgBA,EAAc,QAbMtiC,IAAG,wBAkBgE,OAD5GmyD,EAAoBxuD,KAAKmnD,UAAUpD,sBAAsBxiD,IAClDuiD,aAAe0K,EAAa1K,aAAa/2B,KAAI,SAAC1I,GAAuB,OAAK,EAAK+oC,iBAAiB/oC,EAAG,IAAE,kBAC3GmqC,GAAY,iCAGhBxuD,KAAKmnD,UAAU5lD,MAAMA,IAAM,gDAErC,GAAE,CAAEghD,SAAUviD,QAAO,0D,GACzB,sBAED,SAASsuD,GACL,OAAwBtuD,KAAKyuD,UAAUH,GAAqB,EAChE,GAAC,sCAED,SAAyBA,GACrB,OAAwCtuD,KAAKyuD,UAAUH,GAAqB,EAChF,GAAC,4BAEK,SAAe5uB,G,6IACjB,O,SAAM1/B,KAAK2kB,aAAY,OACL,OADK,SACC+a,EAAe,OAEuC,OAF9EA,EAAkB,EAAH,KAETsF,EAAS,CAAEtF,gBAAiB1/B,KAAKmnD,UAAU/iD,KAAKs7B,GAAiB,IAAO,kBAEvEyiB,IAAK,kBAAW38B,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,kFACJ,OADI,SACExlB,KAAKgrD,QAAQ,iBAAkBhmB,GAAO,OAA/C,GAEE,OAFRjnC,EAAS,EAAH,MAEM,mBAC+B,MAAzCiC,KAAKwpD,SAAS,KAAO9pB,GAAwB,yCACtC,MAAI,qCAER1hB,GAAS,OAGiC,GAE/B,OAFhBqG,EAAKrkB,KAAKmnD,UAAUnD,oBAAoBjmD,IAEvC+kD,YAAmB,iBACtBz+B,EAAGsa,cAAgB,EAAE,2BAEM,MAApBta,EAAGsa,cAAqB,iBACX,OADW,UACL3+B,KAAKqrD,wBAAwB,IAAM,EAAIrrD,KAAKsrD,iBAAgB,QAAhFxI,EAAc,EAAH,MAGbnkB,EAAiBmkB,EAAcz+B,EAAGy+B,YAAe,IAChC,IAAKnkB,EAAgB,GAC1Cta,EAAGsa,cAAgBA,EAAc,iCAG9B3+B,KAAKotD,iBAAiB/oC,IAAG,gDACnC,GAAE,CAAEk+B,SAAUviD,QAAO,+C,GACzB,mCAEK,SAAsB0/B,G,6IACxB,O,SAAM1/B,KAAK2kB,aAAY,OAEL,OAFK,SAEC+a,EAAe,OAEuC,OAF9EA,EAAkB,EAAH,KAETsF,EAAS,CAAEtF,gBAAiB1/B,KAAKmnD,UAAU/iD,KAAKs7B,GAAiB,IAAO,kBAEvEyiB,IAAK,kBAAW38B,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,kFACJ,OADI,SACExlB,KAAKgrD,QAAQ,wBAAyBhmB,GAAO,OAAtD,GAEE,OAFRjnC,EAAS,EAAH,MAEM,mBAC+B,MAAzCiC,KAAKwpD,SAAS,KAAO9pB,GAAwB,yCACtC,MAAI,qCAER1hB,GAAS,UAII,MAApBjgB,EAAOyhC,UAAiB,8CAAWxhB,GAAS,OAEF,GAEnB,OAFrB4gB,EAAU5+B,KAAKmnD,UAAUvoB,QAAQ7gC,IAE3B+kD,YAAmB,iBAC3BlkB,EAAQD,cAAgB,EAAE,2BAEM,MAAzBC,EAAQD,cAAqB,iBAChB,OADgB,UACV3+B,KAAKqrD,wBAAwB,IAAM,EAAIrrD,KAAKsrD,iBAAgB,QAAhFxI,EAAc,EAAH,MAGbnkB,EAAiBmkB,EAAclkB,EAAQkkB,YAAe,IACrC,IAAKnkB,EAAgB,GAC1CC,EAAQD,cAAgBA,EAAc,iCAGnCC,GAAO,gDACjB,GAAE,CAAE2jB,SAAUviD,QAAO,+C,GACzB,qBAEK,SAAQs+B,G,wIACV,O,SAAMt+B,KAAK2kB,aAAY,OACR,OADQ,UACF/B,EAAAA,EAAAA,IAAkB,CAAE0b,OAAQt+B,KAAK0uD,WAAWpwB,KAAU,OAClD,OADnB0G,EAAS,EAAH,cACmBhlC,KAAKgrD,QAAQ,UAAWhmB,GAAO,OAG3D,OAHGlG,EAAI,QACLhf,SAAQ,SAACqW,GACS,MAAfA,EAAI+tB,UAAmB/tB,EAAI+tB,SAAU,EAC7C,IAAG,kBACIzB,GAAUW,QAAQpjD,KAAKmnD,UAAUlD,UAAUvlB,KAAK1+B,KAAKmnD,WAArD1E,CAAiE3jB,IAAK,gD,GAChF,2BAEK,W,gIACF,O,SAAM9+B,KAAK2kB,aAAY,gCAChB3kB,KAAKgrD,QAAQ,gBAAiB,CAAC,IAAG,+C,GAC5C,0BAEK,SAAannC,G,sIACJ,O,SAAMA,EAAQ,OAAjB,KAEiB,kBAFzBA,EAAW,EAAH,OAE6BA,EAAW,GAAC,iBAK3B,OAJdA,EAAW,GACX5f,GAAOyb,mBAAmB,mBAAoB,WAAYmE,GAC7D,SAEuB7jB,KAAKqrD,wBAAwB,IAAM,EAAIrrD,KAAKsrD,iBAAgB,OAE3C,OAFrCxI,EAAc,EAAH,MACfA,GAAej/B,GACG,IAAKi/B,EAAc,GAAI,kBAClC9iD,KAAKmnD,UAAUtjC,SAASi/B,IAAY,iCAGxC9iD,KAAKmnD,UAAUtjC,SAASA,IAAS,gD,GAC3C,yBAGK,SAAYjnB,G,0IACV+xD,EAAc/xD,EAAI,OACX,GACa,KAAhB+xD,GAAsC,MAAhBA,EAAmB,yCAAW,MAAI,UAI/C,QAAT/xD,GAAkC,QAAhB+xD,EAAqB,yCAAW,MAAI,OAG7C,OAH6C,SAGvC3uD,KAAK4uD,aAAaD,EAAa,eAAc,OAAtD,GAGE,OAHNl0B,EAAO,EAAH,MAGM,iBAIY,GAHlBkC,EAAW,IAAIuqB,GAASlnD,KAAMy6B,EAAM79B,GAE1C,KACI+xD,IAAgB/xD,GAAI,sBAAM,OAAN,UAAY+/B,EAAS4qB,mBAAkB,gFAAY,MAAI,iCAExE5qB,GAAQ,QAInBgyB,EAAcA,EAAY7wC,MAAM,KAAKjhB,MAAM,GAAG4B,KAAK,KAAK,+D,GAG/D,0BAEK,SAAa7B,EAAckI,G,wIAGb,OAFC,MAAbA,IAAqBA,EAAY,OAAQ,SAEvB9E,KAAK2kB,aAAY,OAalB,OAbfC,EAAU,EAAH,MAGA0yB,YACTrzC,GAAOY,WACH,+BACAX,EAAAA,GAAAA,OAAAA,sBACA,CAAEY,UAAAA,EAAW8f,QAASA,EAAQhoB,OAErC,kBAI0BoD,KAAKhD,KAAK,CAC7BuoB,GAAIX,EAAQ0yB,WACZ3zC,KAAO,aAAeq6C,GAASphD,GAAMgjB,UAAU,KACjD,OAHY,OAARivC,EAAW,EAAH,uBAIP7uD,KAAKmnD,UAAUU,YAAYgH,IAAS,mEAKxC,MAAI,yD,GACd,yBAEK,SAAYjyD,G,sIACP,O,SAAMA,EAAI,OAAb,OAAJA,EAAO,EAAH,gCAIOuoB,QAAQE,QAAQrlB,KAAKmnD,UAAU1hC,QAAQ7oB,KAAM,qCAGhDknC,EAAAA,EAAAA,IAAYlnC,GAAO,CAAF,mCAQR,MALI,kBAAVA,GACPqH,GAAOyb,mBAAmB,mBAAoB,OAAQ9iB,GAG1D,UACuBoD,KAAK8uD,YAAYlyD,GAAK,QAA/B,GAAR+/B,EAAW,EAAH,KACC,CAAF,yCAAW,MAAI,QAErB,OAFqB,UAEfA,EAAS1Y,aAAY,iG,GACrC,2BAEK,SAAcwB,G,0IACN,O,SAAMA,EAAO,OAKF,OALrBA,EAAU,EAAH,KACPA,EAAUzlB,KAAKmnD,UAAU1hC,QAAQA,GAE3BksB,EAAOlsB,EAAQ7F,UAAU,GAAGwB,cAAgB,gBAAe,SAEtCphB,KAAK4uD,aAAajd,EAAM,iBAAgB,OAAjD,GACE,OADdod,EAAe,EAAH,MACM,0CAAW,MAAI,QAGb,OAHa,KAG1BvI,GAAY,UAAOxmD,KAAKhD,KAAK,CACtCuoB,GAAIwpC,EACJprD,KAAO,aAAeq6C,GAASrM,GAAM/xB,UAAU,KACjD,QAEW,OAFX,YAHIhjB,GAAO,EAAH,WAGN,GAAC,UAEcoD,KAAK+kB,YAAYnoB,GAAK,QAA/B,GAAG,EAAH,MACE6oB,EAAO,0CAAW,MAAI,iCAE3B7oB,GAAI,gD,GACd,uBAEK,SAAUoyD,G,kJACiB,GAAzBryB,EAAqB,OACrBmH,EAAAA,EAAAA,IAAYkrB,GAAgB,CAAF,gBAMF,OAJlBvpC,EAAUzlB,KAAKmnD,UAAU1hC,QAAQupC,GAEjCrd,EAAOlsB,EAAQ7F,UAAU,GAAGwB,cAAgB,gBAAe,SAEnCphB,KAAK4uD,aAAajd,EAAM,aAAY,OAA7C,GAAfsd,EAAkB,EAAH,KACC,CAAF,wCAAW,MAAI,OAKhB,OAFnBtyB,EAAW,IAAIuqB,GAASlnD,KAAMivD,EAAiBtd,GAAM,oBAE5BhV,EAASuyB,YAAW,QAA7B,KAAN/G,EAAS,EAAH,MACA,CAAF,yCAAWA,EAAOhR,KAAG,8DAE3B,KAAMrxB,OAAS5hB,EAAAA,GAAAA,OAAAA,eAA4B,oCAMrB,OANqB,eAMlCsiD,GAAY,UAAOxmD,KAAKhD,KAAK,CACtCuoB,GAAI0pC,EACJtrD,KAAO,aAAeq6C,GAASrM,GAAM/xB,UAAU,KACjD,QACS,OADT,YAHIhjB,GAAO,EAAH,WAGN,GAAC,UACYoD,KAAK8uD,YAAYlyD,GAAK,QAAvC+/B,EAAW,EAAH,2DAEJ,KAAM7W,OAAS5hB,EAAAA,GAAAA,OAAAA,eAA4B,6DACxC,MAAI,gCAKJ,OALI,UAKElE,KAAK8uD,YAAYE,GAAc,QAAxC,GAARryB,EAAW,EAAH,KACO,CAAF,yCAAW,MAAI,QAGjB,OAHiB,UAGXA,EAASuyB,YAAW,QAA7B,GACE,OADR/G,EAAS,EAAH,MACM,0CAAW,MAAI,iCAE1BA,EAAOhR,KAAG,kE,GACpB,qBAED,SAAQkH,EAAgBrZ,GACpB,OAAO/gC,GAAOY,WAAWw5C,EAAS,mBAAoBn6C,EAAAA,GAAAA,OAAAA,gBAA+B,CAAEY,UAAWu5C,GACtG,GAAC,yBAED,SAAYtf,GACR/+B,KAAK2rD,QAAW3rD,KAAKupD,QAAQjrB,QAAO,SAACj4B,GAAC,OAAKA,EAAE8oD,UAAU,IAAE/yD,OAAS,CACtE,GAAC,wBAED,SAAW2iC,GACP/+B,KAAK2rD,QAAW3rD,KAAKupD,QAAQjrB,QAAO,SAACj4B,GAAC,OAAKA,EAAE8oD,UAAU,IAAE/yD,OAAS,CACtE,GAAC,+BAED,SAAkBknB,EAAsBC,EAAoBqd,GACxD,IAAM7B,EAAQ,IAAI6mB,GAAMrlB,GAAYjd,GAAYC,EAAUqd,GAI1D,OAHA5gC,KAAKupD,QAAQprD,KAAK4gC,GAClB/+B,KAAKovD,YAAYrwB,GAEV/+B,IACX,GAAC,gBAED,SAAGsjB,EAAsBC,GACrB,OAAOvjB,KAAKikC,kBAAkB3gB,EAAWC,GAAU,EACvD,GAAC,kBAED,SAAKD,EAAsBC,GACvB,OAAOvjB,KAAKikC,kBAAkB3gB,EAAWC,GAAU,EACvD,GAAC,kBAGD,SAAKD,GAAyC,kCAAhBga,EAAgB,iCAAhBA,EAAgB,kBAC1C,IAAIv/B,GAAS,EAETsxD,EAAwB,GAExBC,EAAW/uB,GAAYjd,GAoB3B,OAnBAtjB,KAAKupD,QAAUvpD,KAAKupD,QAAQjrB,QAAO,SAACS,GAChC,OAAIA,EAAM2B,MAAQ4uB,IAElBruB,YAAW,WACPlC,EAAMxb,SAASzB,MAAM,EAAMwb,EAC/B,GAAG,GAEHv/B,GAAS,GAELghC,EAAM6B,OACNyuB,EAAQlxD,KAAK4gC,IACN,GAIf,IAEAswB,EAAQvvC,SAAQ,SAACif,GAAY,EAAKwwB,WAAWxwB,EAAQ,IAE9ChhC,CACX,GAAC,2BAED,SAAculB,GACV,IAAKA,EAAa,OAAOtjB,KAAKupD,QAAQntD,OAEtC,IAAIkzD,EAAW/uB,GAAYjd,GAC3B,OAAOtjB,KAAKupD,QAAQjrB,QAAO,SAACS,GACxB,OAAQA,EAAM2B,MAAQ4uB,CAC1B,IAAGlzD,MACP,GAAC,uBAED,SAAUknB,GACN,GAAiB,MAAbA,EACA,OAAOtjB,KAAKupD,QAAQx8B,KAAI,SAACgS,GAAK,OAAKA,EAAMxb,QAAQ,IAGrD,IAAI+rC,EAAW/uB,GAAYjd,GAC3B,OAAOtjB,KAAKupD,QACPjrB,QAAO,SAACS,GAAK,OAAMA,EAAM2B,MAAQ4uB,CAAQ,IACzCviC,KAAI,SAACgS,GAAK,OAAKA,EAAMxb,QAAQ,GACtC,GAAC,iBAED,SAAID,EAAsBC,GAAmB,WACzC,GAAgB,MAAZA,EACA,OAAOvjB,KAAKokC,mBAAmB9gB,GAGnC,IAAM+rC,EAAwB,GAE1BzlB,GAAQ,EAER0lB,EAAW/uB,GAAYjd,GAW3B,OAVAtjB,KAAKupD,QAAUvpD,KAAKupD,QAAQjrB,QAAO,SAACS,GAChC,OAAIA,EAAM2B,MAAQ4uB,GAAYvwB,EAAMxb,UAAYA,MAC5CqmB,IACJA,GAAQ,EACRylB,EAAQlxD,KAAK4gC,IACN,GACX,IAEAswB,EAAQvvC,SAAQ,SAACif,GAAY,EAAKwwB,WAAWxwB,EAAQ,IAE9C/+B,IACX,GAAC,gCAED,SAAmBsjB,GAAqB,WAChC+rC,EAAwB,GAC5B,GAAiB,MAAb/rC,EACA+rC,EAAUrvD,KAAKupD,QAEfvpD,KAAKupD,QAAU,OACZ,CACH,IAAM+F,EAAW/uB,GAAYjd,GAC7BtjB,KAAKupD,QAAUvpD,KAAKupD,QAAQjrB,QAAO,SAACS,GAChC,OAAIA,EAAM2B,MAAQ4uB,IAClBD,EAAQlxD,KAAK4gC,IACN,EACX,G,CAKJ,OAFAswB,EAAQvvC,SAAQ,SAACif,GAAY,EAAKwwB,WAAWxwB,EAAQ,IAE9C/+B,IACX,IAAC,2BAr1CD,WAII,OAHwB,MAApBopD,KACAA,GAAmB,IAAI3G,IAEpB2G,EACX,GAEA,wBACA,SAAkBxkC,GACd,OAAOD,GAAuB,MAAXC,EAAmB,YAAaA,EACvD,KAAC,EA/JqB,CAAQnC,G,mTC5qB5Bxe,GAAS,IAAIC,EAAAA,GAAOi0B,IAKpBq3B,GAAW,CAAE,OAAQ,eAE3B,SAASC,GAAQzzD,EAAY0zD,GACzB,GAAa,MAAT1zD,EAAiB,OAAO,KAG5B,GAA8B,kBAAnBA,EAAMmqB,SAAyBnqB,EAAMmqB,QAAQ1G,MAAM,YAAa,CACvE,IAAM9b,GAAOmgC,EAAAA,EAAAA,IAAY9nC,EAAM2H,MAAQ3H,EAAM2H,KAAM,KACnD,IAAK+rD,GAAe/rD,EAChB,MAAO,CAAEwiB,QAASnqB,EAAMmqB,QAASxiB,KAAAA,E,CAKzC,GAAsB,kBAAX3H,EAAqB,CAC5B,IAAK,IAAM+D,KAAO/D,EAAO,CACrB,IAAM+B,EAAS0xD,GAAQzzD,EAAM+D,GAAM2vD,GACnC,GAAI3xD,EAAU,OAAOA,C,CAEzB,OAAO,I,CAIX,GAAsB,kBAAX/B,EACP,IACI,OAAOyzD,GAAQhhC,KAAKC,MAAM1yB,GAAQ0zD,EACrB,CAAf,MAAOzsC,GAAQ,CAGrB,OAAO,IACX,CAEA,SAAS0sC,GAAWtR,EAAgBp7B,EAAY+hB,GAE5C,IAAM7gB,EAAc6gB,EAAO7gB,aAAe6gB,EAAO0oB,kBAIjD,GAAe,SAAXrP,EAAmB,CACnB,IAAMtgD,EAAS0xD,GAAQxsC,GAAO,GAC9B,GAAIllB,EAAU,OAAOA,EAAO4F,KAG5BM,GAAOY,WAAW,sFAAuFX,EAAAA,GAAAA,OAAAA,eAA8B,CACnIP,KAAM,KAAMwgB,YAAAA,EAAalB,MAAAA,G,CAIjC,GAAe,gBAAXo7B,EAA0B,CAE1B,IAAItgD,EAAS0xD,GAAQxsC,EAAMs7B,MAAM,GACnB,MAAVxgD,IAAkBA,EAAS0xD,GAAQxsC,GAAO,IAG1CllB,GACAkG,GAAOY,WAAW,4EAA6EX,EAAAA,GAAAA,OAAAA,wBAAuC,CAClI+wB,OAAQl3B,EAAOooB,QAASk4B,OAAAA,EAAQl6B,YAAAA,EAAalB,MAAAA,G,CAOzD,IAAIkD,EAAUlD,EAAMkD,QA4CpB,MA3CIlD,EAAM6C,OAAS5hB,EAAAA,GAAAA,OAAAA,cAA8B+e,EAAMA,OAAyC,kBAAzBA,EAAMA,MAAMkD,QAC/EA,EAAUlD,EAAMA,MAAMkD,QACQ,kBAAhBlD,EAAMs7B,KACpBp4B,EAAUlD,EAAMs7B,KACsB,kBAAxBt7B,EAAM2sC,eACpBzpC,EAAUlD,EAAM2sC,eAEpBzpC,GAAWA,GAAW,IAAI/E,eAGd3B,MAAM,qEACdxb,GAAOY,WAAW,oDAAqDX,EAAAA,GAAAA,OAAAA,mBAAkC,CACrG+e,MAAAA,EAAOo7B,OAAAA,EAAQl6B,YAAAA,IAKnBgC,EAAQ1G,MAAM,yBACdxb,GAAOY,WAAW,8BAA+BX,EAAAA,GAAAA,OAAAA,cAA6B,CAC1E+e,MAAAA,EAAOo7B,OAAAA,EAAQl6B,YAAAA,IAKnBgC,EAAQ1G,MAAM,wEACdxb,GAAOY,WAAW,0BAA2BX,EAAAA,GAAAA,OAAAA,wBAAuC,CAChF+e,MAAAA,EAAOo7B,OAAAA,EAAQl6B,YAAAA,IAKnBgC,EAAQ1G,MAAM,2BACdxb,GAAOY,WAAW,gDAAiDX,EAAAA,GAAAA,OAAAA,sBAAqC,CACpG+e,MAAAA,EAAOo7B,OAAAA,EAAQl6B,YAAAA,IAInBqrC,GAASxqC,QAAQq5B,IAAW,GAAKl4B,EAAQ1G,MAAM,wFAC/Cxb,GAAOY,WAAW,4EAA6EX,EAAAA,GAAAA,OAAAA,wBAAuC,CAClI+e,MAAAA,EAAOo7B,OAAAA,EAAQl6B,YAAAA,IAIjBlB,CACV,CAEA,SAASk+B,GAAMd,GACX,OAAO,IAAIl7B,SAAQ,SAASE,GACxB4b,WAAW5b,EAASg7B,EACxB,GACJ,CAEA,SAASwP,GAAUxzB,GACf,GAAIA,EAAQpZ,MAAO,CAEf,IAAMA,EAAa,IAAI/lB,MAAMm/B,EAAQpZ,MAAMkD,SAG3C,MAFAlD,EAAM6C,KAAOuW,EAAQpZ,MAAM6C,KAC3B7C,EAAMtf,KAAO04B,EAAQpZ,MAAMtf,KACrBsf,C,CAGV,OAAOoZ,EAAQt+B,MACnB,CAEA,SAAS+xD,GAAa9zD,GAClB,OAAIA,EAAgBA,EAAMolB,cACnBplB,CACX,CAEA,IAAMwpC,GAAoB,CAAC,EAEduqB,GAAc,0CAKvB,WAAYvpB,EAAuBziB,EAA2BisC,GAAgC,MAG1F,IAH0F,eAC1F,eAEIxpB,IAAqBhB,GACrB,MAAM,IAAItoC,MAAM,8EAiBnB,OAdDylB,EAAAA,EAAAA,KAAe,UAAM,WAAYoB,GAEX,MAAlBisC,IAA0BA,EAAiB,GAEhB,kBAApBA,IACPrtC,EAAAA,EAAAA,KAAe,UAAM,WAAY,EAAKoB,SAASojC,UAAU1hC,QAAQuqC,KACjErtC,EAAAA,EAAAA,KAAe,UAAM,SAAU,OAEG,kBAApBqtC,IACdrtC,EAAAA,EAAAA,KAAe,UAAM,SAAUqtC,IAC/BrtC,EAAAA,EAAAA,KAAe,UAAM,WAAY,OAGjC1e,GAAOyb,mBAAmB,2BAA4B,iBAAkBswC,GAC3E,CACL,CAoLC,OApLA,+BAED,SAAQjsC,GACJ,OAAO9f,GAAOY,WAAW,0CAA2CX,EAAAA,GAAAA,OAAAA,sBAAqC,CACrGY,UAAW,WAEnB,GAAC,8BAED,WACI,OAAO,IAAImrD,GAAuBzqB,GAAmBxlC,KAAK+jB,SAAU/jB,KAAKkwD,UAAYlwD,KAAKmwD,OAC9F,GAAC,wBAED,WAAU,WACN,OAAInwD,KAAKkwD,SACE/qC,QAAQE,QAAQrlB,KAAKkwD,UAGzBlwD,KAAK+jB,SAASqsC,KAAK,eAAgB,IAAI9qC,MAAK,SAAC+qC,GAMhD,OALIA,EAASj0D,QAAU,EAAK+zD,QACxBlsD,GAAOY,WAAW,oBAAsB,EAAKsrD,OAAQjsD,EAAAA,GAAAA,OAAAA,sBAAqC,CACtFY,UAAW,eAGZ,EAAKif,SAASojC,UAAU1hC,QAAQ4qC,EAAS,EAAKF,QACzD,GACJ,GAAC,sCAED,SAAyBhsC,GAA2C,WAChEA,GAAcc,EAAAA,EAAAA,IAAYd,GAE1B,IAAMmsC,EAActwD,KAAKikB,aAAaqB,MAAK,SAACG,GAExC,OADIA,IAAWA,EAAUA,EAAQrE,eAC1BqE,CACX,IAKA,GAA4B,MAAxBtB,EAAY0B,SAAkB,CAC9B,IAAM0qC,GAAWtrC,EAAAA,EAAAA,IAAYd,GAC7BosC,EAASrrC,KAAOorC,EAChBnsC,EAAY0B,SAAW7lB,KAAK+jB,SAASO,YAAYisC,E,CAcrD,OAXsB,MAAlBpsC,EAAYoB,KACZpB,EAAYoB,GAAKJ,QAAQE,QAAQlB,EAAYoB,IAAID,MAAK,SAAOC,GAAE,OAAIC,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,+EACrD,MAAND,EAAU,yCAAW,MAAI,OACb,OADa,SACPvlB,KAAK+jB,SAASgB,YAAYQ,GAAG,OAGlD,OAFc,OADTE,EAAU,EAAH,OAETxhB,GAAOyb,mBAAmB,qCAAsC,QAAS6F,GAC5E,kBACME,GAAO,+CACjB,MAGE7C,EAAAA,EAAAA,IAAkB,CACrByB,IAAIzB,EAAAA,EAAAA,IAAkBuB,GACtBomC,OAAQ+F,IACThrC,MAAK,YAAmB,IAAhBjB,EAAE,EAAFA,GAAIkmC,EAAM,EAANA,OAEI,MAAXlmC,EAAGa,KACCb,EAAGa,KAAK9D,gBAAkBmpC,GAC1BtmD,GAAOyb,mBAAmB,wBAAyB,cAAeyE,GAGtEE,EAAGa,KAAOqlC,EAGd,IAAMoD,EAAc,EAAK5pC,SAASxe,YAAairD,mBAAmBnsC,EAAI,CAAEa,MAAM,IAE9E,OAAO,EAAKnB,SAASqsC,KAAK,sBAAuB,CAAEzC,IAASroC,MAAK,SAAClhB,GAC9D,OAAOA,CACX,IAAG,SAAC6e,GAQA,MAP8B,kBAAnBA,EAAMkD,SAAyBlD,EAAMkD,QAAQ1G,MAAM,iBAC1Dxb,GAAOY,WAAW,4BAA6BX,EAAAA,GAAAA,OAAAA,gBAA+B,CAC1EusD,OAAQ,kBACRtsC,YAAaE,IAIdsrC,GAAW,kBAAmB1sC,EAAO0qC,EAChD,GACJ,GACJ,GAAC,6BAED,SAAgBxpC,GACZ,OAAOlgB,GAAOY,WAAW,sCAAuCX,EAAAA,GAAAA,OAAAA,sBAAqC,CACjGY,UAAW,mBAEnB,GAAC,6BAEK,SAAgBqf,G,+IAEE,O,SAAMnkB,KAAK+jB,SAASsnC,wBAAwB,IAAM,EAAIrrD,KAAK+jB,SAASunC,iBAAgB,OAG3F,OAHPxI,EAAc,EAAH,cAGE9iD,KAAK0wD,yBAAyBvsC,GAAY,OAMlD,OANL/f,EAAO,EAAH,uBAMO+9C,IAAK,kBAAW38B,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,4EACd,OADc,SACRxlB,KAAK+jB,SAAS0b,eAAer7B,GAAK,OAA3C,GACG,QADLigB,EAAK,EAAH,MACO,8CAAWrG,GAAS,gCAC5Bhe,KAAK+jB,SAASqpC,iBAAiB/oC,EAAIjgB,EAAM0+C,IAAY,+CAC/D,GAAE,CAAEP,SAAUviD,KAAK+jB,WAAW,gDAEK,MAFL,0BAEzB,KAAO2b,gBAAkBt7B,EAAK,8D,GAG3C,yBAEK,SAAY+hB,G,wIAEE,OADVxiB,EAA6B,kBAAbwiB,GAAyB3G,EAAAA,GAAAA,IAAY2G,GAAUA,EAAO,SACtDnmB,KAAKikB,aAAY,OAE5B,OAFLwB,EAAU,EAAH,uBAEIzlB,KAAK+jB,SAASqsC,KAAK,gBAAiB,EAAEhwC,EAAAA,EAAAA,IAAQzc,GAAO8hB,EAAQrE,gBAAgB,gDAQzF,MARyF,0BAE5D,kBAAnB,KAAM+E,SAAyB,KAAMA,QAAQ1G,MAAM,iBAC1Dxb,GAAOY,WAAW,wBAAyBX,EAAAA,GAAAA,OAAAA,gBAA+B,CACtEusD,OAAQ,cACRvrC,KAAMO,EACNkrC,YAAaxqC,IAEpB,8D,GAGR,gCAEK,SAAmBA,G,wIAEL,OADVxiB,EAA6B,kBAAbwiB,GAAyB3G,EAAAA,GAAAA,IAAY2G,GAAUA,EAAO,SACtDnmB,KAAKikB,aAAY,OAI5B,OAJLwB,EAAU,EAAH,uBAIIzlB,KAAK+jB,SAASqsC,KAAK,WAAY,CAAE3qC,EAAQrE,eAAehB,EAAAA,EAAAA,IAAQzc,KAAQ,gDAQpF,MARoF,0BAEvD,kBAAnB,KAAMwiB,SAAyB,KAAMA,QAAQ1G,MAAM,iBAC1Dxb,GAAOY,WAAW,wBAAyBX,EAAAA,GAAAA,OAAAA,gBAA+B,CACtEusD,OAAQ,qBACRvrC,KAAMO,EACNkrC,YAAaxqC,IAEpB,8D,GAGR,4BAEK,SAAeE,EAAyBpG,EAA8CjkB,G,+IAEtE,O,SAAMk4C,GAAAA,aAA+B7tB,EAAQpG,EAAOjkB,GAAO,SAACY,GAC1E,OAAO,EAAKmnB,SAASgB,YAAYnoB,EACrC,IAAE,OAEc,OAJVu3C,EAAY,EAAH,cAIOn0C,KAAKikB,aAAY,OAG5B,OAHLwB,EAAU,EAAH,uBAGIzlB,KAAK+jB,SAASqsC,KAAK,uBAAwB,CACpD3qC,EAAQrE,cACRqN,KAAK8P,UAAU2V,GAAAA,WAA6BC,EAAU9tB,OAAQpG,EAAOk0B,EAAUn4C,UACjF,gDAQD,MARC,0BAE4B,kBAAnB,KAAMmqB,SAAyB,KAAMA,QAAQ1G,MAAM,iBAC1Dxb,GAAOY,WAAW,wBAAyBX,EAAAA,GAAAA,OAAAA,gBAA+B,CACtEusD,OAAQ,iBACRvrC,KAAMO,EACNkrC,YAAa,CAAEtqC,OAAQ8tB,EAAU9tB,OAAQpG,MAAAA,EAAOjkB,MAAOm4C,EAAUn4C,SAExE,8D,GAGR,oBAEK,SAAO+vC,G,wIAGO,OAFVhoB,EAAW/jB,KAAK+jB,SAAQ,SAER/jB,KAAKikB,aAAY,OAA1B,OAAPwB,EAAU,EAAH,uBAEN1B,EAASqsC,KAAK,yBAA0B,CAAE3qC,EAAQrE,cAAe2qB,EAAU,QAAO,+C,KAC5F,EA/MsB,CAAQnoB,GAkN7BqsC,GAAuB,qGAgBxB,OAhBwB,uCACzB,SAAgB9rC,GAA2C,WACvD,OAAOnkB,KAAK0wD,yBAAyBvsC,GAAamB,MAAK,SAAClhB,GACpD,MAA4B,CACxBA,KAAMA,EACNwhB,MAAO,KACPC,SAAU,KACV/C,SAAU,KACVnf,KAAM,KACN3H,MAAO,KACP6oB,QAAS,KACT8Z,cAAe,EACfzZ,KAAM,KACNuZ,KAAM,SAACE,GAA6B,OAAO,EAAK5a,SAASkpC,mBAAmB7oD,EAAMu6B,EAAgB,EAE1G,GACJ,KAAC,EAhBwB,CAAQoxB,IAmB/BrsC,GAAuD,CACzDmB,SAAS,EAAMlhB,MAAM,EAAMkiB,UAAU,EAAM/C,UAAS,EAAM8C,OAAO,EAAML,IAAI,EAAMvpB,OAAO,EACxFsjB,MAAM,EAAM+b,YAAY,EACxBlY,cAAc,EAAMC,sBAAsB,GAGjCg0B,GAAgB,0CAiBzB,WAAYD,EAA+BvyB,GAAoB,sBAC3D,IAAIgsC,EAAgDhsC,EA4BlC,OAzBI,MAAlBgsC,IACAA,EAAiB,IAAIzrC,SAAQ,SAACE,EAAS2X,GACnCiE,YAAW,WACP,EAAK2oB,gBAAgBtkC,MAAK,SAACV,GACvBS,EAAQT,EACZ,IAAG,SAAC3B,GACA+Z,EAAO/Z,EACX,GACJ,GAAG,EACP,KAGJ,cAAM2tC,GAGDzZ,IAAOA,GAAMtV,EAAAA,EAAAA,IAAwB,EAAKt8B,YAAa,aAA1Cs8B,IAEE,kBAATsV,GACPx0B,EAAAA,EAAAA,KAAe,UAAM,aAAa1iB,OAAO0mC,OAAO,CAC5CwQ,IAAKA,MAGTx0B,EAAAA,EAAAA,KAAe,UAAM,aAAc1iB,OAAO0mC,QAAO1hB,EAAAA,EAAAA,IAAYkyB,KAGjE,EAAK0Z,QAAU,GAAG,CACtB,CA6SC,OA7SA,4BArCD,WAII,OAH4B,MAAxB7wD,KAAK8wD,kBACL9wD,KAAK8wD,gBAAkB,CAAC,GAErB9wD,KAAK8wD,eAChB,GAAC,2BAsCD,WAAa,WAST,OARK9wD,KAAK+wD,OAAsB,gBAC5B/wD,KAAK+wD,OAAsB,cAAI/wD,KAAKgxD,yBAGpC/vB,YAAW,WACP,EAAK8vB,OAAsB,cAAI,IACnC,GAAG,IAEA/wD,KAAK+wD,OAAsB,aACtC,GAAC,oCAEK,W,wIACF,O,SAAM5P,GAAM,GAAE,OAIA,OAFVt8B,EAAU,KAAI,kBAEE7kB,KAAKowD,KAAK,cAAe,IAAI,OAA7CvrC,EAAU,EAAH,4BAGO,OAHP,6CAGa7kB,KAAKowD,KAAK,cAAe,IAAI,QAA7CvrC,EAAU,EAAH,mEAIA,MAAXA,EAAe,iBAC+E,OAAxFF,GAAakd,EAAAA,EAAAA,IAA4C7hC,KAAKuF,YAAa,cAAa,4BAEnFof,EAAWhF,EAAAA,GAAAA,KAAekF,GAAS7a,aAAW,4DAE9C/F,GAAOY,WAAW,2BAA4BX,EAAAA,GAAAA,OAAAA,cAA6B,CAC9E2gB,QAASA,EACTka,MAAO,iBACP+iB,YAAa,EAAF,MACb,iCAIH79C,GAAOY,WAAW,2BAA4BX,EAAAA,GAAAA,OAAAA,cAA6B,CAC9E66B,MAAO,eACT,wE,GACL,uBAED,SAAUixB,GACN,OAAO,IAAID,GAAcvqB,GAAmBxlC,KAAMgwD,EACtD,GAAC,gCAED,SAAmBA,GACf,OAAOhwD,KAAKixD,UAAUjB,GAAgBkB,kBAC1C,GAAC,0BAED,WAAY,WACR,OAAOlxD,KAAKowD,KAAK,eAAgB,IAAI9qC,MAAK,SAAC+qC,GACvC,OAAOA,EAAStjC,KAAI,SAAC9rB,GAAC,OAAK,EAAKkmD,UAAU1hC,QAAQxkB,EAAE,GACxD,GACJ,GAAC,kBAED,SAAKo9C,EAAgBrZ,GAAkB,WAC7BoZ,EAAU,CACZC,OAAQA,EACRrZ,OAAQA,EACRmE,GAAKnpC,KAAK6wD,UACVM,QAAS,OAGbnxD,KAAKmjC,KAAK,QAAS,CACfstB,OAAQ,UACRrS,SAASpf,EAAAA,EAAAA,IAASof,GAClBr6B,SAAU/jB,OAKd,IAAMy+C,EAAS,CAAE,cAAe,mBAAoBz5B,QAAQq5B,IAAW,EACvE,GAAII,GAASz+C,KAAK+wD,OAAO1S,GACrB,OAAOr+C,KAAK+wD,OAAO1S,GAGvB,IAAMtgD,EAASkkD,GAAUjiD,KAAK4/C,WAAYnxB,KAAK8P,UAAU6f,GAAUyR,IAAWvqC,MAAK,SAACvnB,GAQhF,OAPA,EAAKolC,KAAK,QAAS,CACfstB,OAAQ,WACRrS,QAASA,EACTY,SAAUjhD,EACVgmB,SAAU,IAGPhmB,CAEX,IAAG,SAACklB,GAQA,MAPA,EAAKkgB,KAAK,QAAS,CACfstB,OAAQ,WACRxtC,MAAOA,EACPm7B,QAASA,EACTr6B,SAAU,IAGRd,CACV,IAUA,OAPIw7B,IACAz+C,KAAK+wD,OAAO1S,GAAUtgD,EACtBkjC,YAAW,WACP,EAAK8vB,OAAO1S,GAAU,IAC1B,GAAG,IAGAtgD,CACX,GAAC,4BAED,SAAesgD,EAAgBrZ,GAC3B,OAAQqZ,GACJ,IAAK,iBACD,MAAO,CAAE,kBAAmB,IAEhC,IAAK,cACD,MAAO,CAAE,eAAgB,IAE7B,IAAK,aACD,MAAO,CAAE,iBAAkB,CAAEyR,GAAa9qB,EAAOvf,SAAUuf,EAAOnhB,WAEtE,IAAK,sBACD,MAAO,CAAE,0BAA2B,CAAEisC,GAAa9qB,EAAOvf,SAAUuf,EAAOnhB,WAE/E,IAAK,UACD,MAAO,CAAE,cAAe,CAAEisC,GAAa9qB,EAAOvf,SAAUuf,EAAOnhB,WAEnE,IAAK,eACD,MAAO,CAAE,mBAAoB,CAAEisC,GAAa9qB,EAAOvf,UAAUwT,EAAAA,EAAAA,IAAW+L,EAAO75B,SAAU,IAAK65B,EAAOnhB,WAEzG,IAAK,kBACD,MAAO,CAAE,yBAA0B,CAAEmhB,EAAO0oB,oBAEhD,IAAK,WACD,OAAI1oB,EAAOnhB,SACA,CAAE,uBAAwB,CAAEmhB,EAAOnhB,WAAYmhB,EAAOupB,sBACtDvpB,EAAOxF,UACP,CAAE,qBAAsB,CAAEwF,EAAOxF,YAAawF,EAAOupB,sBAEzD,KAEX,IAAK,iBACD,MAAO,CAAE,2BAA4B,CAAEvpB,EAAOtF,kBAElD,IAAK,wBACD,MAAO,CAAE,4BAA6B,CAAEsF,EAAOtF,kBAEnD,IAAK,OAED,MAAO,CAAE,WAAY,EADMmC,EAAAA,EAAAA,IAAgG7hC,KAAKuF,YAAa,qBACtHirD,CAAmBxrB,EAAO7gB,YAAa,CAAEe,MAAM,IAAS8f,EAAOnhB,WAG1F,IAAK,cAED,MAAO,CAAE,kBAAmB,EADDge,EAAAA,EAAAA,IAAgG7hC,KAAKuF,YAAa,qBAC/GirD,CAAmBxrB,EAAO7gB,YAAa,CAAEe,MAAM,MAGjF,IAAK,UAID,OAHI8f,EAAO1G,QAAmC,MAAzB0G,EAAO1G,OAAO7Y,UAC/Buf,EAAO1G,OAAO7Y,QAAUqqC,GAAa9qB,EAAO1G,OAAO7Y,UAEhD,CAAE,cAAe,CAAEuf,EAAO1G,SAMzC,OAAO,IACX,GAAC,qBAEK,SAAQ+f,EAAgBrZ,G,6IAGX,SAAXqZ,GAAgC,gBAAXA,EAAwB,gBAChB,KAAvBh6B,EAAK2gB,EAAO7gB,cACG,MAAXE,EAAG/E,OAAgBK,EAAAA,GAAAA,KAAe0E,EAAG/E,MAAMzV,SAAQ,mBAElC,MAAnBwa,EAAGlB,cAAmD,MAA3BkB,EAAGjB,qBAA4B,gBAC1C,OAD0C,SACpCpjB,KAAK8kB,aAAY,OACX,OADtBa,EAAU,EAAH,MACDxC,cAAwD,MAAhCwC,EAAQvC,wBAExC4hB,GAAS/f,EAAAA,EAAAA,IAAY+f,IACd7gB,aAAcc,EAAAA,EAAAA,IAAYZ,UAC1B2gB,EAAO7gB,YAAY7E,MAC7B,OAWF,OAJC,OAFNge,EAAOt9B,KAAKoxD,eAAe/S,EAASrZ,KAGtC/gC,GAAOY,WAAWw5C,EAAS,mBAAoBn6C,EAAAA,GAAAA,OAAAA,gBAA+B,CAAEY,UAAWu5C,IAC9F,oBAEgBr+C,KAAKowD,KAAK9yB,EAAK,GAAIA,EAAK,IAAG,qGAEjCqyB,GAAWtR,EAAQ,EAAF,GAASrZ,IAAO,0D,GAE/C,yBAED,SAAYjG,GACU,YAAdA,EAAM2B,KAAqB1gC,KAAKqxD,iBACpC,0DAAkBtyB,EACtB,GAAC,2BAED,WACI,GAA2B,MAAvB/+B,KAAKsxD,eAAT,CACA,IAAMhnD,EAAOtK,KAEPuxD,EAAiCvxD,KAAKowD,KAAK,kCAAmC,IACpFpwD,KAAKsxD,eAAiBC,EAEtBA,EAAcjsC,MAAK,SAASksC,GAgCxB,OA/BA,SAASrP,IACL73C,EAAK8lD,KAAK,uBAAwB,CAAEoB,IAAYlsC,MAAK,SAASmsC,GAC1D,GAAInnD,EAAKgnD,gBAAkBC,EAAiB,OAAO,KAEnD,IAAIG,EAAMvsC,QAAQE,UAYlB,OAXAosC,EAAO3xC,SAAQ,SAAS1b,GAEpBkG,EAAKk/C,SAAS,KAAOplD,EAAKgd,eAAiB,UAC3CswC,EAAMA,EAAIpsC,MAAK,WACX,OAAOhb,EAAKm1B,eAAer7B,GAAMkhB,MAAK,SAASjB,GAE3C,OADA/Z,EAAK64B,KAAK,UAAW9e,GACd,IACX,GACJ,GACJ,IAEOqtC,EAAIpsC,MAAK,WACZ,OAAO67B,GAAM,IACjB,GACJ,IAAG77B,MAAK,WACJ,GAAIhb,EAAKgnD,gBAAkBC,EAM3B,OAFAtwB,YAAW,WAAakhB,GAAQ,GAAG,GAE5B,KALH73C,EAAK8lD,KAAK,sBAAuB,CAAEoB,GAM3C,IAAGxuC,OAAM,SAACC,GAAmB,GACjC,CACAk/B,GAEOqP,CACX,IAAGxuC,OAAM,SAACC,GAAmB,G,CACjC,GAAC,wBAED,SAAW8b,GACW,YAAdA,EAAM2B,KAAuD,IAAlC1gC,KAAK+gC,cAAc,aAC9C/gC,KAAKsxD,eAAiB,OAE1B,yDAAiBvyB,EACrB,IAUA,yBA3QA,WACI,MAAO,uBACX,GAAC,gCA0QD,SAA0B5a,EAAiCwtC,GAEvD,IAAMC,GAAU3sC,EAAAA,EAAAA,IAAYvB,IAC5B,GAAIiuC,EACA,IAAK,IAAM5xD,KAAO4xD,EACVA,EAAW5xD,KAAQ6xD,EAAQ7xD,IAAO,IAI9C27B,EAAAA,EAAAA,IAAgBvX,EAAaytC,GAE7B,IAAM7zD,EAAiD,CAAC,EAmBxD,MAhBA,CAAC,UAAW,WAAY,WAAY,OAAQ,eAAgB,uBAAwB,QAAS,SAAS+hB,SAAQ,SAAS/f,GACnH,GAA+B,MAArBokB,EAAapkB,GAAvB,CACA,IAAM/D,GAAQsoD,EAAAA,EAAAA,IAAS3kC,EAAAA,GAAAA,KAAqBwE,EAAapkB,KAC7C,aAARA,IAAsBA,EAAM,OAChChC,EAAOgC,GAAO/D,C,CAClB,IAEA,CAAC,OAAQ,KAAM,QAAQ8jB,SAAQ,SAAS/f,GACL,MAArBokB,EAAapkB,KACvBhC,EAAOgC,IAAOqgB,EAAAA,EAAAA,IAAc+D,EAAapkB,IAC7C,IAEUokB,EAAakX,aACnBt9B,EAAmB,WAAI68B,GAAoBzW,EAAakX,aAGrDt9B,CACX,KAAC,EA5VwB,CAAQurD,ICnYjCuI,GAAU,KAEd,IAEI,GAAU,OADVA,GAAMC,WACY,MAAM,IAAI50D,MAAM,gB,CACpC,MAAO+lB,IACL,IAAMhf,GAAS,IAAIC,EAAAA,GAAOi0B,IAC1B05B,GAAK,WACD5tD,GAAOY,WAAW,+CAAgDX,EAAAA,GAAAA,OAAAA,sBAAqC,CACnGY,UAAW,mBAEnB,C,4SCJEb,GAAS,IAAIC,EAAAA,GAAOi0B,IAiBtB45B,GAAS,EA0BAC,GAAkB,0CAa3B,WAAY7a,EAA6BvyB,GAAoB,wBAGzC,QAAZA,GACA3gB,GAAOY,WAAW,uDAAwDX,EAAAA,GAAAA,OAAAA,sBAAqC,CAC3GY,UAAW,iBAKf,EADgB,kBAATqyC,EACP,YAAMA,EAAKvyB,GAEX,YAAM,aAAcA,IAGnBslC,kBAAoB,EAEzB,EAAK+H,UAAW,EAEI,kBAAT9a,GACPx0B,EAAAA,EAAAA,KAAe,UAAM,aAAc,IAAImvC,GAAU,EAAKlS,WAAWzI,OAEjEx0B,EAAAA,EAAAA,KAAe,UAAM,aAAcw0B,IAGvCx0B,EAAAA,EAAAA,KAAe,UAAM,YAAa,CAAC,IACnCA,EAAAA,EAAAA,KAAe,UAAM,QAAS,CAAC,IAC/BA,EAAAA,EAAAA,KAAe,UAAM,UAAW,CAAC,IACjCA,EAAAA,EAAAA,KAAe,UAAM,kBAAkB,uEAGvC,EAAKuvC,UAAUC,OAAS,WACpB,EAAKF,UAAW,EAChBhyD,OAAO46B,KAAK,EAAKu3B,WAAWtyC,SAAQ,SAACqpB,GACjC,EAAK+oB,UAAU9B,KAAK,EAAKgC,UAAUjpB,GAAI9M,QAC3C,GACJ,EAEA,EAAK61B,UAAUG,UAAY,SAACC,GACxB,IAAM3uD,EAAO2uD,EAAa3uD,KACpB5F,EAAS0wB,KAAKC,MAAM/qB,GAC1B,GAAiB,MAAb5F,EAAOorC,GAAY,CACnB,IAAMA,EAAK5qC,OAAOR,EAAOorC,IACnBiV,EAAU,EAAKgU,UAAUjpB,GAG/B,UAFO,EAAKipB,UAAUjpB,QAEAnrB,IAAlBjgB,EAAOA,OACPqgD,EAAQzT,SAAS,KAAM5sC,EAAOA,QAE9B,EAAKolC,KAAK,QAAS,CACfstB,OAAQ,WACRrS,QAAS3vB,KAAKC,MAAM0vB,EAAQ/hB,SAC5B2iB,SAAUjhD,EAAOA,OACjBgmB,UAAU,gBAGX,CACH,IAAId,EAAe,KACfllB,EAAOklB,OACPA,EAAQ,IAAI/lB,MAAMa,EAAOklB,MAAMkD,SAAW,kBAC1CxD,EAAAA,EAAAA,IAAoBM,EAAO,OAAQllB,EAAOklB,MAAM6C,MAAQ,OACxDnD,EAAAA,EAAAA,IAAoBM,EAAO,WAAYtf,IAEvCsf,EAAQ,IAAI/lB,MAAM,iBAGtBkhD,EAAQzT,SAAS1nB,OAAOjF,GAExB,EAAKmlB,KAAK,QAAS,CACfstB,OAAQ,WACRxtC,MAAOA,EACPm7B,QAAS3vB,KAAKC,MAAM0vB,EAAQ/hB,SAC5BtY,UAAU,W,OAKf,GAAsB,qBAAlBhmB,EAAOsgD,OAA+B,CAE7C,IAAM1wC,EAAM,EAAK4kD,MAAMx0D,EAAOinC,OAAOwtB,cACjC7kD,GAEAA,EAAIkyC,YAAY9hD,EAAOinC,OAAOjnC,O,MAIlCsnD,QAAQljB,KAAK,yBAErB,EAKA,IAAMswB,EAAWxG,aAAY,WACzB,EAAK9oB,KAAK,OACd,GAAG,KACsC,OAArCsvB,EAASpF,OAASoF,EAASpF,SAAU,UAC7C,CAoEC,OAjED,+BACA,WAAiC,OAAOrtD,KAAK0yD,UAAY,GAAC,2BAE1D,WACI,OAAO1yD,KAAK2yD,cAChB,GAAC,2BAED,WACI,OAAO,CACX,EAAC,IAQD,SAAoB32D,GAChBiI,GAAOY,WAAW,mDAAoDX,EAAAA,GAAAA,OAAAA,sBAAqC,CACvGY,UAAW,sBAEnB,GAAC,8BAVD,SAAiBg+C,GACb7+C,GAAOY,WAAW,iDAAkDX,EAAAA,GAAAA,OAAAA,sBAAqC,CACrGY,UAAW,mBAEnB,GAAC,kBAQK,W,yJACK,MAAI,0C,GACd,mBAED,SAAY9I,GACHA,GAELiI,GAAOY,WAAW,0CAA2CX,EAAAA,GAAAA,OAAAA,sBAAqC,CAC9FY,UAAW,cAEnB,GAAC,kBAED,SAAKu5C,EAAgBrZ,GAAmB,WAC9B4tB,EAAMb,KAEZ,OAAO,IAAI5sC,SAAQ,SAACE,EAAS2X,GAMzB,IAAMX,EAAU5N,KAAK8P,UAAU,CAC3B8f,OAAQA,EACRrZ,OAAQA,EACRmE,GAAIypB,EACJzB,QAAS,QAGb,EAAKhuB,KAAK,QAAS,CACfstB,OAAQ,UACRrS,QAAS3vB,KAAKC,MAAM2N,GACpBtY,SAAU,IAGd,EAAKquC,UAAU7zD,OAAOq0D,IAAQ,CAAEjoB,SAlBhC,SAAkB1nB,EAAcllB,GAC5B,OAAIklB,EAAgB+Z,EAAO/Z,GACpBoC,EAAQtnB,EACnB,EAe0Cs+B,QAAAA,GAEtC,EAAK41B,UAAY,EAAKC,UAAU9B,KAAK/zB,EAC7C,GACJ,GAAC,wBAMK,SAAWqE,EAAamyB,EAAmBhT,G,+IAQ/B,OANM,OADhBiT,EAAe9yD,KAAK+yD,QAAQryB,MAE5BoyB,EAAe3tC,QAAQC,IAAIytC,GAAOvtC,MAAK,SAACutC,GACpC,OAAO,EAAKzC,KAAK,gBAAiByC,EACtC,IACA7yD,KAAK+yD,QAAQryB,GAAOoyB,GACvB,SACmBA,EAAY,OAA1BE,EAAQ,EAAH,KACXhzD,KAAKuyD,MAAMS,GAAS,CAAEtyB,IAAAA,EAAKmf,YAAAA,GAAc,+C,GAC5C,yBAED,SAAY9gB,GAAY,WACpB,OAAQA,EAAMzf,MACV,IAAK,QACDtf,KAAKizD,WAAW,QAAS,CAAE,aAAc,SAACl1D,GACtC,IAAM+kD,EAAcnjC,EAAAA,GAAAA,KAAe5hB,EAAO0H,QAAQuE,WAClD,EAAKw/C,SAASjoD,MAAQuhD,EACtB,EAAK3f,KAAK,QAAS2f,EACvB,IACA,MAEJ,IAAK,UACD9iD,KAAKizD,WAAW,UAAW,CAAE,2BAA4B,SAACl1D,GACtD,EAAKolC,KAAK,UAAWplC,EACzB,IACA,MAEJ,IAAK,SACDiC,KAAKizD,WAAWl0B,EAAM2B,IAAK,CAAE,OAAQ1gC,KAAK0uD,WAAW3vB,EAAMT,UAAW,SAACvgC,GAC7C,MAAlBA,EAAOmmD,UAAmBnmD,EAAOmmD,SAAU,GAC/C,EAAK/gB,KAAKpE,EAAMT,OAAQ,EAAK6oB,UAAUlD,UAAUlmD,GACrD,IACA,MAEJ,IAAK,KACD,IAAMm1D,EAAc,SAACn0B,GACjB,IAAM36B,EAAO26B,EAAM36B,KACnB,EAAKu7B,sBAAsBv7B,GAAMkhB,MAAK,SAACsZ,GAC9BA,GACL,EAAKuE,KAAK/+B,EAAMw6B,EACpB,GACJ,EAGAs0B,EAAYn0B,GAMZ/+B,KAAKizD,WAAW,KAAM,CAAE,aAAc,SAACl1D,GACnC,EAAKwrD,QAAQjrB,QAAO,SAACj4B,GAAC,MAAiB,OAAXA,EAAEiZ,IAAa,IAAGQ,QAAQozC,EAC1D,IACA,MAIJ,IAAK,QACL,IAAK,OACL,IAAK,WACL,IAAK,UACL,IAAK,QACD,MAEJ,QACI7N,QAAQlvB,IAAI,aAAc4I,GAGtC,GAAC,wBAED,SAAWA,GAAY,WACf2B,EAAM3B,EAAM2B,IAEhB,GAAmB,OAAf3B,EAAMzf,KAAe,CAErB,GAAItf,KAAKupD,QAAQjrB,QAAO,SAACj4B,GAAC,MAAiB,OAAXA,EAAEiZ,IAAa,IAAGljB,OAC9C,OAEJskC,EAAM,I,MACH,GAAI1gC,KAAK+gC,cAAchC,EAAMA,OAEhC,OAGJ,IAAMi0B,EAAQhzD,KAAK+yD,QAAQryB,GACtBsyB,WAEChzD,KAAK+yD,QAAQryB,GACpBsyB,EAAM1tC,MAAK,SAAC0tC,GACF,EAAKT,MAAMS,YACT,EAAKT,MAAMS,GAClB,EAAK5C,KAAK,kBAAmB,CAAE4C,IACnC,IACJ,GAAC,qBAEK,W,8IAEEhzD,KAAKkyD,UAAUiB,aAAerB,GAAAA,WAAoB,gBAClD,OADkD,SAC3C,IAAI3sC,SAAQ,SAACE,GAChB,EAAK6sC,UAAUC,OAAS,WACpB9sC,GAAQ,EACZ,EAEA,EAAK6sC,UAAUkB,QAAU,WACrB/tC,GAAQ,EACZ,CACJ,IAAG,OAKPrlB,KAAKkyD,UAAUmB,MAAM,KAAM,+C,IAC9B,yBArHD,WACI,MAAO,qBACX,KAAC,EAlL0B,CAAQjc,I,uSC9CjCnzC,GAAS,IAAIC,EAAAA,GAAOi0B,IAkBbm7B,GAAsB,qGAmB9B,OAnB8B,qCACzB,WAAa,W,oPACW,GACX,OADX1uC,EAAU5kB,KAAK4kB,SACA,gBACL,OADK,SACC2uC,EAAM3J,cAAa,WAAE,QAArChlC,EAAU,EAAH,OAGH3gB,GAAOY,WAAW,sBAAuBX,EAAAA,GAAAA,OAAAA,cAA6B,CAAC,GAItD,MAAjBlE,KAAKoqD,YAELznC,EAAAA,EAAAA,IAAe3iB,KAAM,WAAY4kB,GAEjC5kB,KAAKmjC,KAAK,UAAWve,EAAS,OACjC,gCAEEA,GAAO,+C,KACjB,EAnB8B,CAAQwyB,IAsBrBoc,GAAmB,0CAGrC,WAAY5uC,EAAsB6uC,GAAY,sBAC1CxvD,GAAOye,cAAc,gBAAD,0BAAa8wC,GAGjC5uC,GAAUid,EAAAA,EAAAA,IAAS,0CAA+C,aAAxDA,CAAsEjd,GAChF6uC,GAAS5xB,EAAAA,EAAAA,IAAS,0CAAyC,YAAlDA,CAA+D4xB,GAExE,IAAM7T,GAAa/d,EAAAA,EAAAA,IAAS,0CAAyB,SAAlCA,CAA4Cjd,EAAS6uC,GAUvE,OARD,cAAM7T,EAAYh7B,GAEK,kBAAZ6uC,GACP9wC,EAAAA,EAAAA,KAAe,UAAM,SAAU8wC,GACd,MAAVA,GACPxzD,OAAO46B,KAAK44B,GAAQ3zC,SAAQ,SAAC/f,IACzB4iB,EAAAA,EAAAA,KAAc,UAAiB5iB,EAAK0zD,EAAO1zD,GAC/C,IACH,CACL,CAkCC,OAlCA,qCAED,WACIkE,GAAOk+B,KAAK,yDAChB,GAAC,iCAED,WACI,OAAO,CACX,GAAC,uBAED,SAAU1c,GACN,OAAOxhB,GAAOY,WACV,wCACAX,EAAAA,GAAAA,OAAAA,sBACA,CAAEY,UAAW,aAErB,GAAC,0BAED,WACI,OAAOqgB,QAAQE,QAAQ,GAC3B,IAEA,wBACA,SAAiBouC,GACb,OAAOA,CACX,GAIA,oBACA,SAAc7uC,EAAkB6uC,GAC5B,OAAOxvD,GAAOY,WAAW,oDAAqDX,EAAAA,GAAAA,OAAAA,gBAA+B,CACzGY,UAAW,UAEnB,KAAC,EAvDoC,CAAQwuD,ICtC3CrvD,GAAS,IAAIC,EAAAA,GAAOi0B,IASpBu7B,GAAgB,mCAETC,GAAyB,0CAGlC,WAAY/uC,EAAsB6uC,GAAY,sBAC1C,IAAM1vC,EAAW,IAAIwyB,GAAgB3xB,EAAS6uC,GAExCtc,EAAMpzB,EAAS67B,WAAWzI,IAAIrvC,QAAQ,SAAU,MAClBA,QAAQ,eAAgB,mBAGZ,OADhD,cAAMqvC,EAAKpzB,EAASa,UACpBjC,EAAAA,EAAAA,KAAe,UAAM,SAAUoB,EAAS0vC,QAAQ,CACpD,CAIC,OAJA,2CAED,WACI,OAAQzzD,KAAKyzD,SAAWC,EAC5B,KAAC,EAfiC,CAAQ1B,IAkBjCzb,GAAgB,qGAuDxB,OAvDwB,2CAyDzB,WACI,OAAQv2C,KAAKyzD,SAAWC,EAC5B,IAAC,mCAzDD,SAA4B9uC,EAAsB6uC,GAC9C,OAAO,IAAIE,GAAyB/uC,EAAS6uC,EACjD,GAAC,uBAED,SAAiBA,GACb,OAAc,MAAVA,EAAyBC,IACzBD,GAA6B,kBAAZA,GACjBxvD,GAAOyb,mBAAmB,iBAAkB,SAAU+zC,GAEnDA,EACX,GAAC,oBAED,SAAc7uC,EAAkB6uC,GAC5B,IAAIG,EAAO,KACX,OAAQhvC,EAAQhoB,MACZ,IAAK,YACDg3D,EAAO,gCACP,MACJ,IAAK,SACDA,EAAO,+BACP,MACJ,IAAK,QACDA,EAAO,oCACP,MACJ,IAAK,WACDA,EAAO,mCACP,MACJ,IAAK,WACDA,EAAO,gCACP,MACJ,IAAK,kBACDA,EAAO,+BACP,MACJ,IAAK,WACDA,EAAO,gCACP,MACJ,IAAK,kBACDA,EAAO,+BACP,MACJ,QACG3vD,GAAOyb,mBAAmB,sBAAuB,UAAWqC,UAAU,IAG7E,MAAO,CACHu+B,WAAW,EACXnJ,IAAM,WAAkByc,EAAOH,EAC/BxT,iBAAkB,SAACuB,EAAiBrK,GAIhC,OAHIsc,IAAWC,IACXtO,KAEGjgC,QAAQE,SAAQ,EAC3B,EAER,KAAC,EAvDwB,CAAQmuC,IC9B/BvvD,GAAS,IAAIC,EAAAA,GAAOi0B,IAGpBu7B,GAAgB,mEAEtB,SAASG,GAAQj3D,GACb,OAAQA,GACJ,IAAK,YACD,MAAO,oBACX,IAAK,UACD,MAAO,4BACX,IAAK,UACD,MAAO,4BACX,IAAK,SACD,MAAO,2BAEX,IAAK,QACD,MAAO,wBAEX,IAAK,WACD,MAAO,yBAEf,OAAOqH,GAAOyb,mBAAmB,sBAAuB,OAAQ9iB,EACpE,CAEO,IAAMi6C,GAAa,qGA+BrB,OA/BqB,2CAGtB,WACI,OAAQ72C,KAAKyzD,SAAWC,EAC5B,IAAC,wBAED,SAAiBD,GACb,OAAc,MAAVA,EAAyBC,GACtBD,CACX,GAAC,oBAED,SAAc7uC,EAAkB6uC,GACd,MAAVA,IAAkBA,EAASC,IAC/B,IAAM9T,EAA6B,CAC/BU,WAAW,EACXnJ,IAAM,WAAc0c,GAAQjvC,EAAQhoB,MAAQ62D,EAC5CxT,iBAAkB,SAACuB,EAAiBrK,GAIhC,OAHIsc,EAAOA,SAAWC,IAClBtO,KAEGjgC,QAAQE,SAAQ,EAC3B,GAQJ,OAL4B,MAAxBouC,EAAOK,gBACPlU,EAAWW,KAAO,GAClBX,EAAW7T,SAAW0nB,EAAOK,eAG1BlU,CACX,KAAC,EA/BqB,CAAQ4T,I,uSC5B5BvvD,GAAS,IAAIC,EAAAA,GAAOi0B,IAEbwe,GAAmB,qGAoB3B,OApB2B,+BAsBtB,SAAQ0H,EAAgBrZ,GAAW,W,2OAGtB,mBAAXqZ,EAA2B,gBACb,OADa,SACPkV,EAAMvI,QAAO,UAAC,WAAY,CAAEnnC,SAAU,WAAW,OAA1D,OAALtiB,EAAQ,EAAH,uBACJA,EAAMkE,QAAM,gCAGhB8tD,EAAMvI,QAAO,UAAC3M,EAAQrZ,IAAM,+C,IACtC,wBA7BD,SAAiByuB,GAIb,OAHc,MAAVA,GACAxvD,GAAOyb,mBAAmB,sCAAuC,SAAU+zC,GAExE,IACX,GAAC,oBAED,SAAc7uC,EAAkB6uC,GAC5B,IAAIG,EAAO,KACX,GACS,cADDhvC,EAAQhoB,KAERg3D,EAAO,mCAGR3vD,GAAOyb,mBAAmB,sBAAuB,UAAWqC,UAAU,IAG7E,OAAO6xC,CACX,KAAC,EApB2B,CAAQJ,I,uSCIlCvvD,GAAS,IAAIC,EAAAA,GAAOi0B,IAM1B,SAAS47B,GAAuB5vC,GAC5B,IAAMpmB,EAAiC,CAAC,EACxC,IAAK,IAAIgC,KAAOokB,EACZ,GAA+B,MAArBA,EAAapkB,GAAvB,CACA,IAAI/D,EAAcmoB,EAAapkB,GACnB,SAARA,GAA4B,IAAV/D,IAMlBA,EAHM,CAAEsjB,MAAM,EAAMuG,UAAU,EAAM/C,UAAU,EAAMkxC,aAAa,EAAM5wC,sBAAsB,EAAMwC,OAAO,EAAM5pB,OAAO,GAAQ+D,IACvHukD,EAAAA,EAAAA,KAASlkC,EAAAA,EAAAA,IAAQpkB,IACV,eAAR+D,EACC,IAAM66B,GAAc5+B,GAAO+wB,KAAI,SAACpvB,GACpC,MAAO,aAAP,OAAqBA,EAAI8nB,QAAQ,2BAAoB9nB,EAAI+8B,YAAYj8B,KAAK,OAAO,MACrF,IAAGA,KAAK,KAAO,KAEP2hB,EAAAA,EAAAA,IAAQpkB,GAEpB+B,EAAOgC,GAAO/D,E,CAElB,OAAO+B,CACX,CAEA,SAAS8xD,GAAU9xD,GAEf,GAAqB,GAAjBA,EAAOohD,SAAmC,qBAAnBphD,EAAOooB,SAAqD,0BAAnBpoB,EAAOooB,SACvE,OAAOpoB,EAAOA,OAGlB,GAAqB,GAAjBA,EAAOohD,QAA0C,kBAApBphD,EAAOooB,UAA0BpoB,EAAOooB,QAAQ1G,MAAM,OAAQ,CAC3F,IAAMwD,EAAa,IAAI/lB,MAAM,oBAK7B,MAJA+lB,EAAMllB,OAAS0wB,KAAK8P,UAAUxgC,IACzBA,EAAOA,QAAU,IAAIqjB,cAAc4D,QAAQ,eAAiB,IAC7D/B,EAAM8+B,eAAgB,GAEpB9+B,C,CAGV,OAAOllB,EAAOA,MAClB,CAEA,SAASk2D,GAAcl2D,GAEnB,GAAIA,GAAkC,GAAlBA,EAAQohD,QAAwC,SAAnBphD,EAAQooB,UAAuBpoB,EAAOA,QAAU,IAAIqjB,cAAc4D,QAAQ,eAAiB,EAAG,CAC3I,IAAM/B,EAAa,IAAI/lB,MAAM,sBAG7B,MAFA+lB,EAAMllB,OAAS0wB,KAAK8P,UAAUxgC,GAC9BklB,EAAM8+B,eAAgB,EAChB9+B,C,CAGV,GAAsB,OAAlBllB,EAAOozD,QAAkB,CAEzB,IAAMluC,EAAa,IAAI/lB,MAAM,oBAE7B,MADA+lB,EAAMllB,OAAS0wB,KAAK8P,UAAUxgC,GACxBklB,C,CAGV,GAAIllB,EAAOklB,MAAO,CAEd,IAAMA,EAAa,IAAI/lB,MAAMa,EAAOklB,MAAMkD,SAAW,iBAGrD,MAFIpoB,EAAOklB,MAAM6C,OAAQ7C,EAAM6C,KAAO/nB,EAAOklB,MAAM6C,MAC/C/nB,EAAOklB,MAAMtf,OAAQsf,EAAMtf,KAAO5F,EAAOklB,MAAMtf,MAC7Csf,C,CAGV,OAAOllB,EAAOA,MAClB,CAGA,SAASm2D,GAAYrwC,GACjB,GAAiB,YAAbA,EAA0B,MAAM,IAAI3mB,MAAM,yBAC9C,MAAiB,WAAb2mB,EAAgCA,EAE7B5nB,SAAS4nB,EAASjE,UAAU,GAAI,GAC3C,CAGA,SAAS+vC,GAAWtR,EAAgBp7B,EAAYkB,GAG5C,GAAe,SAAXk6B,GAAqBp7B,EAAM6C,OAAS5hB,EAAAA,GAAAA,OAAAA,aAA4B,CAChE,IAAMmC,EAAI4c,EAAMA,MAGhB,GAAI5c,IAAMA,EAAE8f,QAAQ1G,MAAM,cAAgBpZ,EAAE8f,QAAQ1G,MAAM,wBAAyB,CAE/E,IAAI9b,EAAO0C,EAAE1C,KAGb,GAFIA,IAAQA,EAAO,KAAOA,EAAKmE,QAAQ,SAAU,MAE7Cg8B,EAAAA,EAAAA,IAAYngC,GAAS,OAAOA,EAEhCM,GAAOY,WAAW,wCAAyCX,EAAAA,GAAAA,OAAAA,eAA8B,CACrF+e,MAAAA,EAAOtf,KAAM,M,EAMzB,IAAIwiB,EAAUlD,EAAMkD,QAuCpB,MAtCIlD,EAAM6C,OAAS5hB,EAAAA,GAAAA,OAAAA,eACX+e,EAAMA,OAAyC,kBAAzBA,EAAMA,MAAMkD,QAClCA,EAAUlD,EAAMA,MAAMkD,QACQ,kBAAhBlD,EAAMs7B,KACpBp4B,EAAUlD,EAAMs7B,KACsB,kBAAxBt7B,EAAM2sC,eACpBzpC,EAAUlD,EAAM2sC,gBAGxBzpC,GAAWA,GAAW,IAAI/E,eAGd3B,MAAM,uBACdxb,GAAOY,WAAW,oDAAqDX,EAAAA,GAAAA,OAAAA,mBAAkC,CACtG+e,MAAAA,EAAOo7B,OAAAA,EAAQl6B,YAAAA,IAKlBgC,EAAQ1G,MAAM,8EACdxb,GAAOY,WAAW,8BAA+BX,EAAAA,GAAAA,OAAAA,cAA6B,CAC3E+e,MAAAA,EAAOo7B,OAAAA,EAAQl6B,YAAAA,IAKlBgC,EAAQ1G,MAAM,wCACbxb,GAAOY,WAAW,0BAA2BX,EAAAA,GAAAA,OAAAA,wBAAuC,CACjF+e,MAAAA,EAAOo7B,OAAAA,EAAQl6B,YAAAA,IAInBgC,EAAQ1G,MAAM,4DACdxb,GAAOY,WAAW,4EAA6EX,EAAAA,GAAAA,OAAAA,wBAAuC,CAClI+e,MAAAA,EAAOo7B,OAAAA,EAAQl6B,YAAAA,IAIjBlB,CACV,CAEO,IAAMozB,GAAkB,0CAI3B,WAAYzxB,EAAsB6uC,GAAe,MAIE,OAJF,eAC7C,cAAM7uC,IAENjC,EAAAA,EAAAA,KAAe,UAAM,UAAW,EAAKwxC,eACrCxxC,EAAAA,EAAAA,KAAe,UAAM,SAAU8wC,GAAU,MAAM,CACnD,CA6RC,OA7RA,kCAED,WACI,OAAOzzD,KAAK4kB,QAAU5kB,KAAK4kB,QAAQhoB,KAAM,WACrC,IAAK,YACD,MAAO,2BACX,IAAK,SACD,MAAO,kCACX,IAAK,UACD,MAAO,mCACX,IAAK,QACD,MAAO,8BACX,IAAK,WACD,MAAO,sCACX,IAAK,WACD,MAAO,0BACX,IAAK,kBACD,MAAO,iCACX,IAAK,WACD,MAAO,sCACX,IAAK,kBACD,MAAO,6CAIf,OAAOqH,GAAOyb,mBAAmB,sBAAuB,UAAW1f,KAAK4kB,QAAQhoB,KACpF,GAAC,oBAED,SAAOmH,EAAgBihC,GACnB,IAAMovB,EAAQn0D,OAAO46B,KAAKmK,GAAQlK,QAAO,SAACC,EAAOh7B,GAC7C,IAAM/D,EAAQgpC,EAAOjlC,GAIrB,OAHa,MAAT/D,IACA++B,GAAS,IAAJ,OAASh7B,EAAI,YAAK/D,IAEpB++B,CACX,GAAG,IACG04B,EAAWzzD,KAAKyzD,OAAM,kBAAgBzzD,KAAKyzD,QAAW,GAC5D,MAAO,GAAP,OAAWzzD,KAAKq0D,QAAQ,uBAAgBtwD,GAAO,OAAIqwD,GAAM,OAAIX,EACjE,GAAC,wBAED,WACI,MAAO,GAAP,OAAWzzD,KAAKq0D,QAAQ,OAC5B,GAAC,yBAED,SAAYtwD,EAAgBihC,GAGxB,OAFAA,EAAOjhC,OAASA,EAChBihC,EAAOsvB,OAASt0D,KAAKyzD,OACdzuB,CACX,GAAC,mBAEK,SAAMjhC,EAAgBihC,EAA6BuvB,G,uJA8BtC,OA7BTpd,EAAOod,EAAOv0D,KAAKw0D,aAAcx0D,KAAKk+C,OAAOn6C,EAAQihC,GACrD3I,EAAWk4B,EAAOv0D,KAAKy0D,YAAY1wD,EAAQihC,GAAS,KACpD0vB,EAAuB,UAAX3wD,EAAsBkwD,GAAepE,GAEvD7vD,KAAKmjC,KAAK,QAAS,CACfstB,OAAQ,UACRrS,QAASjH,EACTpzB,SAAU/jB,OAGR4/C,EAA6B,CAC/BzI,IAAKA,EACL+I,qBAAsB,IACtBD,iBAAkB,SAACuB,EAAiBrK,GAIhC,OAHI,EAAK+N,uBACLE,KAEGjgC,QAAQE,SAAQ,EAC3B,GAGAsvC,EAAqB,KACrBt4B,IACAujB,EAAWtB,QAAU,CAAE,eAAgB,oDACvCqW,EAAa10D,OAAO46B,KAAKwB,GAAStP,KAAI,SAAChtB,GACnC,MAAO,GAAP,OAAWA,EAAI,YAAKs8B,EAAQt8B,GAChC,IAAGtB,KAAK,MACX,SAEoBwjD,GAAUrC,EAAY+U,EAAYD,GAAYT,IAAc,OAO9E,OAPGl2D,EAAS,EAAH,KAEZiC,KAAKmjC,KAAK,QAAS,CACfstB,OAAQ,WACRrS,QAASjH,EACT6H,UAAUhgB,EAAAA,EAAAA,IAASjhC,GACnBgmB,SAAU/jB,OACX,kBAEIjC,GAAM,gD,GAChB,2BAEK,W,yJACKiC,KAAK4kB,SAAO,+C,GACtB,qBAEK,SAAQy5B,EAAgBrZ,GAAW,W,6PAE7BqZ,EAAM,OACL,mBADK,KACW,EAGhB,gBAHgB,KAGH,EAGb,eAHa,KAGD,EAQZ,wBARY,KAQS,EAOrB,YAPqB,KAOZ,EAOT,iBAPS,KAOK,EAQd,oBARc,KAQG,EAQjB,aARiB,KAQP,GAUV,mBAVU,KAUM,GAMhB,0BANgB,KAMO,GAMvB,SANuB,KAMjB,GAgBN,gBAhBM,KAgBO,GAYb,YAZa,KAYJ,GAmDT,kBAnDS,KAmDM,4CAhJTr+C,KAAK++C,MAAM,QAAS,CAAE0R,OAAQ,qBAAoB,gCAGlDzwD,KAAK++C,MAAM,QAAS,CAAE0R,OAAQ,kBAAiB,gCAI/CzwD,KAAK++C,MAAM,UAAW,CACzB0R,OAAQ,UACRhrC,QAASuf,EAAOvf,QAChBib,IAAKsE,EAAOnhB,YACd,gCAGK7jB,KAAK++C,MAAM,QAAS,CACvB0R,OAAQ,0BACRhrC,QAASuf,EAAOvf,QAChBib,IAAKsE,EAAOnhB,YACd,gCAGK7jB,KAAK++C,MAAM,QAAS,CACvB0R,OAAQ,cACRhrC,QAASuf,EAAOvf,QAChBib,IAAKsE,EAAOnhB,YACd,gCAGK7jB,KAAK++C,MAAM,QAAS,CACvB0R,OAAQ,mBACRhrC,QAASuf,EAAOvf,QAChBta,SAAU65B,EAAO75B,SACjBu1B,IAAKsE,EAAOnhB,YACd,gCAGK7jB,KAAK++C,MAAM,QAAS,CACvB0R,OAAQ,yBACRntD,IAAK0hC,EAAO0oB,oBACb,GAAM1qC,OAAM,SAACC,GACZ,OAAO0sC,GAAW,kBAAmB1sC,EAAO+hB,EAAO0oB,kBACvD,KAAE,YAGE1oB,EAAOnhB,SAAU,CAAF,yCACR7jB,KAAK++C,MAAM,QAAS,CACvB0R,OAAQ,uBACR/vB,IAAKsE,EAAOnhB,SACZsgC,QAAUnf,EAAOupB,oBAAsB,OAAQ,WACjD,cAEA,IAAIrxD,MAAM,yCAAwC,iCAGjD8C,KAAK++C,MAAM,QAAS,CACvB0R,OAAQ,2BACRmE,OAAQ5vB,EAAOtF,mBACjB,iCAGK1/B,KAAK++C,MAAM,QAAS,CACvB0R,OAAQ,4BACRmE,OAAQ5vB,EAAOtF,mBACjB,WAGsB,WAApBsF,EAAOnhB,SAAqB,uBACtB,IAAI3mB,MAAM,wDAAuD,QAQhE,OALL23D,EAAWd,GAAuB/uB,EAAO7gB,cACtCpgB,OAAS,QAClB8wD,EAASpE,OAAS,WAAW,oBAGZzwD,KAAK++C,MAAM,QAAS8V,GAAU,GAAK,qGAEzClF,GAAW,OAAQ,EAAF,GAAS3qB,EAAO7gB,cAAY,QAU7C,OALL0wC,EAAWd,GAAuB/uB,EAAO7gB,cACtCpgB,OAAS,QAClB8wD,EAASpE,OAAS,kBAAkB,oBAGnBzwD,KAAK++C,MAAM,QAAS8V,GAAU,GAAK,qGAEzClF,GAAW,cAAe,EAAF,GAAS3qB,EAAO7gB,cAAY,QAkCtC,OA7BnBmZ,EAA4B,CAAEmzB,OAAQ,WAExCzrB,EAAO1G,OAAOyF,YACdzG,EAAKyG,UAAYmwB,GAAYlvB,EAAO1G,OAAOyF,YAG3CiB,EAAO1G,OAAOsF,UACdtG,EAAKsG,QAAUswB,GAAYlvB,EAAO1G,OAAOsF,UAGzCoB,EAAO1G,OAAO7Y,UACd6X,EAAK7X,QAAUuf,EAAO1G,OAAO7Y,SAI7Buf,EAAO1G,OAAOa,QAAU6F,EAAO1G,OAAOa,OAAO/iC,OAAS,IAClD4oC,EAAO1G,OAAOa,OAAO/iC,OAAS,GAC9B6H,GAAOY,WAAW,0BAA2BX,EAAAA,GAAAA,OAAAA,sBAAqC,CAAEi7B,OAAQ6F,EAAO1G,OAAOa,SAG1E,IAAhC6F,EAAO1G,OAAOa,OAAO/iC,SAEE,kBADjB04D,EAAS9vB,EAAO1G,OAAOa,OAAO,KACiB,KAAlB21B,EAAO14D,QACtC6H,GAAOY,WAAW,2BAA4BX,EAAAA,GAAAA,OAAAA,sBAAqC,CAAE4wD,OAAQA,IAEjGx3B,EAAKw3B,OAASA,IAErB,UAE8B90D,KAAK++C,MAAM,OAAQzhB,GAAK,QAAjDwB,EAAI,OAGNi2B,EAAoC,CAAC,EAGhC14D,EAAI,EAAC,aAAEA,EAAIyiC,EAAK1iC,QAAM,iBACR,GACE,OADf+5B,EAAM2I,EAAKziC,IACTmjC,UAAiB,2DACM,MAA3Bu1B,EAAO5+B,EAAI2sB,aAAoB,iBACjB,OADiB,UACX9iD,KAAK6iB,SAASsT,EAAI2sB,aAAY,SAA5CvhD,EAAQ,EAAH,QAEPwzD,EAAO5+B,EAAI2sB,aAAevhD,EAAM6C,MACnC,QAEL+xB,EAAIqJ,UAAYu1B,EAAO5+B,EAAI2sB,aAAa,QATXzmD,IAAG,iDAY7ByiC,GAAI,WAIe,cAAtB9+B,KAAK4kB,QAAQhoB,KAAoB,0CAAW,GAAG,QAChC,OADgC,KAC5CkrC,WAAU,UAAQ9nC,KAAK++C,MAAM,QAAS,CAAE0R,OAAQ,aAAa,QAAQ,OAAR,YAAEuE,OAAM,uGAM7EzB,EAAMvI,QAAO,UAAC3M,EAAQrZ,IAAM,kE,GAMvC,wBACM,SAAWpD,EAAyC+qB,EAAuBsI,G,+IAG/D,O,SAAMj1D,KAAK+kB,YAAY6c,GAAc,OAMpC,OANoC,iBACnB,MAAd+qB,EAAsB,EAAGA,EAAU,KACzB,MAAZsI,EAAoB,SAAUA,EAJxCjwB,EAAS,CACXyrB,OAAQ,SACRhrC,QAAS,EAAF,GACPyvC,WAAY,EAAF,GACVC,SAAU,EAAF,GACRn6B,KAAM,OAAK,SAGMh7B,KAAK++C,MAAM,UAAW/Z,GAAO,OAAtC,OAANjnC,EAAS,EAAH,uBAELA,EAAOgvB,KAAI,SAAC1I,GACf,CAAC,kBAAmB,MAAMvE,SAAQ,SAAS/f,GACxB,IAAXskB,EAAGtkB,WAAqBskB,EAAGtkB,EACnC,IACkB,MAAdskB,EAAG4+B,SAAyC,MAAtB5+B,EAAGwe,kBACzBxe,EAAG4+B,QAAU5+B,EAAGwe,iBAEpB,IAAM/B,EAAO,EAAKqmB,UAAUnD,oBAAoB3/B,GAEhD,OADIA,EAAG+wC,YAAat0B,EAAKkU,UAAY/4C,SAASooB,EAAG+wC,YAC1Ct0B,CACX,KAAE,gD,GACL,iCAED,WACI,OAAuB,MAAf9gC,KAAKyzD,MACjB,KAAC,EAtS0B,CAAQnK,IC5JjC,SAAU+L,GAAShc,GAGrB,IAAK,IAAIh9C,GAFTg9C,EAAQA,EAAMx8C,SAEKT,OAAS,EAAGC,EAAI,EAAGA,IAAK,CACvC,IAAMsF,EAAIsF,KAAKomB,MAAMpmB,KAAK46C,UAAYxlD,EAAI,IACpC2gB,EAAMq8B,EAAMh9C,GAClBg9C,EAAMh9C,GAAKg9C,EAAM13C,GACjB03C,EAAM13C,GAAKqb,C,CAGf,OAAOq8B,CACX,C,2SCEMp1C,GAAS,IAAIC,EAAAA,GAAOi0B,IAE1B,SAAS2c,KAAQ,OAAQ,IAAIC,MAAQ2Q,SAAW,CAIhD,SAAS4P,GAAc5d,GAGnB,IAFA,IAAI35C,EAAS,KAEJ1B,EAAI,EAAGA,EAAIq7C,EAASt7C,OAAQC,IAAK,CACtC,IAAMuoB,EAAU8yB,EAASr7C,GAGzB,GAAe,MAAXuoB,EAAmB,OAAO,KAE1B7mB,EAEMA,EAAOnB,OAASgoB,EAAQhoB,MAAQmB,EAAO8mB,UAAYD,EAAQC,UAC3D9mB,EAAOu5C,aAAe1yB,EAAQ0yB,YAAqC,MAArBv5C,EAAOu5C,YAA4C,MAAtB1yB,EAAQ0yB,aAErFrzC,GAAOyb,mBAAmB,oBAAqB,WAAYg4B,GAG/D35C,EAAS6mB,C,CAIjB,OAAO7mB,CACX,CAEA,SAASw3D,GAAOr1C,EAAuBs1C,GACnCt1C,EAASA,EAAOrjB,QAAQm+B,OACxB,IAAMy6B,EAASxuD,KAAKomB,MAAMnN,EAAO9jB,OAAS,GAG1C,GAAI8jB,EAAO9jB,OAAS,EAChB,OAAO8jB,EAAOu1C,GAIlB,IAAMx0D,EAAIif,EAAOu1C,EAAS,GAAI1uD,EAAImZ,EAAOu1C,GAEzC,OAAgB,MAAZD,GAAoBvuD,KAAK6E,IAAI7K,EAAI8F,GAAKyuD,EAC/B,MAGHv0D,EAAI8F,GAAK,CACrB,CAEA,SAAS00B,GAAUz/B,GACf,GAAc,OAAVA,EACA,MAAO,OACJ,GAAsB,kBAAXA,GAAyC,mBAAXA,EAC5C,OAAOyyB,KAAK8P,UAAUviC,GACnB,GAAsB,kBAAXA,EACd,OAAOA,EACJ,GAAI2jB,EAAAA,GAAAA,YAAsB3jB,GAC7B,OAAOA,EAAM6L,WACV,GAAI/K,MAAMG,QAAQjB,GACrB,OAAOyyB,KAAK8P,UAAUviC,EAAM+wB,KAAI,SAAC1wB,GAAC,OAAKo/B,GAAUp/B,EAAE,KAChD,GAAsB,kBAAXL,EAAqB,CACnC,IAAM6+B,EAAO56B,OAAO46B,KAAK7+B,GAEzB,OADA6+B,EAAKG,OACE,IAAMH,EAAK9N,KAAI,SAAChtB,GACnB,IAAInB,EAAI5C,EAAM+D,GAMd,OAJInB,EADc,oBAAPA,EACH,aAEA68B,GAAU78B,GAEX6vB,KAAK8P,UAAUx+B,GAAO,IAAMnB,CACvC,IAAGH,KAAK,KAAO,G,CAGnB,MAAM,IAAIvB,MAAM,8BAAgClB,EACpD,CAGA,IAAI05D,GAAU,EA+Bd,SAAS/T,GAAMpC,GACX,IAAI8B,EAAqB,KAErBF,EAAsB,KACtBC,EAA0B,IAAIj8B,SAAQ,SAACE,GACvCg8B,EAAS,WACDF,IACAG,aAAaH,GACbA,EAAQ,MAEZ97B,GACJ,EACA87B,EAAQlgB,WAAWogB,EAAQ9B,EAC/B,IAWA,MAAO,CAAE8B,OAAAA,EAAQsU,WAJjB,WACI,OAAOvU,CACX,EAE6B3iB,KAThB,SAACuX,GAEV,OADAoL,EAAUA,EAAQ97B,KAAK0wB,EAE3B,EAOJ,CAEA,IAAM4f,GAAgB,CAClB1xD,EAAAA,GAAAA,OAAAA,eACAA,EAAAA,GAAAA,OAAAA,mBACAA,EAAAA,GAAAA,OAAAA,cACAA,EAAAA,GAAAA,OAAAA,wBACAA,EAAAA,GAAAA,OAAAA,yBAGE2xD,GAAoB,CACtB,UACA,OACA,YACA,iBACA,SACA,eAeJ,SAASC,GAAkBC,EAAuBjhB,GAC9C,IAAM/2C,EAAc,CAChBi4D,OAAQD,EAAOC,QAYnB,OAVA/1D,OAAOC,eAAenC,EAAQ,WAAY,CAAEg1B,IAAK,kBAAMgjC,EAAOhyC,QAAQ,IAClEgyC,EAAOnvD,QAAS7I,EAAO6I,MAAQmvD,EAAOnvD,OACtCkuC,IAAO/2C,EAAOwhD,SAAYzK,EAAMihB,EAAOnvD,OACvCmvD,EAAOl1B,OACHk1B,EAAO9yC,MACPllB,EAAOklB,MAAQ8yC,EAAO9yC,MAEtBllB,EAAOA,OAASg4D,EAAOh4D,QAAU,MAGlCA,CACX,CA0BA,SAASk4D,GAAelyC,EAA4Bs6B,EAAgBrZ,GAEhE,IAAIsK,EAAY7T,GAEhB,OAAQ4iB,GACJ,IAAK,iBAKD,OAAO,SAAS6X,GACZ,IAAMh2C,EAASg2C,EAAQnpC,KAAI,SAAC9uB,GAAC,OAAKA,EAAEF,MAAM,IAGtC+kD,EAAcyS,GAAOW,EAAQnpC,KAAI,SAAC9uB,GAAC,OAAKA,EAAEF,MAAM,IAAG,GACvD,GAAmB,MAAf+kD,EAYJ,OAVAA,EAAc77C,KAAKiB,KAAK46C,GAGpB5iC,EAAO8E,QAAQ89B,EAAc,IAAM,GAAKA,IAGxCA,GAAe/+B,EAASoyC,sBACxBpyC,EAASoyC,oBAAsBrT,GAG5B/+B,EAASoyC,mBACpB,EAEJ,IAAK,cAID,OAAO,SAASD,GACZ,IAAMh2C,EAASg2C,EAAQnpC,KAAI,SAAC9uB,GAAC,OAAKA,EAAEF,MAAM,IAE1C,OADAmiB,EAAO8a,OACA9a,EAAOjZ,KAAKomB,MAAMnN,EAAO9jB,OAAS,GAC7C,EAEJ,IAAK,gBAGD,OAAO,SAAS85D,GACZ,OAAOX,GAAOW,EAAQnpC,KAAI,SAAC9uB,GAAC,OAAKA,EAAEF,MAAM,IAC7C,EAGJ,IAAK,aACL,IAAK,sBACL,IAAK,UACL,IAAK,eACL,IAAK,OACL,IAAK,cACL,IAAK,UACD,MAGJ,IAAK,iBACL,IAAK,wBACDuxC,EAAY,SAASjrB,GACjB,OAAU,MAANA,EAAqB,OAEzBA,GAAKY,EAAAA,EAAAA,IAAYZ,IACdsa,eAAiB,EACblD,GAAUpX,GACrB,EACA,MAGJ,IAAK,WAGGirB,EADAtK,EAAOupB,oBACK,SAAShtD,GACjB,OAAa,MAATA,EAAwB,OAE5BA,GAAQ0jB,EAAAA,EAAAA,IAAY1jB,IACduiD,aAAeviD,EAAMuiD,aAAa/2B,KAAI,SAAC1I,GAGzC,OAFAA,GAAKY,EAAAA,EAAAA,IAAYZ,IACdsa,eAAiB,EACbta,CACX,IACOoX,GAAUl6B,GACrB,EAEY,SAASA,GACjB,OAAa,MAATA,EAAwB,KACrBk6B,GAAUl6B,EACrB,EAEJ,MAEJ,QACI,MAAM,IAAIrE,MAAM,mBAAqBmhD,GAK7C,OA1HJ,SAAyB/O,EAAmC0H,GACxD,OAAO,SAASkf,GAGZ,IAAME,EAA4D,CAAC,EACnEF,EAAQp2C,SAAQ,SAAC7hB,GACb,IAAMjC,EAAQszC,EAAUrxC,EAAEF,QACrBq4D,EAAMp6D,KAAUo6D,EAAMp6D,GAAS,CAAEg2C,MAAO,EAAGj0C,OAAQE,EAAEF,SAC1Dq4D,EAAMp6D,GAAOg2C,OACjB,IAIA,IADA,IAAMnX,EAAO56B,OAAO46B,KAAKu7B,GAChB/5D,EAAI,EAAGA,EAAIw+B,EAAKz+B,OAAQC,IAAK,CAClC,IAAMuhC,EAAQw4B,EAAMv7B,EAAKx+B,IACzB,GAAIuhC,EAAMoU,OAASgF,EACf,OAAOpZ,EAAM7/B,M,CAMzB,CACJ,CAmGWs4D,CAAgB/mB,EAAWvrB,EAASizB,OAE/C,CAIA,SAAesf,GAAYP,EAAuBjT,G,sIACC,KAElB,OAFvB/+B,EAA0BgyC,EAAOhyC,UAEzB++B,aAAuB/+B,EAAS++B,aAAeA,IAAiC,IAAjBA,GAAkB,yCACpF/+B,GAAQ,gCAGZo+B,IAAK,WACR,OAAO,IAAIh9B,SAAQ,SAACE,EAAS2X,GACzBiE,YAAW,WAGP,OAAIld,EAAS++B,aAAeA,EAAsBz9B,EAAQtB,GAGtDgyC,EAAO7I,UAAoB7nC,EAAQ,MAGhCA,OAAQrH,EACnB,GAAG,EACP,GACJ,GAAG,CAAEukC,SAAUx+B,KAAW,0C,CAG9B,SAAewyC,GAAUR,EAAuBS,EAA4BnY,EAAgBrZ,G,wIACpFjhB,EAAWgyC,EAAOhyC,SAAQ,KAEtBs6B,EAAM,OACL,mBADK,MAEL,gBADgB,OAGhB,kBAFa,KAEE,EAKf,eALe,MAMf,wBADY,MAEZ,YADqB,KADT,EAOZ,iBALS,KAKK,GAKd,aALc,KAKJ,GAKV,SALU,MAMV,gBADM,QASN,mBARa,MASb,0BADgB,QAGhB,YAFuB,KAEd,4CAnCHt6B,EAASs6B,MAAS,WAEft6B,EAAU0yC,cAAe,CAAF,wCAChB1yC,EAAU0yC,iBAAe,8CAMtCzxB,EAAOnhB,YAAYigB,EAAAA,EAAAA,IAAYkB,EAAOnhB,UAAS,iBACpC,OADoC,UAC9ByyC,GAAYP,EAAQS,GAAmB,QAAxDzyC,EAAW,EAAH,sCAELA,EAASs6B,GAAQrZ,EAAOvf,QAASuf,EAAOnhB,UAAY,WAAS,YAEhEmhB,EAAOnhB,YAAYigB,EAAAA,EAAAA,IAAYkB,EAAOnhB,UAAS,iBACpC,OADoC,UAC9ByyC,GAAYP,EAAQS,GAAmB,QAAxDzyC,EAAW,EAAH,sCAELA,EAAS2yC,aAAa1xB,EAAOvf,QAASuf,EAAO75B,SAAU65B,EAAOnhB,UAAY,WAAS,YAEtFmhB,EAAOnhB,YAAYigB,EAAAA,EAAAA,IAAYkB,EAAOnhB,UAAS,iBACpC,OADoC,UAC9ByyC,GAAYP,EAAQS,GAAmB,QAAxDzyC,EAAW,EAAH,sCAELA,EAAUihB,EAAOupB,oBAAsB,2BAA4B,YAAavpB,EAAOnhB,UAAYmhB,EAAOxF,YAAU,YAGvHwF,EAAOnhB,YAAYigB,EAAAA,EAAAA,IAAYkB,EAAOnhB,UAAS,iBACpC,OADoC,UAC9ByyC,GAAYP,EAAQS,GAAmB,QAAxDzyC,EAAW,EAAH,gBAEG,SAAXs6B,IAAqBrZ,EAAOnhB,SAAQ,0CAC7BE,EAASs6B,GAAQrZ,EAAO7gB,YAAa6gB,EAAOnhB,WAAS,iCAEzDE,EAASs6B,GAAQrZ,EAAO7gB,cAAY,iCAGpCJ,EAASs6B,GAAQrZ,EAAOtF,kBAAgB,QAErB,MAAtBpB,EAAS0G,EAAO1G,QACRyF,YAAaD,EAAAA,EAAAA,IAAYxF,EAAOyF,YAAgBzF,EAAOsF,UAAWE,EAAAA,EAAAA,IAAYxF,EAAOsF,UAAS,iBAC3F,OAD2F,UACrF0yB,GAAYP,EAAQS,GAAmB,QAAxDzyC,EAAW,EAAH,sCAELA,EAASigB,QAAQ1F,IAAO,iCAIhCr6B,GAAOY,WAAW,uBAAwBX,EAAAA,GAAAA,OAAAA,cAA6B,CAC1Em6C,OAAQA,EACRrZ,OAAQA,KACV,2C,CAGC,IAAM+R,GAAiB,0CAS1B,WAAYd,EAAqDe,GAAe,sBACnD,IAArBf,EAAU75C,QACV6H,GAAOyb,mBAAmB,oBAAqB,YAAau2B,GAGhE,IAAM0gB,EAAiD1gB,EAAUlpB,KAAI,SAAC6pC,EAAkBr2D,GACpF,GAAIkiB,EAASsf,WAAW60B,GAAmB,CACvC,IAAMC,EAAe3R,GAAoB0R,GAAoB,IAAM,IAEnE,OAAO32D,OAAO0mC,OAAO,CAAE5iB,SAAU6yC,EAAkBZ,OAAQ,EAAGa,aAAAA,EAAcC,SAD3D,G,CAIrB,IAAMf,GAAiC9wC,EAAAA,EAAAA,IAAY2xC,GAE5B,MAAnBb,EAAOe,WAAoBf,EAAOe,SAAW,GACtB,MAAvBf,EAAOc,eACPd,EAAOc,aAAe3R,GAAoB0R,GAAoB,IAAM,KAEnD,MAAjBb,EAAOC,SAAkBD,EAAOC,OAAS,GAE7C,IAAMA,EAASD,EAAOC,OAKtB,OAJIA,EAAS,GAAKA,EAAS,KAAOA,EAAS,IACvC/xD,GAAOyb,mBAAmB,8CAA+C,aAAF,OAAgBnf,EAAM,YAAYy1D,GAGtG/1D,OAAO0mC,OAAOovB,EACzB,IAEMvtD,EAAQmuD,EAAgB77B,QAAO,SAACC,EAAO98B,GAAC,OAAM88B,EAAQ98B,EAAE+3D,MAAM,GAAG,GAEzD,MAAVhf,EACAA,EAASxuC,EAAQ,EACVwuC,EAASxuC,GAChBvE,GAAOyb,mBAAmB,oDAAqD,SAAUs3B,GAI7F,IAAI4Z,EAA6C0E,GAAcqB,EAAgB5pC,KAAI,SAAC9uB,GAAC,OAAYA,EAAE8lB,SAAWa,OAAO,KAiBvF,OAdR,MAAlBgsC,IACAA,EAAiB,IAAIzrC,SAAQ,SAACE,EAAS2X,GACnCiE,YAAW,WACP,EAAK2oB,gBAAgBtkC,KAAKD,EAAS2X,EACvC,GAAG,EACP,KAGJ,cAAM4zB,IAGNjuC,EAAAA,EAAAA,KAAe,UAAM,kBAAmB1iB,OAAO0mC,OAAOgwB,KACtDh0C,EAAAA,EAAAA,KAAe,UAAM,SAAUq0B,GAE/B,EAAKmf,qBAAuB,EAAE,CAClC,CAuLC,OAvLA,qCAEK,W,sIACe,O,SAAMhxC,QAAQC,IAAIplB,KAAK22D,gBAAgB5pC,KAAI,SAAC9uB,GAAC,OAAKA,EAAE8lB,SAASY,YAAY,KAAE,OAA9E,OAAR+yB,EAAW,EAAH,uBACP4d,GAAc5d,IAAS,+C,GACjC,qBAEK,SAAQ2G,EAAgBrZ,G,kKAEX,oBAAXqZ,EAA4B,iBACW,OADX,SACiBl5B,QAAQC,IAAIplB,KAAK22D,gBAAgB5pC,KAAI,SAAC9uB,GAC/E,OAAOA,EAAE8lB,SAASW,gBAAgBsgB,EAAO0oB,mBAAmBpoC,MAAK,SAACvnB,GAC9D,OAAOA,EAAOqG,IAClB,IAAG,SAAC6e,GACA,OAAOA,CACX,GACJ,KAAG,OANG+C,EAAO,OASJ3pB,EAAI,EAAC,YAAEA,EAAI2pB,EAAQ5pB,QAAM,iBACL,GACF,kBADjB2B,EAASioB,EAAQ3pB,IACQ,yCAAW0B,GAAM,OAFhB1B,IAAG,6BAMjC2pB,EAAQ,GAAE,YAKc,IAA9BhmB,KAAKm2D,qBAAyC,mBAAX9X,EAA2B,iBAC9D,OAD8D,UACxDr+C,KAAKosD,iBAAgB,QAGzBvM,EAAcoW,GAAej2D,KAAMq+C,EAAQrZ,IAI3CkxB,EAAgCb,GAASr1D,KAAK22D,gBAAgB5pC,IAAI9H,EAAAA,MAChE+V,MAAK,SAAC/5B,EAAG8F,GAAC,OAAM9F,EAAE61D,SAAW/vD,EAAE+vD,QAAQ,IAEzCN,EAAqBx2D,KAAKm2D,oBAE5B95D,EAAI,EACJ06D,GAAQ,EAAI,uHASZ,IAPMC,EAAKliB,KAGPmiB,EAAiBf,EAAQ53B,QAAO,SAACrgC,GAAC,OAAMA,EAAEwtD,QAAYuL,EAAK/4D,EAAE2I,MAAS3I,EAAE44D,YAAa,IAC5D/7B,QAAO,SAACC,EAAO98B,GAAC,OAAM88B,EAAQ98B,EAAE+3D,MAAM,GAAG,GAEtE,aAEI,IAAMD,EAASG,EAAQ75D,KAEjBu2D,EAAM8C,KAEZK,EAAOnvD,MAAQkuC,KACfihB,EAAOzW,QAAUqC,GAAMoU,EAAOc,cAC9Bd,EAAOzW,QAAQ7gB,MAAK,WAAQs3B,EAAOzW,QAAU,IAAM,IAEnDyW,EAAOtK,OAAS8K,GAAUR,EAAQS,EAAoBnY,EAAQrZ,GAAQ1f,MAAK,SAACvnB,GACxEg4D,EAAOl1B,MAAO,EACdk1B,EAAOh4D,OAASA,EAEZ,EAAKgjC,cAAc,UACnB,EAAKoC,KAAK,QAAS,CACfstB,OAAQ,UACRmC,IAAKA,EACLsE,QAASpB,GAAkBC,EAAQjhB,MACnCsJ,QAAS,CAAEC,OAAQA,EAAQrZ,QAAQhG,EAAAA,EAAAA,IAASgG,IAC5CjhB,SAAU,GAItB,IAAG,SAACd,GACA8yC,EAAOl1B,MAAO,EACdk1B,EAAO9yC,MAAQA,EAEX,EAAK8d,cAAc,UACnB,EAAKoC,KAAK,QAAS,CACfstB,OAAQ,UACRmC,IAAKA,EACLsE,QAASpB,GAAkBC,EAAQjhB,MACnCsJ,QAAS,CAAEC,OAAQA,EAAQrZ,QAAQhG,EAAAA,EAAAA,IAASgG,IAC5CjhB,SAAU,GAGtB,IAEI,EAAKgd,cAAc,UACnB,EAAKoC,KAAK,QAAS,CACfstB,OAAQ,UACRmC,IAAKA,EACLsE,QAASpB,GAAkBC,EAAQ,MACnC3X,QAAS,CAAEC,OAAQA,EAAQrZ,QAAQhG,EAAAA,EAAAA,IAASgG,IAC5CjhB,SAAU,IAIlBkzC,GAAkBlB,EAAOC,MAAO,EAhD7BiB,EAAiB,EAAKjgB,QAAU36C,EAAI65D,EAAQ95D,QAAQ,IAyDxD,GALG+6D,EAA+B,GACrCjB,EAAQp2C,SAAQ,SAAC7hB,IACTA,EAAE4iC,MAAS5iC,EAAEwtD,SACjB0L,EAAQh5D,KAAKF,EAAEwtD,QACXxtD,EAAEqhD,SAAW6X,EAAQh5D,KAAKF,EAAEqhD,QAAQqW,cAC5C,KAEIwB,EAAQ/6D,OAAQ,CAAF,eAAI,OAAJ,SAAU+oB,QAAQ68B,KAAKmV,GAAQ,OAIiB,MAA5DnxC,EAAUkwC,EAAQ53B,QAAO,SAACrgC,GAAC,OAAMA,EAAE4iC,MAAmB,MAAX5iC,EAAEglB,KAAa,KACpD7mB,QAAU,EAAK46C,QAAM,iBACM,QACpBh5B,KADTjgB,EAAS8hD,EAAY75B,IACH,iBAKjB,OAHHkwC,EAAQp2C,SAAQ,SAAA7hB,GACRA,EAAEqhD,SAAWrhD,EAAEqhD,QAAQ+B,SAC3BpjD,EAAEivD,WAAY,CAClB,IAAG,qBACInvD,IAAM,WAEZg5D,EAAO,CAAF,gBAAI,OAAJ,UAAUpV,GAAM,KAAKgU,aAAY,QAC3CoB,GAAQ,EAAM,QAqClB,GAjCMv1B,EAAS00B,EAAQp7B,QAAO,SAACC,EAAO98B,GAClC,IAAKA,EAAE4iC,MAAmB,MAAX5iC,EAAEglB,MAAiB,OAAO8X,EAEzC,IAAMjV,EAAc7nB,EAAEglB,MAAQ6C,KAM9B,OALI8vC,GAAc5wC,QAAQc,IAAS,IAC1BiV,EAAMjV,KAASiV,EAAMjV,GAAQ,CAAE7C,MAAOhlB,EAAEglB,MAAO+yC,OAAQ,IAC5Dj7B,EAAMjV,GAAMkwC,QAAU/3D,EAAE+3D,QAGrBj7B,CACX,GAA4D,CAAC,GAE7D96B,OAAO46B,KAAK2G,GAAQ1hB,SAAQ,SAACs3C,GACzB,IAAMhB,EAAQ50B,EAAO41B,GACrB,KAAIhB,EAAMJ,OAAS,EAAKhf,QAAxB,CAGAkf,EAAQp2C,SAAQ,SAAA7hB,GACRA,EAAEqhD,SAAWrhD,EAAEqhD,QAAQ+B,SAC3BpjD,EAAEivD,WAAY,CAClB,IAEA,IAAM7mD,EAAU+vD,EAAMnzC,MAEhBo0C,EAAmC,CAAC,EAC1CxB,GAAkB/1C,SAAQ,SAACljB,GACR,MAAXyJ,EAAEzJ,KACNy6D,EAAMz6D,GAAQyJ,EAAEzJ,GACpB,IAEAqH,GAAOY,WAAWwB,EAAE4uB,QAAU5uB,EAAE8f,QAAcixC,EAAWC,E,CAC7D,IAG8C,IAA1CnB,EAAQ53B,QAAO,SAACrgC,GAAC,OAAMA,EAAE4iC,IAAI,IAAEzkC,OAAY,sGAzHxC,6NAgIR,OAHH85D,EAAQp2C,SAAQ,SAAA7hB,GACRA,EAAEqhD,SAAWrhD,EAAEqhD,QAAQ+B,SAC3BpjD,EAAEivD,WAAY,CAClB,IAAG,kBAEIjpD,GAAOY,WAAW,wBAAyBX,EAAAA,GAAAA,OAAAA,aAA4B,CAC1Em6C,OAAQA,EACRrZ,OAAQA,EAGRhf,QAASkwC,EAAQnpC,KAAI,SAAC9uB,GAAC,OAAK63D,GAAkB73D,EAAE,IAChD8lB,SAAU/jB,QACZ,gD,KACL,EAvPyB,CAAQspD,ICnZhCgO,GAAmB,KCSnBrzD,GAAS,IAAIC,EAAAA,GAAOi0B,IAKpBo/B,GAAmB,mCAEZC,GAAwB,0CAKjC,WAAY5yC,EAAsB6uC,GAAY,sBAC1C,IAAM1vC,EAAW,IAAIoyB,GAAevxB,EAAS6uC,GACvC7T,EAAa77B,EAAS67B,WACxBA,EAAW7T,UACX9nC,GAAOY,WAAW,+CAAgDX,EAAAA,GAAAA,OAAAA,sBAAqC,CACnGY,UAAW,0CAInB,IAAMqyC,EAAMyI,EAAWzI,IAAIrvC,QAAQ,SAAU,MAAMA,QAAQ,OAAQ,WAKL,OAJ9D,cAAMqvC,EAAKvyB,IAEXjC,EAAAA,EAAAA,KAAe,UAAM,SAAUoB,EAAS0zC,YACxC90C,EAAAA,EAAAA,KAAe,UAAM,YAAaoB,EAAS0zC,YAC3C90C,EAAAA,EAAAA,KAAe,UAAM,gBAAiBoB,EAAS+vC,eAAe,CAClE,CAIC,OAJA,2CAED,WACI,OAAQ9zD,KAAKy3D,YAAcF,EAC/B,KAAC,EAxBgC,CAAQvF,IA2BhC7b,GAAe,qGA4FvB,OA5FuB,2CA8FxB,WACI,OAAQn2C,KAAKy3D,YAAcF,EAC/B,IAAC,mCA5FD,SAA4B3yC,EAAsB6uC,GAC9C,OAAO,IAAI+D,GAAwB5yC,EAAS6uC,EAChD,GAAC,uBAED,SAAiBA,GACb,IAAMiE,EAA0E,CAC5EjE,OAAQ8D,GACRE,UAAWF,GACXzD,cAAe,MAGnB,OAAc,MAAVL,IAEmB,kBAAZA,EACPiE,EAAUD,UAAYhE,EAES,MAAxBA,EAAOK,eACd7vD,GAAO+7C,eAA6C,kBAAtByT,EAAOgE,UACjC,qCAAsC,YAAahE,EAAOgE,WAC9DxzD,GAAO+7C,eAAiD,kBAA1ByT,EAAOK,cACjC,wBAAyB,gBAAiB,cAE9C4D,EAAUD,UAAYhE,EAAOgE,UAC7BC,EAAU5D,cAAgBL,EAAOK,eAE1BL,EAAOgE,YACdC,EAAUD,UAAYhE,EAAOgE,WAGjCC,EAAUjE,OAASiE,EAAUD,WAlBAC,CAqBjC,GAAC,oBAED,SAAc9yC,EAAkB6uC,GAC5B,IAAIG,EAAe,KACnB,OAAOhvC,EAAUA,EAAQhoB,KAAM,WAC3B,IAAK,YACDg3D,EAAO,oBACP,MACJ,IAAK,SACDA,EAAO,mBACP,MACJ,IAAK,UACDA,EAAO,oBACP,MACJ,IAAK,QACDA,EAAO,4BACP,MACJ,IAAK,WACDA,EAAO,2BACP,MACJ,IAAK,WACDA,EAAO,6BACP,MACJ,IAAK,kBACDA,EAAO,4BACP,MACJ,IAAK,WACDA,EAAO,6BACP,MACJ,IAAK,kBACDA,EAAO,4BACP,MACJ,QACI3vD,GAAOY,WAAW,sBAAuBX,EAAAA,GAAAA,OAAAA,iBAAgC,CACrEg5B,SAAU,UACVlhC,MAAO4oB,IAInB,IAAMg7B,EAA6B,CAC/BU,WAAW,EACXnJ,IAAM,WAAkByc,EAAO,OAASH,EAAOgE,UAC/CxX,iBAAkB,SAACuB,EAAiBrK,GAIhC,OAHIsc,EAAOgE,YAAcF,IACrBnS,KAEGjgC,QAAQE,SAAQ,EAC3B,GAQJ,OAL4B,MAAxBouC,EAAOK,gBACPlU,EAAWW,KAAO,GAClBX,EAAW7T,SAAW0nB,EAAOK,eAG1BlU,CACX,KAAC,EA5FuB,CAAQ4T,ICrCvBmE,GAAqB,qGAuF7B,OAvF6B,4BAQ9B,SAAKtZ,EAAgBrZ,GAAkB,WAC7BoZ,EAAU,CACZC,OAAQA,EACRrZ,OAAQA,EACRmE,GAAKnpC,KAAK6wD,UACVM,QAAS,OAGa,MAAtBnxD,KAAK43D,gBACL53D,KAAK43D,cAAgB,IAGzB,IAAMC,EAAuB,CAAEzZ,QAAAA,EAAS/4B,QAAS,KAAM2X,OAAQ,MAEzDokB,EAAU,IAAIj8B,SAAQ,SAACE,EAAS2X,GAClC66B,EAAgBxyC,QAAUA,EAC1BwyC,EAAgB76B,OAASA,CAC7B,IA6DA,OA3DAh9B,KAAK43D,cAAcz5D,KAAK05D,GAEnB73D,KAAK83D,0BAEN93D,KAAK83D,wBAA0B72B,YAAW,WAItC,IAAM82B,EAAQ,EAAKH,cACnB,EAAKA,cAAgB,KACrB,EAAKE,wBAA0B,KAG/B,IAAM1Z,EAAU2Z,EAAMhrC,KAAI,SAACirC,GAAQ,OAAKA,EAAS5Z,OAAO,IAQxD,OANA,EAAKjb,KAAK,QAAS,CACfstB,OAAQ,eACRrS,SAASpf,EAAAA,EAAAA,IAASof,GAClBr6B,SAAU,IAGPk+B,GAAU,EAAKrC,WAAYnxB,KAAK8P,UAAU6f,IAAU94B,MAAK,SAACvnB,GAC7D,EAAKolC,KAAK,QAAS,CACfstB,OAAQ,WACRrS,QAASA,EACTY,SAAUjhD,EACVgmB,SAAU,IAKdg0C,EAAMj4C,SAAQ,SAAC+3C,EAAiBt3D,GAC5B,IAAM87B,EAAUt+B,EAAOwC,GACvB,GAAI87B,EAAQpZ,MAAO,CACf,IAAMA,EAAQ,IAAI/lB,MAAMm/B,EAAQpZ,MAAMkD,SAChClD,EAAO6C,KAAOuW,EAAQpZ,MAAM6C,KAC5B7C,EAAOtf,KAAO04B,EAAQpZ,MAAMtf,KAClCk0D,EAAgB76B,OAAO/Z,E,MAEvB40C,EAAgBxyC,QAAQgX,EAAQt+B,OAExC,GAEJ,IAAG,SAACklB,GACA,EAAKkgB,KAAK,QAAS,CACfstB,OAAQ,WACRxtC,MAAOA,EACPm7B,QAASA,EACTr6B,SAAU,IAGdg0C,EAAMj4C,SAAQ,SAAC+3C,GACXA,EAAgB76B,OAAO/Z,EAC3B,GACJ,GAEJ,GAAG,KAGAm+B,CACX,KAAC,EAvF6B,CAAQhK,ICCpCnzC,GAAS,IAAIC,EAAAA,GAAOi0B,IAKb8/B,GAAkB,qGAkC1B,OAlC0B,sCAE3B,SAAiBxE,GAIb,OAHIA,GAA6B,kBAAZA,GACjBxvD,GAAOyb,mBAAmB,iBAAkB,SAAU+zC,GAEnDA,GARO,kBASlB,GAAC,oBAED,SAAc7uC,EAAkB6uC,GAC5BxvD,GAAOk+B,KAAK,qFAEZ,IAAIyxB,EAAO,KACX,OAAQhvC,EAAQhoB,MACZ,IAAK,YACDg3D,EAAO,uDACP,MACJ,IAAK,UACDA,EAAO,uDACP,MACJ,IAAK,UACDA,EAAO,uDACP,MACJ,IAAK,SACDA,EAAO,sDACP,MACJ,IAAK,QACDA,EAAO,qDACP,MACJ,QACG3vD,GAAOyb,mBAAmB,sBAAuB,UAAWqC,UAAU,IAG7E,OAAQ6xC,EAAO,WAAaH,CAChC,KAAC,EAlC0B,CAAQD,ICPjCvvD,GAAS,IAAIC,EAAAA,GAAOi0B,IAIpB+/B,GAAuB,2BAGhBzhB,GAAe,qGAyEvB,OAzEuB,2CA2ExB,WACI,OAAQz2C,KAAKm4D,gBAAkBD,EACnC,IAAC,wBAxED,SAAiBzE,GACb,IAAMiE,EAA4F,CAC9FS,cAAe,KACfC,cAAc,EACdC,qBAAsB,MAqB1B,OAjBc,MAAV5E,EACAiE,EAAUS,cAAgBD,GAEC,kBAAZzE,EACfiE,EAAUS,cAAgB1E,EAEY,MAA/BA,EAAO4E,sBACdX,EAAUS,cAAgB1E,EAAO0E,cACjCT,EAAUW,qBAAuB5E,EAAO4E,sBAEjC5E,EAAO0E,cACdT,EAAUS,cAAgB1E,EAAO0E,cAGjCl0D,GAAOyb,mBAAmB,oCAAqC,SAAU+zC,GAGtEiE,CACX,GAAC,oBAED,SAAc9yC,EAAkB6uC,GAC5B,IAAIG,EAAe,KACnB,OAAQhvC,EAAUA,EAAQhoB,KAAO,WAC7B,IAAK,SACDg3D,EAAO,kCACP,MACJ,IAAK,YACDA,EAAO,mCACP,MACJ,IAAK,QACDA,EAAO,iCACP,MACJ,IAAK,QACDA,EAAO,oCACP,MACJ,IAAK,WACDA,EAAO,0CACP,MACJ,IAAK,UACDA,EAAO,mCACP,MACJ,IAAK,UACDA,EAAO,mCACP,MACJ,QACI3vD,GAAOY,WAAW,sBAAuBX,EAAAA,GAAAA,OAAAA,iBAAgC,CACrEg5B,SAAU,UACVlhC,MAAO4oB,IAInB,IAEMg7B,EAA6B,CAAEtB,QAAS,CAAC,EAAInH,IAFvC,WAAH,OAAgByc,EAAK,kBAAWH,EAAO0E,gBAQhD,OALmC,MAA/B1E,EAAO4E,uBACPzY,EAAWW,KAAO,GAClBX,EAAW7T,SAAW0nB,EAAO4E,sBAG1BzY,CACX,KAAC,EAzEuB,CAAQ4T,ICP9BvvD,GAAS,IAAIC,EAAAA,GAAOi0B,IAetB04B,GAAU,EAMd,SAASyH,GAAuBv0C,EAA4Bw0C,GACxD,IAAMC,EAAU,oBAEhB,OAAO,SAASna,EAAgBrZ,GAAkB,WACxCoZ,EAAU,CACZC,OAAQA,EACRrZ,OAAQA,EACRmE,GAAK0nB,KACLM,QAAS,OAGb,OAAO,IAAIhsC,SAAQ,SAACE,EAAS2X,GACzB,EAAKmG,KAAK,QAAS,CACfstB,OAAQ,UACR+H,QAAAA,EACApa,SAASpf,EAAAA,EAAAA,IAASof,GAClBr6B,SAAU,IAGdw0C,EAASna,GAAS,SAACn7B,EAAO+7B,GAEtB,GAAI/7B,EASA,OARA,EAAKkgB,KAAK,QAAS,CACfstB,OAAQ,WACR+H,QAAAA,EACAv1C,MAAAA,EACAm7B,QAAAA,EACAr6B,SAAU,IAGPiZ,EAAO/Z,GAWlB,GARA,EAAKkgB,KAAK,QAAS,CACfstB,OAAQ,WACR+H,QAAAA,EACApa,QAAAA,EACAY,SAAAA,EACAj7B,SAAU,IAGVi7B,EAAS/7B,MAAO,CAChB,IAAMA,EAAQ,IAAI/lB,MAAM8hD,EAAS/7B,MAAMkD,SAGvC,OAFMlD,EAAO6C,KAAOk5B,EAAS/7B,MAAM6C,KAC7B7C,EAAOtf,KAAOq7C,EAAS/7B,MAAMtf,KAC5Bq5B,EAAO/Z,E,CAGlBoC,EAAQ25B,EAASjhD,OACrB,GACJ,GACJ,CACJ,CAwCO,IAAM06D,GAAa,0CAItB,WAAY10C,EAA+Ca,GAAoB,sBAC3D,MAAZb,GACA9f,GAAOyb,mBAAmB,mBAAoB,WAAYqE,GAG9D,IAAImqB,EAAe,KACfwqB,EAAqC,KACrCC,EAAgC,KA+BU,MA7BrB,oBAAd50C,GACPmqB,EAAO,WACPwqB,EAAmB30C,MAGnBmqB,EAAOnqB,EAAS6vC,MAAQ7vC,EAASmqB,MAAQ,KAC5BnqB,EAAS60C,aAClB1qB,EAAO,YAGXyqB,EAAc50C,EAEVA,EAASq6B,SACI,KAATlQ,IAAeA,EAAO,aAC1BwqB,EAjEhB,SAA6B30C,GACzB,OAAO,SAASs6B,EAAgBrZ,GAAkB,WAChC,MAAVA,IAAkBA,EAAS,IAE/B,IAAMoZ,EAAU,CAAEC,OAAAA,EAAQrZ,OAAAA,GAS1B,OAPAhlC,KAAKmjC,KAAK,QAAS,CACfstB,OAAQ,UACR+H,QAAS,iBACTpa,SAASpf,EAAAA,EAAAA,IAASof,GAClBr6B,SAAU/jB,OAGP+jB,EAASq6B,QAAQA,GAAS94B,MAAK,SAAC05B,GASnC,OARA,EAAK7b,KAAK,QAAS,CACfstB,OAAQ,WACR+H,QAAS,iBACTpa,QAAAA,EACAY,SAAAA,EACAj7B,SAAU,IAGPi7B,CAEX,IAAG,SAAC/7B,GASA,MARA,EAAKkgB,KAAK,QAAS,CACfstB,OAAQ,WACR+H,QAAS,iBACTpa,QAAAA,EACAn7B,MAAAA,EACAc,SAAU,IAGRd,CACV,GACJ,CACJ,CA6BmC41C,CAAoB90C,IAChCA,EAAS+0C,UAChBJ,EAAmBJ,GAAuBv0C,EAAUA,EAAS+0C,UAAUp6B,KAAK3a,IACrEA,EAASqsC,KAChBsI,EAAmBJ,GAAuBv0C,EAAUA,EAASqsC,KAAK1xB,KAAK3a,IAEvE9f,GAAOyb,mBAAmB,uBAAwB,WAAYqE,GAG7DmqB,IAAQA,EAAO,aAGxB,cAAMA,EAAMtpB,IAEZjC,EAAAA,EAAAA,KAAe,UAAM,mBAAoB+1C,IACzC/1C,EAAAA,EAAAA,KAAe,UAAM,WAAYg2C,GAAa,CAClD,CAIC,OAJA,4BAED,SAAKta,EAAgBrZ,GACjB,OAAOhlC,KAAK04D,iBAAiBra,EAAQrZ,EACzC,KAAC,EA/CqB,CAAQoS,IC/E5BnzC,GAAS,IAAIC,EAAAA,GAAOi0B,IAK1B,SAAS4gC,GAAmBn0C,EAAsBiO,GAI9C,GAHe,MAAXjO,IAAmBA,EAAU,aAGT,kBAAbA,EAAuB,CAI9B,IAAMnF,EAAQmF,EAAQnF,MAAM,kBAC5B,GAAIA,EACA,OAAQA,EAAM,GAAG2B,eACb,IAAK,OAAQ,IAAK,QACd,OAAO,IAAIg2B,GAAgBxyB,GAC/B,IAAK,KAAM,IAAK,MACZ,OAAO,IAAIotC,GAAkBptC,GACjC,QACI3gB,GAAOyb,mBAAmB,yBAA0B,UAAWkF,G,CAK/E,IAAM3P,EAAI0P,GAAWC,GAQrB,OAPK3P,GAAMA,EAAEsiC,kBACTtzC,GAAOY,WAAW,yCAA0CX,EAAAA,GAAAA,OAAAA,cAA6B,CACrFY,UAAW,qBACX8f,QAASA,IAIV3P,EAAEsiC,iBAAiB,CACtBR,iBAAAA,GAEAR,gBAAAA,GACAM,aAAAA,GACAF,mBAAAA,GACAN,kBAAAA,GACAF,eAAAA,GACAiB,gBAAAA,GACA6gB,kBAAAA,GACAxhB,eAAAA,GACAgiB,aAAAA,GAEAnB,YAAAA,IACDzkC,EACP,C,wCCnEA,SAASmmC,GAAYr1D,EAAcqyC,GAC1BA,IACDA,EAAO,SAASh6C,GAAiB,MAAO,CAAEC,SAASD,EAAO,IAAO,GAGrE,IAAIuO,EAAK,EAELxM,EAAgB,CAAC,EAOrB,OANA4F,EAAKma,MAAM,KAAKgC,SAAQ,SAACm5C,GACrB,IAAI9yB,EAAQ8yB,EAAKn7C,MAAM,KACvBvT,GAAMtO,SAASkqC,EAAM,GAAI,IACzBpoC,EAAOwM,GAAMyrC,EAAK7P,EAAM,GAC5B,IAEOpoC,CACX,CAEA,SAASm7D,GAAiBv1D,GACtB,IAAI+H,EAAK,EACT,OAAO/H,EAAKma,MAAM,KAAKiP,KAAI,SAACnuB,GACxB,IAAIunC,EAAQvnC,EAAEkf,MAAM,KASpB,OARqB,IAAjBqoB,EAAM/pC,OACN+pC,EAAM,GAAK,IACS,KAAbA,EAAM,KACbA,EAAM,GAAK,KAKR,CAAE3yB,EAFA9H,EAAKzP,SAASkqC,EAAM,GAAI,IAEjBjvB,EADhBxL,EAAKzP,SAASkqC,EAAM,GAAI,IAE5B,GACJ,CAEA,SAASgzB,GAASn9D,EAAeo9D,GAE7B,IADA,IAAI7uD,EAAK,EACAlO,EAAI,EAAGA,EAAI+8D,EAAOh9D,OAAQC,IAAK,CACpC,IAAIk+C,EAAQ6e,EAAO/8D,GAEnB,GAAIL,IADJuO,GAAMgwC,EAAM/mC,IACOxX,GAASuO,EAAKgwC,EAAMrjC,IAAOlb,EAAQuO,IAAOgwC,EAAMtpB,GAAK,KAAQ,EAAG,CAC/E,GAAIspB,EAAMl0C,IAAsC,IAAjCk0C,EAAMl0C,EAAE2e,QAAQhpB,EAAQuO,GAAc,SACrD,OAAOgwC,C,EAGf,OAAO,IACX,CAEA,IAAM8e,GAAmBH,GAAiB,g8CAGpCI,GAAkB,sDAAsDx7C,MAAM,KAAKiP,KAAI,SAACnuB,GAAC,OAAK3C,SAAS2C,EAAG,GAAG,IAE7G26D,GAAkC,CACpC,CAAEriD,EAAG,GAAIhD,EAAG,GAAIV,EAAG,IACnB,CAAE0D,EAAG,GAAIhD,EAAG,GAAI7N,EAAG,CAAE,IAAMmN,EAAG,KAC9B,CAAE0D,EAAG,GAAIhD,EAAG,EAAG7N,EAAG,CAAE,IAAMmN,EAAG,GAAIyd,EAAG,GACpC,CAAE/Z,EAAG,GAAIhD,EAAG,EAAGV,EAAG,GAAIyd,EAAG,GACzB,CAAE/Z,EAAG,GAAIhD,EAAG,EAAGV,EAAG,GAAIyd,EAAG,GACzB,CAAE/Z,EAAG,GAAIhD,EAAG,EAAG7N,EAAG,CAAE,EAAG,EAAG,GAAKmN,EAAG,GAAIyd,EAAG,GACzC,CAAE/Z,EAAG,GAAIhD,EAAG,EAAGV,EAAG,GAAIyd,EAAG,GACzB,CAAE/Z,EAAG,GAAIhD,EAAG,EAAG7N,EAAG,CAAE,GAAI,GAAI,IAAMmN,EAAG,GAAIyd,EAAG,GAC5C,CAAE/Z,EAAG,GAAIhD,EAAG,GAAI7N,EAAG,CAAE,IAAMmN,EAAG,KAC9B,CAAE0D,EAAG,GAAIhD,EAAG,EAAGV,EAAG,GAAIyd,EAAG,GACzB,CAAE/Z,EAAG,GAAIhD,EAAG,GAAIV,EAAG,IACnB,CAAE0D,EAAG,GAAIhD,EAAG,GAAIV,EAAG,IACnB,CAAE0D,EAAG,GAAIhD,EAAG,EAAGV,EAAG,GAAIyd,EAAG,GACzB,CAAE/Z,EAAG,GAAIhD,EAAG,EAAGV,EAAG,GAAIyd,EAAG,GACzB,CAAE/Z,EAAG,GAAIhD,EAAG,EAAGV,EAAG,GAAIyd,EAAG,GACzB,CAAE/Z,EAAG,GAAIhD,EAAG,EAAG7N,EAAG,CAAE,IAAMmN,EAAG,GAAIyd,EAAG,GACpC,CAAE/Z,EAAG,GAAIhD,EAAG,EAAGV,EAAG,GAAIyd,EAAG,GACzB,CAAE/Z,EAAG,GAAIhD,EAAG,GAAIV,EAAG,IACnB,CAAE0D,EAAG,IAAKhD,EAAG,EAAGV,EAAG,KAAMyd,EAAG,GAC5B,CAAE/Z,EAAG,GAAIhD,EAAG,EAAGV,EAAG,IAAKyd,EAAG,GAC1B,CAAE/Z,EAAG,GAAIhD,EAAG,GAAIV,EAAG,KACnB,CAAE0D,EAAG,GAAIhD,EAAG,GAAIV,EAAG,KACnB,CAAE0D,EAAG,GAAIhD,EAAG,GAAIV,EAAG,OACnB,CAAE0D,EAAG,GAAIhD,EAAG,GAAIV,EAAG,MACnB,CAAE0D,EAAG,GAAIhD,GAAI,OAAQV,EAAG,OACxB,CAAE0D,EAAG,GAAIhD,GAAI,OAAQV,EAAG,IACxB,CAAE0D,EAAG,GAAIhD,GAAI,OAAQV,EAAG,IACxB,CAAE0D,EAAG,GAAIhD,GAAI,OAAQ7N,EAAG,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAMmN,EAAG,IAC1D,CAAE0D,EAAG,GAAIhD,GAAI,OAAQV,EAAG,IACxB,CAAE0D,EAAG,GAAIhD,GAAI,OAAQ7N,EAAG,CAAE,EAAG,EAAG,EAAG,IAAMmN,EAAG,IAC5C,CAAE0D,EAAG,GAAIhD,GAAI,OAAQ7N,EAAG,CAAE,EAAG,EAAG,GAAI,GAAI,GAAI,IAAMmN,EAAG,IACrD,CAAE0D,EAAG,GAAIhD,GAAI,OAAQV,EAAG,IACxB,CAAE0D,EAAG,GAAIhD,GAAI,OAAQV,EAAG,IACxB,CAAE0D,EAAG,GAAIhD,GAAI,OAAQV,EAAG,IACxB,CAAE0D,EAAG,GAAIhD,GAAI,OAAQV,EAAG,IACxB,CAAE0D,EAAG,GAAIhD,GAAI,OAAQV,EAAG,IACxB,CAAE0D,EAAG,GAAIhD,GAAI,OAAQV,EAAG,IACxB,CAAE0D,EAAG,GAAIhD,GAAI,OAAQ7N,EAAG,CAAE,IAAMmN,EAAG,IACnC,CAAE0D,EAAG,GAAIhD,GAAI,OAAQ7N,EAAG,CAAE,IAAMmN,EAAG,IACnC,CAAE0D,EAAG,GAAIhD,GAAI,OAAQ7N,EAAG,CAAE,IAAMmN,EAAG,IACnC,CAAE0D,EAAG,GAAIhD,GAAI,OAAQ7N,EAAG,CAAE,IAAMmN,EAAG,IACnC,CAAE0D,EAAG,GAAIhD,GAAI,OAAQ7N,EAAG,CAAE,IAAMmN,EAAG,KAEjCgmD,GAAoBR,GAAY,yfAChCS,GAAoBT,GAAY,0dAChCU,GAAoBV,GAAY,03DA1GtC,SAAgBr1D,GACZ,GAAKA,EAAKvH,OAAS,IAAO,EAAK,MAAM,IAAIc,MAAM,YAE/C,IADA,IAAIa,EAAS,GACJ1B,EAAI,EAAGA,EAAIsH,EAAKvH,OAAQC,GAAK,EAClC0B,EAAOI,KAAKlC,SAAS0H,EAAKic,UAAUvjB,EAAGA,EAAI,GAAI,KAEnD,OAAO0B,CACX,IAqGM47D,GAAiBT,GAAiB,2LAkClC,SAAUU,GAAS59D,GAKrB,GAAIA,EAAMyjB,MAAM,kBAAoBzjB,EAAMI,QAAU,GAAM,OAAOJ,EAAMolB,cAGvE,IAvCalB,EAuCT25C,GAAQtd,EAAAA,GAAAA,IAAiBvgD,GAvChBkkB,EAyCG25C,EAAM9sC,KAAI,SAACjH,GAEvB,GAAIwzC,GAAgBt0C,QAAQc,IAAS,EAAK,MAAO,GACjD,GAAIA,GAAQ,OAAUA,GAAQ,MAAU,MAAO,GAG/C,IAAIg0C,EApCN,SAA2BC,GAC7B,IAAIxf,EAAQ4e,GAASY,EAAWR,IAChC,GAAIhf,EAAS,MAAO,CAAEwf,EAAYxf,EAAMrmC,GAExC,IAAI2lD,EAAQL,GAAkBO,GAC9B,GAAIF,EAAS,OAAOA,EAEpB,IAAIzuD,EAAQquD,GAAkBM,GAC9B,OAAI3uD,EAAgB,CAAE2uD,EAAY3uD,EAAM,IAE1BsuD,GAAkBK,IAGzB,IACX,CAsB2BC,CAAiBl0C,GACpC,OAAIg0C,GAGG,CAAEh0C,EACb,IAXA+zC,EAxCO35C,EAAO4a,QAAO,SAACC,EAAO/+B,GAEzB,OADAA,EAAM8jB,SAAQ,SAAC9jB,GAAY++B,EAAM58B,KAAKnC,EAAQ,IACvC++B,CACX,GAAG,KAmDH8+B,GAAQtd,EAAAA,GAAAA,KAAiB0d,EAAAA,GAAAA,IAAcJ,GAAQ1qB,GAAAA,GAAAA,OAGzCrvB,SAAQ,SAACgG,GACX,GA/BKqzC,GA+BerzC,EA/BK6zC,IAgCrB,MAAM,IAAIz8D,MAAM,iCAExB,IAGA28D,EAAM/5C,SAAQ,SAACgG,GACX,GA1DKqzC,GA0DgBrzC,EA1DIuzC,IA2DrB,MAAM,IAAIn8D,MAAM,iCAExB,IAGA,IAAIN,GAAOq9D,EAAAA,GAAAA,IAAcJ,GAGzB,GAA6B,MAAzBj9D,EAAKgjB,UAAU,EAAG,IAAuC,OAAzBhjB,EAAKgjB,UAAU,EAAG,IAAmD,MAApChjB,EAAKgjB,UAAUhjB,EAAKR,OAAS,GAC9F,MAAM,IAAIc,MAAM,kBAGpB,OAAON,CACX,CCrMM,SAAUs9D,GAAoBp8D,GAGhC,IAAMQ,GAAQkhB,EAAAA,GAAAA,IAAY1hB,GAG1B,GAAIQ,EAAMlC,OAAS,GAAM,MAAM,IAAIc,MAAM,6CAGzC,OAAOkjB,EAAAA,EAAAA,KAAQL,EAAAA,EAAAA,IAAO,CAAEzhB,EAAOu3C,KAAYh5C,MAAM,EAAG,IACxD,CAEM,SAAUs9D,GAAmB77D,GAC/B,IAAMqF,GAAOW,EAAAA,EAAAA,IAAShG,GAGtB,GAAoB,KAAhBqF,EAAKvH,OAAiB,MAAM,IAAIc,MAAM,uCAC1C,GAAiB,IAAbyG,EAAK,IAAa,MAAM,IAAIzG,MAAM,+CAItC,IADA,IAAId,EAAS,GACe,IAArBuH,EAAKvH,EAAS,IAAYA,IAGjC,OAAOsjD,EAAAA,GAAAA,IAAa/7C,EAAK9G,MAAM,EAAGT,GACtC,CCjCO,ICOD6H,GAAS,IAAIC,EAAAA,GDPI,eCSjBk2D,GAAQ,CACV,MACA,OACA,OACA,OACA,QACA,SACA,SAME,SAAUC,GAAQr+D,GACpB,IAAMmqC,EAAQ5nC,OAAOvC,GAAO8hB,MAAM,MAE9BqoB,EAAM/pC,OAAS,IAAM+pC,EAAM,GAAG1mB,MAAM,eAAkB0mB,EAAM,KAAOA,EAAM,GAAG1mB,MAAM,aAA0B,MAAVzjB,GAA2B,OAAVA,IACnHiI,GAAOyb,mBAAmB,gBAAiB,QAAS1jB,GAIxD,IAAIiqC,EAAQE,EAAM,GAEdtgC,EAAW,GAOf,IAN8B,MAA1BogC,EAAMrmB,UAAU,EAAG,KACnB/Z,EAAW,IACXogC,EAAQA,EAAMrmB,UAAU,IAIK,MAA1BqmB,EAAMrmB,UAAU,EAAG,IAAcqmB,EAAQA,EAAMrmB,UAAU,GAClD,KAAVqmB,IAAgBA,EAAQ,KAE5B,IAAIq0B,EAAS,GAEb,IADqB,IAAjBn0B,EAAM/pC,SAAgBk+D,EAAS,KAAOn0B,EAAM,IAAM,MAC/Cm0B,EAAOl+D,OAAS,GAAmC,MAA9Bk+D,EAAOA,EAAOl+D,OAAS,IAC/Ck+D,EAASA,EAAO16C,UAAU,EAAG06C,EAAOl+D,OAAS,GAIjD,IADA,IAAMm+D,EAAY,GACXt0B,EAAM7pC,QAAQ,CACjB,GAAI6pC,EAAM7pC,QAAU,EAAG,CACnBm+D,EAAU/vB,QAAQvE,GAClB,K,CAEA,IAAM1lC,EAAQ0lC,EAAM7pC,OAAS,EAC7Bm+D,EAAU/vB,QAAQvE,EAAMrmB,UAAUrf,IAClC0lC,EAAQA,EAAMrmB,UAAU,EAAGrf,E,CAInC,OAAOsF,EAAW00D,EAAU97D,KAAK,KAAO67D,CAC5C,CAEM,SAAUE,GAAYx+D,EAAqBy+D,GAC7C,GAAyB,kBAAdA,EAAwB,CAC/B,IAAMl6D,EAAQ65D,GAAMp1C,QAAQy1C,IACb,IAAXl6D,IAAgBk6D,EAAW,EAAIl6D,E,CAEvC,OAAOulC,GAAY9pC,EAAoB,MAAZy+D,EAAoBA,EAAU,GAC7D,CAEM,SAAUC,GAAW1+D,EAAey+D,GAItC,GAHsB,kBAAXz+D,GACPiI,GAAOyb,mBAAmB,yBAA0B,QAAS1jB,GAExC,kBAAdy+D,EAAwB,CAC/B,IAAMl6D,EAAQ65D,GAAMp1C,QAAQy1C,IACb,IAAXl6D,IAAgBk6D,EAAW,EAAIl6D,E,CAEvC,OAAO2lC,GAAWlqC,EAAoB,MAAZy+D,EAAoBA,EAAU,GAC5D,CAEM,SAAUE,GAAYr0B,GACxB,OAAOk0B,GAAYl0B,EAAK,GAC5B,CAEM,SAAUs0B,GAAWC,GACvB,OAAOH,GAAWG,EAAO,GAC7B,CCxFO,IAAM1iC,GAAU,eCmCjBl0B,GAAS,IAAIC,EAAAA,GAAOi0B,IC7B1B,IACI,IAAM4X,GAAa5pC,OAEM,MAArB4pC,GAAU+qB,UACV/qB,GAAU+qB,QAAUC,EAEX,CAAf,MAAO93C,IAAQ,C,kCCVjB,SAAUnnB,GACN,IAAMk/D,EAAY,WAIlB,SAASC,EAAO/lD,GACZ,IAAMqe,EAAI,IAAI2nC,YAAY,CACvB,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,UAAY,UAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,UAAY,UAChD,UAAY,UAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,aAGnCC,EAAK,WAAYC,EAAK,WAAYxrC,EAAK,WAAYC,EAAK,WACxDwrC,EAAK,WAAYC,EAAK,WAAYC,EAAK,UAAYC,EAAK,WACtDrzD,EAAI,IAAI+yD,YAAY,IAE1B,SAASnG,EAAOvgD,GAEZ,IADA,IAAIpM,EAAM,EAAGpB,EAAMwN,EAAEpY,OACd4K,GAAO,IAAI,CACd,IAAI/F,EAAIk6D,EAAIp0D,EAAIq0D,EAAIn9D,EAAI2xB,EAAIqB,EAAIpB,EAAIxpB,EAAIg1D,EAAInqC,EAAIoqC,EAAI/hD,EAAIgiD,EAAIrkD,EAAIskD,EAAIx8C,OAAC,EAAE3iB,OAAC,EAAEsF,OAAC,EAAE4uB,OAAE,EAAEC,OAAE,EAEnF,IAAKn0B,EAAI,EAAGA,EAAI,GAAIA,IAChBsF,EAAIyG,EAAQ,EAAF/L,EACV8L,EAAE9L,IAAc,IAAPmY,EAAE7S,KAAY,IAAiB,IAAT6S,EAAE7S,EAAE,KAAY,IACpC,IAAT6S,EAAE7S,EAAE,KAAY,EAAe,IAAT6S,EAAE7S,EAAE,GAGhC,IAAKtF,EAAI,GAAIA,EAAI,GAAIA,IAEjBk0B,IADAvR,EAAI7W,EAAE9L,EAAE,MACG,GAAO2iB,GAAI,KAAaA,IAAI,GAAOA,GAAI,IAAYA,IAAI,GAGlEwR,IADAxR,EAAI7W,EAAE9L,EAAE,OACG,EAAM2iB,GAAI,KAAYA,IAAI,GAAOA,GAAI,IAAYA,IAAI,EAEhE7W,EAAE9L,IAAQk0B,EAAKpoB,EAAE9L,EAAE,GAAM,IAAOm0B,EAAKroB,EAAE9L,EAAE,IAAO,GAAM,EAG1D,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAChBk0B,KAAWlqB,IAAI,EAAMA,GAAI,KAAYA,IAAI,GAAOA,GAAI,KACzCA,IAAI,GAAOA,GAAI,KAAcA,EAAI6qB,GAAO7qB,EAAIkT,GAAO,IACtDrC,GAAMqc,EAAEl3B,GAAK8L,EAAE9L,GAAM,GAAM,GAAM,EAEzCm0B,IAASvvB,IAAI,EAAMA,GAAI,KAAYA,IAAI,GAAOA,GAAI,KACzCA,IAAI,GAAOA,GAAI,MAAcA,EAAI8F,EAAM9F,EAAIhD,EAAM8I,EAAI9I,GAAO,EAErEiZ,EAAIqC,EACJA,EAAI2X,EACJA,EAAI7qB,EACJA,EAAK4qB,EAAIV,EAAM,EACfU,EAAIhzB,EACJA,EAAI8I,EACJA,EAAI9F,EACJA,EAAKsvB,EAAKC,EAAM,EAGpB2qC,EAAMA,EAAKl6D,EAAK,EAChBm6D,EAAMA,EAAKr0D,EAAK,EAChB6oB,EAAMA,EAAK3xB,EAAK,EAChB4xB,EAAMA,EAAKoB,EAAK,EAChBoqC,EAAMA,EAAKh1D,EAAK,EAChBi1D,EAAMA,EAAKpqC,EAAK,EAChBqqC,EAAMA,EAAKhiD,EAAK,EAChBiiD,EAAMA,EAAKtkD,EAAK,EAEhB9O,GAAO,GACPpB,GAAO,EACX,CACJ,CAEA+tD,EAAO7/C,GAEP,IAAI7Y,EAAGo/D,EAAYvmD,EAAE9Y,OAAS,GAC9Bs/D,EAAYxmD,EAAE9Y,OAAS,UAAc,EACrCu/D,EAAWzmD,EAAE9Y,QAAU,EACvBw/D,EAAYH,EAAY,GAAM,GAAK,IACnCjnD,EAAIU,EAAErY,MAAMqY,EAAE9Y,OAASq/D,EAAWvmD,EAAE9Y,QAGpC,IADAoY,EAAErW,KAAK,KACF9B,EAAIo/D,EAAY,EAAGp/D,EAAIu/D,EAAUv/D,IAAOmY,EAAErW,KAAK,GAYpD,OAXAqW,EAAErW,KAAMu9D,IAAa,GAAM,KAC3BlnD,EAAErW,KAAMu9D,IAAa,GAAM,KAC3BlnD,EAAErW,KAAMu9D,IAAa,EAAM,KAC3BlnD,EAAErW,KAAMu9D,IAAa,EAAM,KAC3BlnD,EAAErW,KAAMw9D,IAAa,GAAM,KAC3BnnD,EAAErW,KAAMw9D,IAAa,GAAM,KAC3BnnD,EAAErW,KAAMw9D,IAAa,EAAM,KAC3BnnD,EAAErW,KAAMw9D,IAAa,EAAM,KAE3B5G,EAAOvgD,GAEA,CACF2mD,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IACvEC,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IACvExrC,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IACvEC,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IACvEwrC,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IACvEC,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IACvEC,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IACvEC,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IAEhF,CAEA,SAASK,EAA2B9vB,EAAUrD,EAAMuJ,GAEhDlG,EAAYA,EAAS3vC,QAAU,GAAM2vC,EAAWkvB,EAAOlvB,GAEvD,IAII1vC,EAJEy/D,EAAW,GAAKpzB,EAAKtsC,OAAS,EAC9B2/D,EAAQ,IAAIj/D,MAAMg/D,GAClBE,EAAW,IAAIl/D,MAAM,IAGvBm/D,EAAK,GAGT,IAAK5/D,EAAI,EAAGA,EAAI,GAAIA,IAAO0/D,EAAM1/D,GAAK,GACtC,IAAKA,EAAI,EAAGA,EAAI0vC,EAAS3vC,OAAQC,IAAO0/D,EAAM1/D,IAAM0vC,EAAS1vC,GAC7D,IAAKA,EAAI,EAAGA,EAAIqsC,EAAKtsC,OAAQC,IAAO0/D,EAAM,GAAK1/D,GAAKqsC,EAAKrsC,GACzD,IAAKA,EAAIy/D,EAAW,EAAGz/D,EAAIy/D,EAAUz/D,IAAO0/D,EAAM1/D,GAAK,EAGvD,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAK2/D,EAAS3/D,GAAK,GACvC,IAAKA,EAAI,EAAGA,EAAI0vC,EAAS3vC,OAAQC,IAAK2/D,EAAS3/D,IAAM0vC,EAAS1vC,GAG9D,SAAS6/D,IACL,IAAK,IAAI7/D,EAAIy/D,EAAW,EAAGz/D,GAAKy/D,EAAW,EAAGz/D,IAAK,CAE/C,GADA0/D,EAAM1/D,KACF0/D,EAAM1/D,IAAM,IAAM,OACtB0/D,EAAM1/D,GAAK,CACf,CACJ,CAGA,KAAO41C,GAAS,IACZiqB,IACAD,EAAKA,EAAGl8C,OAAOk7C,EAAOe,EAASj8C,OAAOk7C,EAAOc,MAC7C9pB,GAAS,GAOb,OALIA,EAAQ,IACRiqB,IACAD,EAAKA,EAAGl8C,OAAOk7C,EAAOe,EAASj8C,OAAOk7C,EAAOc,KAASl/D,MAAM,EAAGo1C,KAG5DgqB,CACX,CAIA,SAASE,EAAgBC,EAAIC,EAAIv7D,EAAGqS,EAAGmpD,GACnC,IAAIjgE,EAGJ,IADAkgE,EAAUH,EAAkB,IAAb,EAAIt7D,EAAI,GAASw7D,EAAI,EAAG,IAClCjgE,EAAI,EAAGA,EAAI,EAAIyE,EAAGzE,IACnBmgE,EAASJ,EAAQ,GAAJ//D,EAAQigE,EAAI,IACzBG,EAAUH,EAAInpD,GACdopD,EAAUD,EAAI,EAAGF,EAAIC,EAAU,GAAJhgE,EAAS,IAGxC,IAAKA,EAAI,EAAGA,EAAIyE,EAAGzE,IACfkgE,EAAUH,EAAIC,EAAU,EAAJhgE,EAAS,GAAI+/D,EAAS,GAAJ//D,EAAS,IAGnD,IAAKA,EAAI,EAAGA,EAAIyE,EAAGzE,IACfkgE,EAAUH,EAAIC,EAAmB,IAAT,EAAJhgE,EAAQ,GAAS+/D,EAAc,IAAT//D,EAAIyE,GAAS,GAE/D,CAEA,SAAS47D,EAAEz7D,EAAG8F,GACV,OAAQ9F,GAAK8F,EAAM9F,IAAO,GAAK8F,CACnC,CAEA,SAAS01D,EAAUrjD,EAAGjG,GAClBopD,EAAUnjD,EAAG,EAAGjG,EAAG,EAAG,IAEtB,IAAK,IAAI9W,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACxB8W,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAE,IAAK,GAC1BA,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,GAC1BA,EAAE,KAAOupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAG,IAAMupD,EAAEvpD,EAAE,IAAMA,EAAG,GAAI,IAC1BA,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,GAC1BA,EAAE,KAAOupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,GAC1BA,EAAG,IAAMupD,EAAEvpD,EAAE,IAAMA,EAAG,GAAI,IAC1BA,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAE,IAAK,IAC1BA,EAAE,KAAOupD,EAAEvpD,EAAE,IAAMA,EAAG,GAAI,GAC1BA,EAAG,IAAMupD,EAAEvpD,EAAE,IAAMA,EAAE,IAAK,GAC1BA,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAE,IAAK,IAC1BA,EAAE,KAAOupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAG,IAAMupD,EAAEvpD,EAAE,IAAMA,EAAE,IAAK,GAC1BA,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAE,IAAK,GAC1BA,EAAE,KAAOupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAE,KAAOupD,EAAEvpD,EAAE,IAAMA,EAAG,GAAI,IAC1BA,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,GAC1BA,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,GAC1BA,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,GAC1BA,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,GAC1BA,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAE,KAAOupD,EAAEvpD,EAAE,IAAMA,EAAG,GAAI,GAC1BA,EAAG,IAAMupD,EAAEvpD,EAAE,IAAMA,EAAE,IAAK,GAC1BA,EAAG,IAAMupD,EAAEvpD,EAAG,GAAKA,EAAE,IAAK,IAC1BA,EAAE,KAAOupD,EAAEvpD,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAE,KAAOupD,EAAEvpD,EAAE,IAAMA,EAAE,IAAK,GAC1BA,EAAE,KAAOupD,EAAEvpD,EAAE,IAAMA,EAAE,IAAK,GAC1BA,EAAE,KAAOupD,EAAEvpD,EAAE,IAAMA,EAAE,IAAK,IAC1BA,EAAE,KAAOupD,EAAEvpD,EAAE,IAAMA,EAAE,IAAK,IAG9B,IAAK,IAAI9W,EAAI,EAAGA,EAAI,KAAMA,EACtB+c,EAAE/c,IAAM8W,EAAE9W,EAElB,CAGA,SAASmgE,EAASz9D,EAAGC,EAAIsa,EAAGtS,GACxB,IAAK,IAAI3K,EAAI,EAAGA,EAAI2K,EAAK3K,IACrBid,EAAEjd,IAAM0C,EAAEC,EAAK3C,EAEvB,CAEA,SAASkgE,EAAUl1D,EAAKs1D,EAAQv1D,EAAMolC,EAASpwC,GAC3C,KAAOA,KACHgL,EAAKolC,KAAanlC,EAAIs1D,IAE9B,CAEA,SAASC,EAAe9uD,GACpB,IAAKA,GAA0B,kBAAdA,EAAE1R,OAAwB,OAAO,EAElD,IAAK,IAAIC,EAAI,EAAGA,EAAIyR,EAAE1R,OAAQC,IAAK,CAC/B,IAAMuC,EAAIkP,EAAEzR,GACZ,GAAkB,kBAAPuC,GAAmBA,EAAI,GAAKA,EAAI,GAAKA,GAAK,IACjD,OAAO,CAEf,CAEA,OAAO,CACX,CAEA,SAASi+D,EAAc7gE,EAAOY,GAC1B,GAAsB,kBAAXZ,GAAwBA,EAAQ,EAAM,MAAM,IAAIkB,MAAM,WAAaN,GAC9E,OAAOZ,CACX,CAIA,SAAS8gE,EAAQ/wB,EAAUrD,EAAMn1B,EAAGzS,EAAG0T,EAAGy9B,EAAOtH,GAQ7C,GANAp3B,EAAIspD,EAActpD,EAAG,KACrBzS,EAAI+7D,EAAc/7D,EAAG,KACrB0T,EAAIqoD,EAAcroD,EAAG,KAErBy9B,EAAQ4qB,EAAc5qB,EAAO,SAEnB,IAAN1+B,GAA6B,KAAjBA,EAAKA,EAAI,GAAa,MAAM,IAAIrW,MAAM,wBAEtD,GAAIqW,EAAIynD,EAAY,IAAMl6D,EAAK,MAAM,IAAI5D,MAAM,eAC/C,GAAI4D,EAAIk6D,EAAY,IAAMxmD,EAAK,MAAM,IAAItX,MAAM,eAE/C,IAAK0/D,EAAe7wB,GAChB,MAAM,IAAI7uC,MAAM,uCAIpB,GAFA6uC,EAAWjvC,MAAMC,UAAUF,MAAMG,KAAK+uC,IAEjC6wB,EAAel0B,GAChB,MAAM,IAAIxrC,MAAM,mCAEpBwrC,EAAO5rC,MAAMC,UAAUF,MAAMG,KAAK0rC,GAIlC,IAFA,IAAI3hC,EAAI80D,EAA2B9vB,EAAUrD,EAAU,IAAJl0B,EAAU1T,GACvDsY,EAAI,IAAI8hD,YAAgB,GAAJ1mD,EAAS1T,GAC1BzE,EAAI,EAAGA,EAAI+c,EAAEhd,OAAQC,IAAK,CAC/B,IAAMsF,EAAQ,EAAJtF,EACV+c,EAAE/c,IAAkB,IAAX0K,EAAEpF,EAAI,KAAc,IACT,IAAXoF,EAAEpF,EAAI,KAAc,IACT,IAAXoF,EAAEpF,EAAI,KAAc,GACT,IAAXoF,EAAEpF,EAAI,KAAc,CACjC,CAEA,IAkBYo7D,EACRC,EAnBEC,EAAK,IAAI/B,YAAY,GAAKp6D,GAC1B0yB,EAAI,IAAI0nC,YAAY,GAAKp6D,EAAIyS,GAE7B8oD,EAAK,GAAKv7D,EAGVqS,EAAI,IAAI+nD,YAAY,IACpBoB,EAAK,IAAIpB,YAAY,IAErBgC,EAAW1oD,EAAIjB,EAAI,EACrB4pD,EAAY,EACZC,EAAgB,KAGhBC,GAAO,EAGPC,EAAQ,EACRC,EAAK,EAIHC,EAAQ7yB,EAAW1uC,SAAS,IAAO6E,GAAI,WAGvC28D,EAAqC,qBAAlBC,aAAiCA,aAAez8B,WAInE08B,EAAkB,SAAlBA,IACF,GAAIN,EACA,OAAO1yB,EAAS,IAAIztC,MAAM,aAAcigE,EAAYD,GAGxD,IAAIU,EAEJ,OAAQN,GACJ,KAAK,EAIDf,EAAUnjD,EAFV4jD,EAAU,GAALO,EAAUz8D,EAEEm8D,EAAI,EAAGZ,GAExBiB,EAAQ,EACRP,EAAK,EAIT,KAAK,GAGDa,EAAQrqD,EAAIwpD,GACAS,IAASI,EAAQJ,GAC7B,IAAK,IAAInhE,EAAI,EAAGA,EAAIuhE,EAAOvhE,IACvBkgE,EAAUU,EAAI,EAAGzpC,GAAIupC,EAAK1gE,GAAKggE,EAAIA,GACnCF,EAAgBc,EAAIZ,EAAIv7D,EAAGqS,EAAGmpD,GAOlC,GAHAS,GAAMa,EACNT,GAAaS,EAETjzB,EAAU,CAEV,IAAMkzB,EAAY5hE,SAAS,IAAOkhE,EAAYD,GAC9C,GAAIW,IAAcT,EAAe,CAE7B,GADAC,EAAO1yB,EAAS,KAAMwyB,EAAYD,GACtB,MACZE,EAAgBS,CACpB,CACJ,CAEA,GAAId,EAAKxpD,EAAK,MAEdwpD,EAAK,EACLO,EAAQ,EAIZ,KAAK,GAGDM,EAAQrqD,EAAIwpD,GACAS,IAASI,EAAQJ,GAC7B,IAAK,IAAInhE,EAAI,EAAGA,EAAIuhE,EAAOvhE,IAAK,CAC5B,IACMsF,EAAIs7D,EADmB,IAAb,EAAIn8D,EAAI,IACAyS,EAAI,EAC5BipD,EAAShpC,EAAG7xB,EAAI06D,EAAIY,EAAIZ,GACxBF,EAAgBc,EAAIZ,EAAIv7D,EAAGqS,EAAGmpD,EAClC,CAOA,GAJAS,GAAMa,EACNT,GAAaS,EAGTjzB,EAAU,CACV,IAAMkzB,EAAY5hE,SAAS,IAAOkhE,EAAYD,GAC9C,GAAIW,IAAcT,EAAe,CAE7B,GADAC,EAAO1yB,EAAS,KAAMwyB,EAAYD,GACtB,MACZE,EAAgBS,CACpB,CACJ,CAEA,GAAId,EAAKxpD,EAAK,MAMd,GAJAgpD,EAAUU,EAAI,EAAG7jD,EAAG4jD,EAAIX,KAGxBkB,EACS/oD,EAAG,CACR8oD,EAAQ,EACR,KACJ,CAEAv2D,EAAI,GACJ,IAAK,IAAI1K,EAAI,EAAGA,EAAI+c,EAAEhd,OAAQC,IAC1B0K,EAAE5I,KAAMib,EAAE/c,IAAO,EAAK,KACtB0K,EAAE5I,KAAMib,EAAE/c,IAAO,EAAK,KACtB0K,EAAE5I,KAAMib,EAAE/c,IAAM,GAAM,KACtB0K,EAAE5I,KAAMib,EAAE/c,IAAM,GAAM,KAG1B,IAAMk4C,EAAasnB,EAA2B9vB,EAAUhlC,EAAGkrC,GAM3D,OAHItH,GAAYA,EAAS,KAAM,EAAK4J,GAG7BA,EAIX5J,GAAY8yB,EAASE,EAC7B,EAGA,IAAKhzB,EACD,OAAa,CACT,IAAM4J,EAAaopB,IACnB,QAAkB3/C,GAAdu2B,EAA2B,OAAOA,CAC1C,CAIJopB,GACJ,CAEA,IAAMG,EAAM,CACRtqB,OAAQ,SAASzH,EAAUrD,EAAMn1B,EAAGzS,EAAG0T,EAAGy9B,EAAOM,GAC7C,OAAO,IAAIptB,SAAQ,SAASE,EAAS2X,GACjC,IAAI+gC,EAAe,EACfxrB,GAAoBA,EAAiB,GACzCuqB,EAAQ/wB,EAAUrD,EAAMn1B,EAAGzS,EAAG0T,EAAGy9B,GAAO,SAAShvB,EAAO+6C,EAAUj+D,GAC9D,GAAIkjB,EACA+Z,EAAO/Z,QACJ,GAAIljB,EACHwyC,GAAqC,IAAjBwrB,GACpBxrB,EAAiB,GAErBltB,EAAQ,IAAIloB,WAAW4C,SACpB,GAAIwyC,GAAoByrB,IAAaD,EAExC,OADAA,EAAeC,EACRzrB,EAAiByrB,EAEhC,GACJ,GACJ,EACAC,WAAY,SAASlyB,EAAUrD,EAAMn1B,EAAGzS,EAAG0T,EAAGy9B,GAC1C,OAAO,IAAI90C,WAAW2/D,EAAQ/wB,EAAUrD,EAAMn1B,EAAGzS,EAAG0T,EAAGy9B,GAC3D,GAKDluC,EAAOC,QAAU85D,CAmBvB,CAreD,E","sources":["../node_modules/@ethersproject/json-wallets/node_modules/aes-js/index.js","../node_modules/@ethersproject/sha2/src.ts/browser-sha2.ts","../node_modules/@ethersproject/sha2/src.ts/_version.ts","../node_modules/@ethersproject/sha2/src.ts/types.ts","../node_modules/@ethersproject/signing-key/node_modules/bn.js/lib/bn.js","../node_modules/@ethersproject/solidity/src.ts/index.ts","../node_modules/@ethersproject/solidity/src.ts/_version.ts","../node_modules/bech32/index.js","../node_modules/@ethersproject/abstract-provider/src.ts/index.ts","../node_modules/@ethersproject/abstract-provider/src.ts/_version.ts","../node_modules/@ethersproject/abstract-signer/src.ts/index.ts","../node_modules/@ethersproject/abstract-signer/src.ts/_version.ts","../node_modules/node_modules/minimalistic-assert/index.js","../node_modules/node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/node_modules/elliptic/lib/elliptic/utils.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/node_modules/inherits/inherits_browser.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/node_modules/elliptic/lib/elliptic/curves.js","../node_modules/node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/@ethersproject/signing-key/lib.esm/elliptic.js","../node_modules/node_modules/elliptic/lib/elliptic.js","../node_modules/@ethersproject/signing-key/src.ts/index.ts","../node_modules/@ethersproject/signing-key/src.ts/_version.ts","../node_modules/@ethersproject/transactions/src.ts/_version.ts","../node_modules/@ethersproject/transactions/src.ts/index.ts","../node_modules/@ethersproject/contracts/src.ts/_version.ts","../node_modules/@ethersproject/contracts/src.ts/index.ts","../node_modules/@ethersproject/bignumber/src.ts/fixednumber.ts","../node_modules/@ethersproject/hash/src.ts/message.ts","../node_modules/@ethersproject/hash/src.ts/_version.ts","../node_modules/@ethersproject/hash/src.ts/typed-data.ts","../node_modules/@ethersproject/basex/src.ts/index.ts","../node_modules/@ethersproject/pbkdf2/src.ts/browser-pbkdf2.ts","../node_modules/@ethersproject/wordlists/src.ts/wordlist.ts","../node_modules/@ethersproject/wordlists/src.ts/_version.ts","../node_modules/@ethersproject/wordlists/src.ts/lang-en.ts","../node_modules/@ethersproject/wordlists/src.ts/browser-wordlists.ts","../node_modules/@ethersproject/hdnode/src.ts/index.ts","../node_modules/@ethersproject/hdnode/src.ts/_version.ts","../node_modules/@ethersproject/random/src.ts/_version.ts","../node_modules/@ethersproject/random/src.ts/browser-random.ts","../node_modules/@ethersproject/json-wallets/src.ts/utils.ts","../node_modules/@ethersproject/json-wallets/src.ts/_version.ts","../node_modules/@ethersproject/json-wallets/src.ts/keystore.ts","../node_modules/@ethersproject/json-wallets/src.ts/crowdsale.ts","../node_modules/@ethersproject/json-wallets/src.ts/inspect.ts","../node_modules/@ethersproject/json-wallets/src.ts/index.ts","../node_modules/@ethersproject/wallet/src.ts/_version.ts","../node_modules/@ethersproject/wallet/src.ts/index.ts","../node_modules/@ethersproject/constants/src.ts/addresses.ts","../node_modules/@ethersproject/constants/src.ts/hashes.ts","../node_modules/@ethersproject/constants/src.ts/strings.ts","../node_modules/@ethersproject/networks/src.ts/index.ts","../node_modules/@ethersproject/networks/src.ts/_version.ts","../node_modules/@ethersproject/base64/src.ts/browser-base64.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/decoder.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/lib.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/include.ts","../node_modules/@ethersproject/hash/src.ts/namehash.ts","../node_modules/@ethersproject/web/src.ts/_version.ts","../node_modules/@ethersproject/web/src.ts/browser-geturl.ts","../node_modules/@ethersproject/web/src.ts/index.ts","../node_modules/@ethersproject/providers/src.ts/_version.ts","../node_modules/@ethersproject/providers/src.ts/formatter.ts","../node_modules/@ethersproject/providers/src.ts/base-provider.ts","../node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts","../node_modules/@ethersproject/providers/src.ts/browser-ws.ts","../node_modules/@ethersproject/providers/src.ts/websocket-provider.ts","../node_modules/@ethersproject/providers/src.ts/url-json-rpc-provider.ts","../node_modules/@ethersproject/providers/src.ts/alchemy-provider.ts","../node_modules/@ethersproject/providers/src.ts/ankr-provider.ts","../node_modules/@ethersproject/providers/src.ts/cloudflare-provider.ts","../node_modules/@ethersproject/providers/src.ts/etherscan-provider.ts","../node_modules/@ethersproject/random/src.ts/shuffle.ts","../node_modules/@ethersproject/providers/src.ts/fallback-provider.ts","../node_modules/@ethersproject/providers/src.ts/browser-ipc-provider.ts","../node_modules/@ethersproject/providers/src.ts/infura-provider.ts","../node_modules/@ethersproject/providers/src.ts/json-rpc-batch-provider.ts","../node_modules/@ethersproject/providers/src.ts/nodesmith-provider.ts","../node_modules/@ethersproject/providers/src.ts/pocket-provider.ts","../node_modules/@ethersproject/providers/src.ts/web3-provider.ts","../node_modules/@ethersproject/providers/src.ts/index.ts","../node_modules/@ethersproject/strings/src.ts/idna.ts","../node_modules/@ethersproject/strings/src.ts/bytes32.ts","../node_modules/@ethersproject/units/src.ts/_version.ts","../node_modules/@ethersproject/units/src.ts/index.ts","../node_modules/ethers/src.ts/_version.ts","../node_modules/ethers/src.ts/ethers.ts","../node_modules/ethers/src.ts/index.ts","../node_modules/scrypt-js/scrypt.js"],"sourcesContent":["\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n","export const version = \"sha2/5.7.0\";\n","export enum SupportedAlgorithm { sha256 = \"sha256\", sha512 = \"sha512\" };\n\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nfunction _pack(type: string, value: any, isArray?: boolean): Uint8Array {\n    switch(type) {\n        case \"address\":\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\": \"0x00\");\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n    }\n\n    let match =  type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\")\n\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type)\n        }\n\n        if (isArray) { size = 256; }\n\n        value = BigNumber.from(value).toTwos(size);\n\n        return zeroPad(value, size / 8);\n    }\n\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type)\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${ type }`, \"value\", value)\n        }\n        if (isArray) { return arrayify((value + Zeros).substring(0, 66)); }\n        return value;\n    }\n\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${ type }`, \"value\", value)\n        }\n        const result: Array<Uint8Array> = [];\n        value.forEach(function(value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n\n    return logger.throwArgumentError(\"invalid type\", \"type\", type)\n}\n\n// @TODO: Array Enum\n\nexport function pack(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values)\n    }\n    const tight: Array<Uint8Array> = [];\n    types.forEach(function(type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\n\nexport function keccak256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashKeccak256(pack(types, values));\n}\n\nexport function sha256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashSha256(pack(types, values));\n}\n","export const version = \"solidity/5.7.0\";\n","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n","export const version = \"abstract-provider/5.7.0\";\n","\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n","export const version = \"abstract-signer/5.7.0\";\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n","export const version = \"signing-key/5.7.0\";\n","export const version = \"transactions/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n","export const version = \"contracts/5.7.0\";\n","\"use strict\";\n\nimport { checkResultErrors, EventFragment, Fragment, FunctionFragment, Indexed, Interface, JsonFragment, LogDescription, ParamType, Result } from \"@ethersproject/abi\";\nimport { Block, BlockTag, Filter, FilterByBlockHash, Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, AccessListish } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\nexport interface Overrides {\n    gasLimit?: BigNumberish | Promise<BigNumberish>;\n    gasPrice?: BigNumberish | Promise<BigNumberish>;\n    maxFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    maxPriorityFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    nonce?: BigNumberish | Promise<BigNumberish>;\n    type?: number;\n    accessList?: AccessListish;\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport interface PayableOverrides extends Overrides {\n    value?: BigNumberish | Promise<BigNumberish>;\n}\n\nexport interface CallOverrides extends PayableOverrides {\n    blockTag?: BlockTag | Promise<BlockTag>;\n    from?: string | Promise<string>;\n}\n\n// @TODO: Better hierarchy with: (in v6)\n//  - abstract-provider:TransactionRequest\n//  - transactions:Transaction\n//  - transaction:UnsignedTransaction\n\nexport interface PopulatedTransaction {\n    to?: string;\n    from?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumber;\n    gasPrice?: BigNumber;\n\n    data?: string;\n    value?: BigNumber;\n    chainId?: number;\n\n    type?: number;\n    accessList?: AccessList;\n\n    maxFeePerGas?: BigNumber;\n    maxPriorityFeePerGas?: BigNumber;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport type EventFilter = {\n    address?: string;\n    topics?: Array<string|Array<string>>;\n};\n\n\nexport type ContractFunction<T = any> = (...args: Array<any>) => Promise<T>;\n\n\n// The (n + 1)th parameter passed to contract event callbacks\nexport interface Event extends Log {\n\n    // The event name\n    event?: string;\n\n    // The event signature\n    eventSignature?: string;\n\n    // The parsed arguments to the event\n    args?: Result;\n\n    // If parsing the arguments failed, this is the error\n    decodeError?: Error;\n\n    // A function that can be used to decode event data and topics\n    decode?: (data: string, topics?: Array<string>) => any;\n\n    // A function that will remove the listener responsible for this event (if any)\n    removeListener: () => void;\n\n    // Get blockchain details about this event's block and transaction\n    getBlock: () => Promise<Block>;\n    getTransaction: () => Promise<TransactionResponse>;\n    getTransactionReceipt: () => Promise<TransactionReceipt>;\n}\n\nexport interface ContractReceipt extends TransactionReceipt {\n    events?: Array<Event>;\n}\n\nexport interface ContractTransaction extends TransactionResponse {\n    wait(confirmations?: number): Promise<ContractReceipt>;\n}\n\n///////////////////////////////\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n}\n\nasync function resolveName(resolver: Signer | Provider, nameOrPromise: string | Promise<string>): Promise<string> {\n    const name = await nameOrPromise;\n\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n    }\n\n    // If it is already an address, just use it (after adding checksum)\n    try {\n        return getAddress(name);\n    } catch (error) { }\n\n    if (!resolver) {\n        logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resolveName\"\n        });\n    }\n\n    const address = await resolver.resolveName(name);\n\n    if (address == null) {\n        logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n    }\n\n    return address;\n}\n\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nasync function resolveAddresses(resolver: Signer | Provider, value: any, paramType: ParamType | Array<ParamType>): Promise<any> {\n    if (Array.isArray(paramType)) {\n        return await Promise.all(paramType.map((paramType, index) => {\n            return resolveAddresses(\n                resolver,\n                ((Array.isArray(value)) ? value[index]: value[paramType.name]),\n                paramType\n            );\n        }));\n    }\n\n    if (paramType.type === \"address\") {\n        return await resolveName(resolver, value);\n    }\n\n    if (paramType.type === \"tuple\") {\n        return await resolveAddresses(resolver, value, paramType.components);\n    }\n\n    if (paramType.baseType === \"array\") {\n        if (!Array.isArray(value)) {\n            return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                argument: \"value\",\n                value\n            }));\n        }\n        return await Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n    }\n\n    return value;\n}\n\nasync function populateTransaction(contract: Contract, fragment: FunctionFragment, args: Array<any>): Promise<PopulatedTransaction> {\n    // If an extra argument is given, it is overrides\n    let overrides: CallOverrides = { };\n    if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n        overrides = shallowCopy(args.pop());\n    }\n\n    // Make sure the parameter count matches\n    logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n\n    // Populate \"from\" override (allow promises)\n    if (contract.signer) {\n        if (overrides.from) {\n            // Contracts with a Signer are from the Signer's frame-of-reference;\n            // but we allow overriding \"from\" if it matches the signer\n            overrides.from = resolveProperties({\n                override: resolveName(contract.signer, overrides.from),\n                signer: contract.signer.getAddress()\n            }).then(async (check) => {\n                if (getAddress(check.signer) !== check.override) {\n                    logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"overrides.from\"\n                    });\n                }\n\n                return check.override;\n            });\n\n        } else {\n            overrides.from = contract.signer.getAddress();\n        }\n\n    } else if (overrides.from) {\n        overrides.from = resolveName(contract.provider, overrides.from);\n\n    //} else {\n        // Contracts without a signer can override \"from\", and if\n        // unspecified the zero address is used\n        //overrides.from = AddressZero;\n    }\n\n    // Wait for all dependencies to be resolved (prefer the signer over the provider)\n    const resolved = await resolveProperties({\n        args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n        address: contract.resolvedAddress,\n        overrides: (resolveProperties(overrides) || { })\n    });\n\n    // The ABI coded transaction\n    const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n    const tx: PopulatedTransaction = {\n      data: data,\n      to: resolved.address\n    };\n\n    // Resolved Overrides\n    const ro = resolved.overrides;\n\n    // Populate simple overrides\n    if (ro.nonce != null) { tx.nonce = BigNumber.from(ro.nonce).toNumber(); }\n    if (ro.gasLimit != null) { tx.gasLimit = BigNumber.from(ro.gasLimit); }\n    if (ro.gasPrice != null) { tx.gasPrice = BigNumber.from(ro.gasPrice); }\n    if (ro.maxFeePerGas != null) { tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas); }\n    if (ro.maxPriorityFeePerGas != null) { tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas); }\n    if (ro.from != null) { tx.from = ro.from; }\n\n    if (ro.type != null) { tx.type = ro.type; }\n    if (ro.accessList != null) { tx.accessList = accessListify(ro.accessList); }\n\n    // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n    if (tx.gasLimit == null && fragment.gas != null) {\n        // Compute the intrinsic gas cost for this transaction\n        // @TODO: This is based on the yellow paper as of Petersburg; this is something\n        // we may wish to parameterize in v6 as part of the Network object. Since this\n        // is always a non-nil to address, we can ignore G_create, but may wish to add\n        // similar logic to the ContractFactory.\n        let intrinsic = 21000;\n        const bytes = arrayify(data);\n        for (let i = 0; i < bytes.length; i++) {\n            intrinsic += 4;\n            if (bytes[i]) { intrinsic += 64; }\n        }\n        tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n    }\n\n    // Populate \"value\" override\n    if (ro.value) {\n        const roValue = BigNumber.from(ro.value);\n        if (!roValue.isZero() && !fragment.payable) {\n            logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides.value\",\n                value: overrides.value\n            });\n        }\n        tx.value = roValue;\n    }\n\n    if (ro.customData) {\n        tx.customData = shallowCopy(ro.customData);\n    }\n\n    if (ro.ccipReadEnabled) {\n        tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n    }\n\n    // Remove the overrides\n    delete overrides.nonce;\n    delete overrides.gasLimit;\n    delete overrides.gasPrice;\n    delete overrides.from;\n    delete overrides.value;\n\n    delete overrides.type;\n    delete overrides.accessList;\n\n    delete overrides.maxFeePerGas;\n    delete overrides.maxPriorityFeePerGas;\n\n    delete overrides.customData;\n    delete overrides.ccipReadEnabled;\n\n    // Make sure there are no stray overrides, which may indicate a\n    // typo or using an unsupported key.\n    const leftovers = Object.keys(overrides).filter((key) => ((<any>overrides)[key] != null));\n    if (leftovers.length) {\n        logger.throwError(`cannot override ${ leftovers.map((l) => JSON.stringify(l)).join(\",\") }`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"overrides\",\n            overrides: leftovers\n        });\n    }\n\n    return tx;\n}\n\n\nfunction buildPopulate(contract: Contract, fragment: FunctionFragment): ContractFunction<PopulatedTransaction> {\n    return function(...args: Array<any>): Promise<PopulatedTransaction> {\n        return populateTransaction(contract, fragment, args);\n    };\n}\n\nfunction buildEstimate(contract: Contract, fragment: FunctionFragment): ContractFunction<BigNumber> {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return async function(...args: Array<any>): Promise<BigNumber> {\n        if (!signerOrProvider) {\n            logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"estimateGas\"\n            })\n        }\n\n        const tx = await populateTransaction(contract, fragment, args);\n        return await signerOrProvider.estimateGas(tx);\n    };\n}\n\nfunction addContractWait(contract: Contract, tx: TransactionResponse) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations?: number) => {\n        return wait(confirmations).then((receipt: ContractReceipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event: Event = (<Event>deepCopy(log));\n                let parsed: LogDescription = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                } catch (e){ }\n\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data: BytesLike, topics?: Array<any>) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n\n                // Useful operations\n                event.removeListener = () => { return contract.provider; }\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                }\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                }\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                }\n\n                return event;\n            });\n\n            return receipt;\n        });\n    };\n}\n\nfunction buildCall(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    const signerOrProvider = (contract.signer || contract.provider);\n\n    return async function(...args: Array<any>): Promise<any> {\n        // Extract the \"blockTag\" override if present\n        let blockTag = undefined;\n        if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            const overrides = shallowCopy(args.pop());\n            if (overrides.blockTag != null) {\n                blockTag = await overrides.blockTag;\n            }\n            delete overrides.blockTag;\n            args.push(overrides);\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed(blockTag);\n        }\n\n        // Call a node and get the result\n        const tx = await populateTransaction(contract, fragment, args);\n        const result = await signerOrProvider.call(tx, blockTag);\n\n        try {\n            let value = contract.interface.decodeFunctionResult(fragment, result);\n            if (collapseSimple && fragment.outputs.length === 1) {\n                value = value[0];\n            }\n            return value;\n\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) {\n                error.address = contract.address;\n                error.args = args;\n                error.transaction = tx;\n            }\n            throw error;\n         }\n    };\n}\n\nfunction buildSend(contract: Contract, fragment: FunctionFragment): ContractFunction<TransactionResponse> {\n    return async function(...args: Array<any>): Promise<TransactionResponse> {\n        if (!contract.signer) {\n            logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"sendTransaction\"\n            })\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed();\n        }\n\n        const txRequest = await populateTransaction(contract, fragment, args);\n\n        const tx = await contract.signer.sendTransaction(txRequest);\n\n        // Tweak the tx.wait so the receipt has extra properties\n        addContractWait(contract, tx);\n\n        return tx;\n    };\n}\n\nfunction buildDefault(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\n\nfunction getEventTag(filter: EventFilter): string {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\"): \"\");\n}\n\nclass RunningEvent {\n    readonly tag: string;\n    readonly filter: EventFilter;\n    private _listeners: Array<{ listener: Listener, once: boolean }>;\n\n    constructor(tag: string, filter: EventFilter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [ ];\n    }\n\n    addListener(listener: Listener, once: boolean): void {\n        this._listeners.push({ listener: listener, once: once });\n    }\n\n    removeListener(listener: Listener): void {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) { return true; }\n            done = true;\n            return false;\n        });\n    }\n\n    removeAllListeners(): void {\n        this._listeners = [];\n    }\n\n    listeners(): Array<Listener> {\n        return this._listeners.map((i) => i.listener);\n    }\n\n    listenerCount(): number {\n        return this._listeners.length;\n    }\n\n    run(args: Array<any>): number {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n\n            const argsCopy = args.slice();\n\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n\n        return listenerCount;\n    }\n\n    prepareEvent(event: Event): void {\n    }\n\n    // Returns the array that will be applied to an emit\n    getEmit(event: Event): Array<any> {\n        return [ event ];\n    }\n}\n\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n\n\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n    readonly fragment: EventFragment;\n\n    constructor(address: string, contractInterface: Interface, fragment: EventFragment, topics?: Array<string|Array<string>>) {\n        const filter: EventFilter = {\n            address: address\n        }\n\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) { logger.throwArgumentError(\"topic mismatch\", \"topics\", topics); }\n            filter.topics = topics.slice();\n        } else {\n            filter.topics = [ topic ];\n        }\n\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n\n        event.decode = (data: BytesLike, topics?: Array<string>) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        } catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n\n    getEmit(event: Event): Array<any> {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) { throw errors[0].error; }\n\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n\n    constructor(address: string, contractInterface: Interface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n\n            event.decode = (data: BytesLike, topics?: Array<string>) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n\n            event.args = parsed.args;\n        } catch (error) {\n            // No matching event\n        }\n    }\n}\n\nexport type ContractInterface = string | ReadonlyArray<Fragment | JsonFragment | string> | Interface;\n\ntype InterfaceFunc = (contractInterface: ContractInterface) => Interface;\n\n\nexport class BaseContract {\n    readonly address: string;\n    readonly interface: Interface;\n\n    readonly signer: Signer;\n    readonly provider: Provider;\n\n    readonly functions: { [ name: string ]: ContractFunction };\n\n    readonly callStatic: { [ name: string ]: ContractFunction };\n    readonly estimateGas: { [ name: string ]: ContractFunction<BigNumber> };\n    readonly populateTransaction: { [ name: string ]: ContractFunction<PopulatedTransaction> };\n\n    readonly filters: { [ name: string ]: (...args: Array<any>) => EventFilter };\n\n    // This will always be an address. This will only differ from\n    // address if an ENS name was used in the constructor\n    readonly resolvedAddress: Promise<string>;\n\n    // This is only set if the contract was created with a call to deploy\n    readonly deployTransaction: TransactionResponse;\n\n    _deployedPromise: Promise<Contract>;\n\n    // A list of RunningEvents to track listeners for each event tag\n    _runningEvents: { [ eventTag: string ]: RunningEvent };\n\n    // Wrapped functions to call emit and allow deregistration from the provider\n    _wrappedEmits: { [ eventTag: string ]: (...args: Array<any>) => void };\n\n    constructor(addressOrName: string, contractInterface: ContractInterface, signerOrProvider?: Signer | Provider) {\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        } else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        } else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        } else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n\n        defineReadOnly(this, \"callStatic\", { });\n        defineReadOnly(this, \"estimateGas\", { });\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"populateTransaction\", { });\n\n        defineReadOnly(this, \"filters\", { });\n\n        {\n            const uniqueFilters: { [ name: string ]: Array<string> } = { };\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args: Array<any>) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                   }\n                });\n                if (!uniqueFilters[event.name]) { uniqueFilters[event.name] = [ ]; }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                } else {\n                    logger.warn(`Duplicate definition of ${ name } (${ filters.join(\", \")})`);\n                }\n            });\n        }\n\n        defineReadOnly(this, \"_runningEvents\", { });\n        defineReadOnly(this, \"_wrappedEmits\", { });\n\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        } else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            } catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n\n        const uniqueNames: { [ name: string ]: Array<string> } = { };\n        const uniqueSignatures: { [ signature: string ]: boolean } = { };\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${ JSON.stringify(signature) }`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${ name }`]) { uniqueNames[`%${ name }`] = [ ]; }\n                uniqueNames[`%${ name }`].push(signature);\n            }\n\n            if ((<Contract>this)[signature] == null) {\n                defineReadOnly<any, any>(this, signature, buildDefault(this, fragment, true));\n            }\n\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) { return; }\n\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n\n            const signature = signatures[0];\n\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if ((<Contract>this)[name] == null) {\n                    defineReadOnly(<Contract>this, name, (<Contract>this)[signature]);\n                }\n            } catch (e) { }\n\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n\n    static getContractAddress(transaction: { from: string, nonce: BigNumberish }): string {\n        return getContractAddress(transaction);\n    }\n\n    static getInterface(contractInterface: ContractInterface): Interface {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n\n    // @TODO: Allow timeout?\n    deployed(): Promise<Contract> {\n        return this._deployed();\n    }\n\n    _deployed(blockTag?: BlockTag): Promise<Contract> {\n        if (!this._deployedPromise) {\n\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n\n            } else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n\n        return this._deployedPromise;\n    }\n\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n\n    fallback(overrides?: TransactionRequest): Promise<TransactionResponse> {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" })\n        }\n\n        const tx: Deferrable<TransactionRequest> = shallowCopy(overrides || {});\n\n        [\"from\", \"to\"].forEach(function(key) {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider: Signer | Provider | string): Contract {\n        if (typeof(signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n\n        const contract = new (<{ new(...args: any[]): Contract }>(this.constructor))(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n\n        return contract;\n    }\n\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName: string): Contract {\n        return new (<{ new(...args: any[]): Contract }>(this.constructor))(addressOrName, this.interface, this.signer || this.provider);\n    }\n\n    static isIndexed(value: any): value is Indexed {\n        return Indexed.isIndexed(value);\n    }\n\n    private _normalizeRunningEvent(runningEvent: RunningEvent): RunningEvent {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n         }\n         return runningEvent\n    }\n\n    private _getRunningEvent(eventName: EventFilter | string): RunningEvent {\n        if (typeof(eventName) === \"string\") {\n\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName)\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof(topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            } catch (error) { }\n\n            // Filter by the unknown topichash\n            const filter: EventFilter = {\n                address: this.address,\n                topics: eventName.topics\n            }\n\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n\n    _checkRunningEvents(runningEvent: RunningEvent): void {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent: RunningEvent, log: Log, listener: Listener): Event {\n        const event = <Event>deepCopy(log);\n\n        event.removeListener = () => {\n            if (!listener) { return; }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); }\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); }\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); }\n\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n\n        return event;\n    }\n\n    private _addEventListener(runningEvent: RunningEvent, listener: Listener, once: boolean): void {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" })\n        }\n\n        runningEvent.addListener(listener, once);\n\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log: Log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    } catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n\n    queryFilter(event: EventFilter | string, fromBlockOrBlockhash?: BlockTag | string, toBlock?: BlockTag): Promise<Array<Event>> {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n\n        if (typeof(fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            (<FilterByBlockHash>filter).blockHash = fromBlockOrBlockhash;\n        } else {\n             (<Filter>filter).fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash: 0);\n             (<Filter>filter).toBlock = ((toBlock != null) ? toBlock: \"latest\");\n        }\n\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n\n    on(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n\n    once(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n\n    emit(eventName: EventFilter | string, ...args: Array<any>): boolean {\n        if (!this.provider) { return false; }\n\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventFilter | string): number {\n        if (!this.provider) { return 0; }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n\n    listeners(eventName?: EventFilter | string): Array<Listener> {\n        if (!this.provider) { return []; }\n\n        if (eventName == null) {\n            const result: Array<Listener> = [ ];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener)\n                });\n            }\n            return result;\n        }\n\n        return this._getRunningEvent(eventName).listeners();\n    }\n\n    removeAllListeners(eventName?: EventFilter | string): this {\n        if (!this.provider) { return this; }\n\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n\n        return this;\n    }\n\n    off(eventName: EventFilter | string, listener: Listener): this {\n        if (!this.provider) { return this; }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n\n    removeListener(eventName: EventFilter | string, listener: Listener): this {\n        return this.off(eventName, listener);\n    }\n\n}\n\nexport class Contract extends BaseContract {\n    // The meta-class properties\n    readonly [ key: string ]: ContractFunction | any;\n}\n\nexport class ContractFactory {\n\n    readonly interface: Interface;\n    readonly bytecode: string;\n    readonly signer: Signer;\n\n    constructor(contractInterface: ContractInterface, bytecode: BytesLike | { object: string }, signer?: Signer) {\n\n        let bytecodeHex: string = null;\n\n        if (typeof(bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        } else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        } else if (bytecode && typeof(bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = (<any>bytecode).object;\n        } else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") { bytecodeHex = \"0x\" + bytecodeHex; }\n\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args: Array<any>): TransactionRequest {\n        let tx: TransactionRequest = { };\n\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n\n        return tx\n    }\n\n    async deploy(...args: Array<any>): Promise<Contract> {\n\n        let overrides: any = { };\n\n        // If 1 extra parameter was passed in, it contains overrides\n        if (args.length === this.interface.deploy.inputs.length + 1) {\n            overrides = args.pop();\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Resolve ENS names and promises in the arguments\n        const params = await resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n        params.push(overrides);\n\n        // Get the deployment transaction (with optional overrides)\n        const unsignedTx = this.getDeployTransaction(...params);\n\n        // Send the deployment transaction\n        const tx = await this.signer.sendTransaction(unsignedTx);\n\n        const address = getStatic<(tx: TransactionResponse) => string>(this.constructor, \"getContractAddress\")(tx);\n        const contract = getStatic<(address: string, contractInterface: ContractInterface, signer?: Signer) => Contract>(this.constructor, \"getContract\")(address, this.interface, this.signer);\n\n        // Add the modified wait that wraps events\n        addContractWait(contract, tx);\n\n        defineReadOnly(contract, \"deployTransaction\", tx);\n        return contract;\n    }\n\n    attach(address: string): Contract {\n        return (<any>(this.constructor)).getContract(address, this.interface, this.signer);\n    }\n\n    connect(signer: Signer) {\n        return new (<{ new(...args: any[]): ContractFactory }>(this.constructor))(this.interface, this.bytecode, signer);\n    }\n\n    static fromSolidity(compilerOutput: any, signer?: Signer): ContractFactory {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n\n        if (typeof(compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n\n        const abi = compilerOutput.abi;\n\n        let bytecode: any = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n\n        return new this(abi, bytecode, signer);\n    }\n\n    static getInterface(contractInterface: ContractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n\n    static getContractAddress(tx: { from: string, nonce: BytesLike | BigNumber | number }): string {\n        return getContractAddress(tx);\n    }\n\n    static getContract(address: string, contractInterface: ContractInterface, signer?: Signer): Contract {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BigNumber, BigNumberish, isBigNumberish } from \"./bignumber\";\n\nconst _constructorGuard = { };\n\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\n\nfunction throwFault(message: string, fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value !== undefined) { params.value = value; }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) { zeros += zeros; }\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals: BigNumberish): string {\n\n    if (typeof(decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        } catch (e) { }\n    }\n\n    if (typeof(decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nexport function formatFixed(value: BigNumberish, decimals?: string | BigNumberish): string {\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n\n    const negative = value.lt(Zero);\n    if (negative) { value = value.mul(NegativeOne); }\n\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) { fraction = \"0\" + fraction; }\n\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    } else {\n        value = whole + \".\" + fraction;\n    }\n\n    if (negative) { value = \"-\" + value; }\n\n    return value;\n}\n\nexport function parseFixed(value: string, decimals?: BigNumberish): BigNumber {\n\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    if (typeof(value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) { value = value.substring(1); }\n\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) { whole = \"0\"; }\n    if (!fraction) { fraction = \"0\"; }\n\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") { fraction = \"0\"; }\n\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) { fraction += \"0\"; }\n\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n\n    if (negative) { wei = wei.mul(NegativeOne); }\n\n    return wei;\n}\n\n\nexport class FixedFormat {\n    readonly signed: boolean;\n    readonly width: number;\n    readonly decimals: number;\n    readonly name: string;\n    readonly _multiplier: string;\n\n    constructor(constructorGuard: any, signed: boolean, width: number, decimals: number) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n\n        this.name = (signed ? \"\": \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n\n        this._multiplier = getMultiplier(decimals);\n\n        Object.freeze(this);\n    }\n\n    static from(value: any): FixedFormat {\n        if (value instanceof FixedFormat) { return value; }\n\n        if (typeof(value) === \"number\") {\n            value = `fixed128x${value}`\n        }\n\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n\n        if (typeof(value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            } else if (value === \"ufixed\") {\n                signed = false;\n            } else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) { logger.throwArgumentError(\"invalid fixed format\", \"format\", value); }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        } else if (value) {\n            const check = (key: string, type: string, defaultValue: any): any => {\n                if (value[key] == null) { return defaultValue; }\n                if (typeof(value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type +\")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            }\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\n\nexport class FixedNumber {\n    readonly format: FixedFormat;\n    readonly _hex: string;\n    readonly _value: string;\n\n    readonly _isFixedNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string, value: string, format?: FixedFormat) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n\n        this._isFixedNumber = true;\n\n        Object.freeze(this);\n    }\n\n    _checkFormat(other: FixedNumber): void {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n\n    addUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n\n    subUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n\n    mulUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n\n    divUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n\n    floor(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    ceiling(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    // @TODO: Support other rounding algorithms\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) { decimals = 0; }\n\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n\n        if (comps[1].length <= decimals) { return this; }\n\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n\n    isZero(): boolean {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n\n    isNegative(): boolean {\n        return (this._value[0] === \"-\");\n    }\n\n    toString(): string { return this._value; }\n\n    toHexString(width?: number): string {\n        if (width == null) { return this._hex; }\n        if (width % 8) { logger.throwArgumentError(\"invalid byte width\", \"width\", width); }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n\n    toUnsafeFloat(): number { return parseFloat(this.toString()); }\n\n    toFormat(format: FixedFormat | string): FixedNumber {\n        return FixedNumber.fromString(this._value, format);\n    }\n\n\n    static fromValue(value: BigNumber, decimals?: BigNumberish, format?: FixedFormat | string | number): FixedNumber {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n\n        if (decimals == null) { decimals = 0; }\n        if (format == null) { format = \"fixed\"; }\n\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n\n\n    static fromString(value: string, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        const numeric = parseFixed(value, fixedFormat.decimals);\n\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n\n        let hex: string = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        } else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static fromBytes(value: BytesLike, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) { numeric = numeric.fromTwos(fixedFormat.width); }\n\n        const hex = numeric.toTwos((fixedFormat.signed ? 0: 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static from(value: any, format?: FixedFormat | string | number) {\n        if (typeof(value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        } catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n\n    static isFixedNumber(value: any): value is FixedNumber {\n        return !!(value && value._isFixedNumber);\n    }\n}\n\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n","import { Bytes, concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n\nexport function hashMessage(message: Bytes | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n","export const version = \"hash/5.7.0\";\n","import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac, SupportedAlgorithm } from \"@ethersproject/sha2\";\n\nexport function pbkdf2(password: BytesLike, salt: BytesLike, iterations: number, keylen: number, hashAlgorithm: string): string {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen)\n    const block1 = new Uint8Array(salt.length + 4)\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n\n    let r: number;\n    let T: Uint8Array;\n\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, block1));\n\n        if (!hLen) {\n            hLen = U.length\n            T = new Uint8Array(hLen)\n            l = Math.ceil(keylen / hLen)\n            r = keylen - (l - 1) * hLen\n        }\n\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n\n\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++) T[k] ^= U[k]\n        }\n\n\n        const destPos = (i - 1) * hLen\n        const len = (i === l ? r : hLen)\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n\n    return hexlify(DK)\n}\n\n","\"use strict\";\n\n// This gets overridden by rollup\nconst exportWordlist = false;\n\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\n\nexport abstract class Wordlist {\n    readonly locale: string;\n\n    constructor(locale: string) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n\n    abstract getWord(index: number): string;\n    abstract getWordIndex(word: string): number;\n\n    // Subclasses may override this\n    split(mnemonic: string): Array<string> {\n        return mnemonic.toLowerCase().split(/ +/g)\n    }\n\n    // Subclasses may override this\n    join(words: Array<string>): string {\n        return words.join(\" \");\n    }\n\n    static check(wordlist: Wordlist): string {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) { return \"0x\"; }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n\n    static register(lang: Wordlist, name?: string): void {\n        if (!name) { name = lang.locale; }\n\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = (window as any)\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                         defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            } catch (error) { }\n        }\n    }\n\n}\n\n","export const version = \"wordlists/5.7.0\";\n","\"use strict\";\n\nimport { Wordlist } from \"./wordlist\";\n\n\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\n\nlet wordlist: Array<string> = null;\n\n\nfunction loadWords(lang: Wordlist): void {\n    if (wordlist != null) { return; }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\n\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\n\nconst langEn = new LangEn();\nWordlist.register(langEn);\n\nexport { langEn };\n","\"use strict\";\n\n// Wordlists\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md\n\n// Browser; only include English by default\n\nimport { Wordlist } from \"./wordlist\";\n\nimport { langEn as en } from \"./lang-en\";\n\nexport const wordlists: { [ locale: string ]: Wordlist } = {\n  en: en\n}\n","\"use strict\";\n\n// See: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\n\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\n\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\n\nconst HardenedBit = 0x80000000;\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n   return ((1 << bits) - 1) << (8 - bits);\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n   return (1 << bits) - 1;\n}\n\nfunction bytes32(value: BigNumber | Uint8Array): string {\n    return hexZeroPad(hexlify(value), 32);\n}\n\nfunction base58check(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nfunction getWordlist(wordlist: string | Wordlist): Wordlist {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n\n    if (typeof(wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n\n    return wordlist;\n}\n\nconst _constructorGuard: any = {};\n\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n\nexport interface Mnemonic {\n    readonly phrase: string;\n    readonly path: string;\n    readonly locale: string;\n};\n\nexport class HDNode implements ExternallyOwnedAccount {\n    readonly privateKey: string;\n    readonly publicKey: string;\n\n    readonly fingerprint: string;\n    readonly parentFingerprint: string;\n\n    readonly address: string;\n\n    readonly mnemonic?: Mnemonic;\n    readonly path: string;\n\n    readonly chainCode: string;\n\n    readonly index: number;\n    readonly depth: number;\n\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard: any, privateKey: string, publicKey: string, parentFingerprint: string, chainCode: string, index: number, depth: number, mnemonicOrPath: Mnemonic | string) {\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        } else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n        defineReadOnly(this, \"chainCode\", chainCode);\n\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n\n        } else if (typeof(mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n\n        } else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        if (this.depth >= 256) { throw new Error(\"Depth too large!\"); }\n\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\": \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([ \"0x00\", this.privateKey ]): this.publicKey),\n        ]));\n    }\n\n    neuter(): HDNode {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n\n    private _derive(index: number): HDNode {\n        if (index > 0xffffffff) { throw new Error(\"invalid index - \" + String(index)); }\n\n        // Base path\n        let path = this.path;\n        if (path) { path += \"/\" + (index & ~HardenedBit); }\n\n        const data = new Uint8Array(37);\n\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n\n            // Hardened path\n            if (path) { path += \"'\"; }\n\n        } else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) { data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff); }\n\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n\n        // The private key\n        let ki: string = null\n\n        // The public key\n        let Ki: string = null;\n\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        } else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n\n        let mnemonicOrPath: Mnemonic | string = path;\n\n        const srcMnemonic =  this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n\n    derivePath(path: string): HDNode {\n        const components = path.split(\"/\");\n\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n\n        if (components[0] === \"m\") { components.shift(); }\n\n        let result: HDNode = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(HardenedBit + index);\n            } else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(index);\n            } else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n\n        return result;\n    }\n\n\n    static _fromSeed(seed: BytesLike, mnemonic: Mnemonic): HDNode {\n        const seedArray: Uint8Array = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) { throw new Error(\"invalid seed\"); }\n\n        const I: Uint8Array = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n\n    static fromMnemonic(mnemonic: string, password?: string, wordlist?: string | Wordlist): HDNode {\n\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n\n    static fromSeed(seed: BytesLike): HDNode {\n        return HDNode._fromSeed(seed, null);\n    }\n\n    static fromExtendedKey(extendedKey: string): HDNode {\n        const bytes = Base58.decode(extendedKey);\n\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\": case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n\n            // Private Key\n            case \"0x0488ade4\": case \"0x04358394 \":\n                if (key[0] !== 0) { break; }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\n\nexport function mnemonicToSeed(mnemonic: string, password?: string): string {\n    if (!password) { password = \"\"; }\n\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\n\nexport function mnemonicToEntropy(mnemonic: string, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    logger.checkNormalize();\n\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) { throw new Error(\"invalid mnemonic\"); }\n\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) { throw new Error(\"invalid mnemonic\"); }\n\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n\n    const entropyBits = 32 * words.length / 3;\n\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nexport function entropyToMnemonic(entropy: BytesLike, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    entropy = arrayify(entropy);\n\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n\n    const indices: Array<number> = [ 0 ];\n\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n\n            remainingBits -= 8;\n\n        // This byte will complete an 11-bit index\n        } else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n            remainingBits += 3;\n        }\n    }\n\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n\n    return wordlist.join(indices.map((index) => (<Wordlist>wordlist).getWord(index)));\n}\n\nexport function isValidMnemonic(mnemonic: string, wordlist?: Wordlist): boolean {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getAccountPath(index: number): string {\n    if (typeof(index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${ index }'/0/0`;\n}\n","export const version = \"hdnode/5.7.0\";\n","export const version = \"random/5.7.0\";\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\n\nlet crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n\n    logger.warn(\"WARNING: Missing strong random number source\");\n\n    crypto = {\n        getRandomValues: function(buffer: Uint8Array): Uint8Array {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n};\n","\"use strict\";\n\nimport { arrayify, Bytes, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: Bytes | string): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\n\nexport function searchPath(object: any, path: string): string {\n    let currentChild = object;\n\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comps[i]) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = arrayify(randomBytes);\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n\n","export const version = \"json-wallets/5.7.0\";\n","\"use strict\";\n\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, Mnemonic, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\n\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Exported Types\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\n\nexport interface _KeystoreAccount {\n    address: string;\n    privateKey: string;\n    mnemonic?: Mnemonic;\n\n    _isKeystoreAccount: boolean;\n}\n\nexport class KeystoreAccount extends Description<_KeystoreAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: Mnemonic;\n\n    readonly _isKeystoreAccount: boolean;\n\n    isKeystoreAccount(value: any): value is KeystoreAccount {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\n\nexport type ProgressCallback = (percent: number) => void;\n\nexport type EncryptOptions = {\n   iv?: BytesLike;\n   entropy?: BytesLike;\n   client?: string;\n   salt?: BytesLike;\n   uuid?: string;\n   scrypt?: {\n       N?: number;\n       r?: number;\n       p?: number;\n   }\n}\n\nfunction _decrypt(data: any, key: Uint8Array, ciphertext: Uint8Array): Uint8Array {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"))\n        const counter = new aes.Counter(iv);\n\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n\n    return null;\n}\n\nfunction _getAccount(data: any, key: Uint8Array): KeystoreAccount {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n\n    const computedMAC = hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n\n    const mnemonicKey = key.slice(32, 64);\n\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") { check = \"0x\" + check; }\n\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n\n    const account: _KeystoreAccount = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n\n            account.mnemonic = node.mnemonic;\n\n        } catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n\n    return new KeystoreAccount(account);\n}\n\ntype ScryptFunc<T> = (pw: Uint8Array, salt: Uint8Array, n: number, r: number, p: number, dkLen: number, callback?: ProgressCallback) => T;\ntype Pbkdf2Func<T> = (pw: Uint8Array, salt: Uint8Array, c: number, dkLen: number, prfFunc: string) => T;\n\nfunction pbkdf2Sync(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Uint8Array {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction pbkdf2(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Promise<Uint8Array> {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction _computeKdfKey<T>(data: any, password: Bytes | string, pbkdf2Func: Pbkdf2Func<T>, scryptFunc: ScryptFunc<T>, progressCallback?: ProgressCallback): T {\n    const passwordBytes = getPassword(password);\n\n    const kdf = searchPath(data, \"crypto/kdf\");\n\n    if (kdf && typeof(kdf) === \"string\") {\n        const throwError = function(name: string, value: any): never {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        }\n\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n\n            // Check for all required parameters\n            if (!N || !r || !p) { throwError(\"kdf\", kdf); }\n\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) { throwError(\"N\", N); }\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n\n        } else if (kdf.toLowerCase() === \"pbkdf2\") {\n\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n\n            let prfFunc: string = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            } else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            } else {\n                throwError(\"prf\", prf);\n            }\n\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\n\nexport function decryptSync(json: string, password: Bytes | string): KeystoreAccount {\n    const data = JSON.parse(json);\n\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\n\nexport async function decrypt(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<KeystoreAccount> {\n    const data = JSON.parse(json);\n\n    const key = await _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n    return _getAccount(data, key);\n}\n\n\nexport function encrypt(account: ExternallyOwnedAccount, password: Bytes | string, options?: EncryptOptions, progressCallback?: ProgressCallback): Promise<string> {\n\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n\n    } catch (e) {\n        return Promise.reject(e);\n    }\n\n    // The options are optional, so adjust the call as needed\n    if (typeof(options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) { options = {}; }\n\n    const privateKey: Uint8Array = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n\n    let entropy: Uint8Array = null\n    let path: string = null;\n    let locale: string = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n\n    let client = options.client;\n    if (!client) { client = \"ethers.js\"; }\n\n    // Check/generate the salt\n    let salt: Uint8Array = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    } else {\n        salt = randomBytes(32);;\n    }\n\n    // Override initialization vector\n    let iv: Uint8Array = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) { throw new Error(\"invalid iv\"); }\n    } else {\n       iv = randomBytes(16);\n    }\n\n    // Override the uuid\n    let uuidRandom: Uint8Array = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) { throw new Error(\"invalid uuid\"); }\n    } else {\n        uuidRandom = randomBytes(16);\n    }\n\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) { N = options.scrypt.N; }\n        if (options.scrypt.r) { r = options.scrypt.r; }\n        if (options.scrypt.p) { p = options.scrypt.p; }\n    }\n\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]))\n\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data: { [key: string]: any } = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                               zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                               zpad(now.getUTCDate(), 2) + \"T\" +\n                               zpad(now.getUTCHours(), 2) + \"-\" +\n                               zpad(now.getUTCMinutes(), 2) + \"-\" +\n                               zpad(now.getUTCSeconds(), 2) + \".0Z\"\n                              );\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n\n        return JSON.stringify(data);\n    });\n}\n","\"use strict\";\n\nimport aes from \"aes-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\n\nexport interface _CrowdsaleAccount {\n    address: string;\n    privateKey: string;\n\n    _isCrowdsaleAccount: boolean;\n}\n\nexport class CrowdsaleAccount extends Description<_CrowdsaleAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: string;\n    readonly path?: string;\n\n    readonly _isCrowdsaleAccount: boolean;\n\n    isCrowdsaleAccount(value: any): value is CrowdsaleAccount {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    const data = JSON.parse(json);\n\n    password = getPassword(password);\n\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n\n    const seedHexBytes = toUtf8Bytes(seedHex);\n\n    const privateKey = keccak256(seedHexBytes);\n\n    return new CrowdsaleAccount ({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\n\n\nexport function isCrowdsaleWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    return (data.encseed && data.ethaddr);\n}\n\nexport function isKeystoreWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\n\nexport function getJsonWalletAddress(json: string): string {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        } catch (error) { return null; }\n    }\n\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        } catch (error) { return null; }\n    }\n\n    return null;\n}\n\n","\"use strict\";\n\nimport { Bytes } from \"@ethersproject/bytes\";\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\n\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore, EncryptOptions, ProgressCallback } from \"./keystore\";\n\nfunction decryptJsonWallet(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<ExternallyOwnedAccount> {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) { progressCallback(0); }\n        const account = decryptCrowdsale(json, password)\n        if (progressCallback) { progressCallback(1); }\n        return Promise.resolve(account);\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\n\nfunction decryptJsonWalletSync(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password)\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n\n    throw new Error(\"invalid JSON wallet\");\n}\n\nexport {\n    decryptCrowdsale,\n\n    decryptKeystore,\n    decryptKeystoreSync,\n    encryptKeystore,\n\n    isCrowdsaleWallet,\n    isKeystoreWallet,\n    getJsonWalletAddress,\n\n    decryptJsonWallet,\n    decryptJsonWalletSync,\n\n    ProgressCallback,\n    EncryptOptions,\n};\n","export const version = \"wallet/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider, TransactionRequest } from \"@ethersproject/abstract-provider\";\nimport { ExternallyOwnedAccount, Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { arrayify, Bytes, BytesLike, concat, hexDataSlice, isHexString, joinSignature, SignatureLike } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic, Mnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize, UnsignedTransaction } from \"@ethersproject/transactions\";\nimport { Wordlist } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction isAccount(value: any): value is ExternallyOwnedAccount {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\n\nexport class Wallet extends Signer implements ExternallyOwnedAccount, TypedDataSigner {\n\n    readonly address: string;\n    readonly provider: Provider;\n\n    // Wrapping the _signingKey and _mnemonic in a getter function prevents\n    // leaking the private key in console.log; still, be careful! :)\n    readonly _signingKey: () => SigningKey;\n    readonly _mnemonic: () => Mnemonic;\n\n    constructor(privateKey: BytesLike | ExternallyOwnedAccount | SigningKey, provider?: Provider) {\n        super();\n\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => (\n                    {\n                        phrase: srcMnemonic.phrase,\n                        path: srcMnemonic.path || defaultPath,\n                        locale: srcMnemonic.locale || \"en\"\n                    }\n                ));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            } else {\n                defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            }\n\n\n        } else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => (<SigningKey>privateKey));\n\n            } else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof(privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n\n            defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    get mnemonic(): Mnemonic { return this._mnemonic(); }\n    get privateKey(): string { return this._signingKey().privateKey; }\n    get publicKey(): string { return this._signingKey().publicKey; }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    connect(provider: Provider): Wallet {\n        return new Wallet(this, provider);\n    }\n\n    signTransaction(transaction: TransactionRequest): Promise<string> {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n\n            const signature = this._signingKey().signDigest(keccak256(serialize(<UnsignedTransaction>tx)));\n            return serialize(<UnsignedTransaction>tx, signature);\n        });\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            if (this.provider == null) {\n                logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"resolveName\",\n                    value: name\n                });\n            }\n            return this.provider.resolveName(name);\n        });\n\n        return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n    }\n\n    encrypt(password: Bytes | string, options?: any, progressCallback?: ProgressCallback): Promise<string> {\n        if (typeof(options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n\n        if (progressCallback && typeof(progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n\n        if (!options) { options = {}; }\n\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n\n\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options?: any): Wallet {\n        let entropy: Uint8Array = randomBytes(16);\n\n        if (!options) { options = { }; }\n\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([ entropy, options.extraEntropy ])), 0, 16));\n        }\n\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n\n    static fromEncryptedJson(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<Wallet> {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n\n    static fromEncryptedJsonSync(json: string, password: Bytes | string): Wallet {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n\n    static fromMnemonic(mnemonic: string, path?: string, wordlist?: Wordlist): Wallet {\n        if (!path) { path = defaultPath; }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\n\nexport function verifyMessage(message: Bytes | string, signature: SignatureLike): string {\n    return recoverAddress(hashMessage(message), signature);\n}\n\nexport function verifyTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, signature: SignatureLike): string {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\";  // \"\\uD835\\uDF63\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n    sepolia: {\n        chainId: 11155111,\n        name: \"sepolia\",\n        _defaultProvider: ethDefaultProvider(\"sepolia\")\n    },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n","export const version = \"networks/5.7.1\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode(''));\n}\n\n","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n","export const version = \"web/5.7.1\";\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n","\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": (dataMatch[1] || \"text/plain\")},\n                body: (dataMatch[2] ? base64Decode(dataMatch[3]): unpercent(dataMatch[3]))\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n","export const version = \"providers/5.7.2\";\n","\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n","\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    messageData: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\nexport interface WebSocketLike {\n    onopen: ((...args: Array<any>) => any) | null;\n    onmessage: ((...args: Array<any>) => any) | null;\n    onerror: ((...args: Array<any>) => any) | null;\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string | WebSocketLike, network?: Networkish) {\n\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        if (typeof(url) === \"string\") {\n            super(url, network);\n        } else {\n            super(\"_websocket\", network);\n        }\n\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        } else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this.websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket(): WebSocketLike { return this._websocket; }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this.websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this.websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this.websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this.websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.websocket.close(1000);\n    }\n}\n","\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\"\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n","\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n","\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || typeof(result.message) !== \"string\" || !result.message.match(/^OK/)) {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string | null;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || null);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"sepolia\":\n                return \"https:/\\/api-sepolia.etherscan.io\";\n            case \"matic\":\n                return \"https:/\\/api.polygonscan.com\";\n            case \"maticmum\":\n                return \"https:/\\/api-testnet.polygonscan.com\";\n            case \"arbitrum\":\n                return \"https:/\\/api.arbiscan.io\";\n            case \"arbitrum-goerli\":\n                return \"https:/\\/api-goerli.arbiscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-goerli\":\n                return \"https:/\\/api-goerli-optimistic.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey == null);\n    }\n}\n","\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n","\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            if (method === \"call\" && params.blockTag) {\n                return provider[method](params.transaction, params.blockTag);\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n","\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"sepolia\":\n                host = \"sepolia.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-goerli\":\n                host = \"optimism-goerli.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arbitrum-goerli.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n","\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n","/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n\n        } else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n\n        } else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n\n        const connection: ConnectionInfo = { headers: { }, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n","\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n","\"use strict\";\n\nimport {\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    Provider,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse\n} from \"@ethersproject/abstract-provider\";\n\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\n\nimport { BaseProvider, EnsProvider, EnsResolver, Resolver } from \"./base-provider\";\n\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider, FallbackProviderConfig } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { ExternalProvider, JsonRpcFetchFunc } from \"./web3-provider\";\n\nimport { CommunityResourcable, Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network?: Networkish, options?: any): BaseProvider {\n    if (network == null) { network = \"homestead\"; }\n\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof(network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\": case \"https\":\n                    return new JsonRpcProvider(network);\n                case \"ws\": case \"wss\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n\n    return n._defaultProvider({\n        FallbackProvider,\n\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n\n        IpcProvider,\n    }, options);\n}\n\n////////////////////////\n// Exports\n\nexport {\n\n    // Abstract Providers (or Abstract-ish)\n    Provider,\n    BaseProvider,\n\n    Resolver,\n\n    UrlJsonRpcProvider,\n\n    ///////////////////////\n    // Concrete Providers\n\n    FallbackProvider,\n\n    AlchemyProvider,\n    AlchemyWebSocketProvider,\n    AnkrProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    InfuraWebSocketProvider,\n    JsonRpcProvider,\n    JsonRpcBatchProvider,\n    NodesmithProvider,\n    PocketProvider,\n    StaticJsonRpcProvider,\n    Web3Provider,\n    WebSocketProvider,\n\n    IpcProvider,\n\n\n    ///////////////////////\n    // Signer\n\n    JsonRpcSigner,\n\n\n    ///////////////////////\n    // Functions\n\n    getDefaultProvider,\n    getNetwork,\n    isCommunityResource,\n    isCommunityResourcable,\n    showThrottleMessage,\n\n\n    ///////////////////////\n    // Objects\n\n    Formatter,\n\n\n    ///////////////////////\n    // Types\n\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse,\n\n    ExternalProvider,\n    JsonRpcFetchFunc,\n\n    FallbackProviderConfig,\n\n    Network,\n    Networkish,\n\n    EnsProvider,\n    EnsResolver,\n\n    CommunityResourcable\n};\n\n","\"use strict\";\n\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\n\ntype Ranged = {\n    l: number,          // Lo value\n    h: number,          // High value (less the lo)\n    d?: number,         // Delta/stride (default: 1)\n    s?: number,         // Shift (default: 1)\n    e?: Array<number>   // Exceptions to skip\n};\n\ntype Table = { [ src: number ]: Array<number> };\n\nfunction bytes2(data: string): Array<number> {\n    if ((data.length % 4) !== 0) { throw new Error(\"bad data\"); }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\n\nfunction createTable(data: string, func?: (value: string) => Array<number>): Table {\n    if (!func) {\n        func = function(value: string) { return [ parseInt(value, 16) ]; }\n    }\n\n    let lo = 0;\n\n    let result: Table = { };\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n\n    return result;\n}\n\nfunction createRangeTable(data: string): Array<Ranged> {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\n\nfunction matchMap(value: number, ranges: Array<Ranged>): Ranged {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) { continue; }\n            return range;\n        }\n    }\n    return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\n\nconst Table_B_2_ranges: Array<Ranged> = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [ 23 ], l: 127 },\n    { h: 54, s: 1, e: [ 48 ], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [ 2, 6, 8 ], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [ 18, 24, 66 ], l: 19, d: 2 },\n    { h: 26, s: 32, e: [ 17 ], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [ 38 ], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [ 1, 4, 5, 7, 8, 11, 12, 17 ], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [ 2, 7, 8, 17 ], l: 52 },\n    { h: 24, s: -120023, e: [ 2, 7, 13, 15, 16, 17 ], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [ 17 ], l: 56 },\n    { h: 24, s: -119601, e: [ 17 ], l: 58 },\n    { h: 24, s: -119659, e: [ 17 ], l: 58 },\n    { h: 24, s: -119717, e: [ 17 ], l: 58 },\n    { h: 24, s: -119775, e: [ 17 ], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\n\nfunction flatten(values: Array<Array<number>>): Array<number> {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, [ ]);\n}\n\nexport function _nameprepTableA1(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nexport function _nameprepTableB2(codepoint: number): Array<number> {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) { return [ codepoint + range.s ]; }\n\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) { return codes; }\n\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) { return [ codepoint + shift[0] ]; }\n\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) { return complex; }\n\n    return null;\n}\n\nexport function _nameprepTableC(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\n\nexport function nameprep(value: string): string {\n\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) { return value.toLowerCase(); }\n\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) { return [ ]; }\n        if (code >= 0xfe00 && code <= 0xfe0f) { return [ ]; }\n\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) { return codesTableB2; }\n\n        // No Substitution\n        return [ code ];\n    }));\n\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n\n    // IDNA extras\n    let name = _toUtf8String(codes);\n\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n\n    return name;\n}\n\n","\"use strict\";\n\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\n\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\n\n\nexport function formatBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([ bytes, HashZero ]).slice(0, 32));\n}\n\nexport function parseBytes32String(bytes: BytesLike): string {\n    const data = arrayify(bytes);\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n","export const version = \"units/5.7.0\";\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n\n\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value: string | number): string {\n    const comps = String(value).split(\".\");\n\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") { whole = whole.substring(1); }\n    if (whole === \"\") { whole = \"0\"; }\n\n    let suffix = \"\";\n    if (comps.length === 2) { suffix = \".\" + (comps[1] || \"0\"); }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        } else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n\n    return negative + formatted.join(\",\") + suffix;\n}\n\nexport function formatUnits(value: BigNumberish, unitName?: string | BigNumberish): string {\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return formatFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function parseUnits(value: string, unitName?: BigNumberish): BigNumber {\n    if (typeof(value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return parseFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function formatEther(wei: BigNumberish): string {\n    return formatUnits(wei, 18);\n}\n\nexport function parseEther(ether: string): BigNumber {\n    return parseUnits(ether, 18);\n}\n\n","export const version = \"ethers/5.7.2\";\n","\"use strict\";\n\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\n\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\n\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nimport * as constants from \"@ethersproject/constants\";\n\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\n\nimport { Wordlist, wordlists} from \"@ethersproject/wordlists\";\n\nimport * as utils from \"./utils\";\n\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n\n////////////////////////\n// Types\n\nimport type { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike, Signature } from \"@ethersproject/bytes\";\nimport { Transaction, UnsignedTransaction } from \"@ethersproject/transactions\";\n\n\n////////////////////////\n// Compile-Time Constants\n\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\n////////////////////////\n// Types\n\nimport {\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface\n} from \"@ethersproject/contracts\";\n\n\n////////////////////////\n// Exports\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n};\n\n","\"use strict\";\n\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\n\nimport * as ethers from \"./ethers\";\n\ntry {\n    const anyGlobal = (window as any);\n\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n} catch (error) { }\n\nexport { ethers };\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n} from \"./ethers\";\n","\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n"],"names":["root","checkInt","value","parseInt","checkInts","arrayish","length","i","coerceArray","arg","copy","buffer","ArrayBuffer","isView","name","slice","Array","prototype","call","isArray","Error","Uint8Array","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","set","convertUtf8","toBytes","text","result","encodeURI","c","charCodeAt","push","substr","fromBytes","bytes","String","fromCharCode","join","convertHex","Hex","v","numberOfRounds","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","key","this","Object","defineProperty","_prepare","rounds","_Ke","_Kd","index","roundKeyCount","KC","tk","tt","rconpointer","t","r","encrypt","plaintext","a","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","j","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","hex","utf8","padding","pkcs7","pad","data","padder","strip","_arrayTest","module","exports","logger","Logger","ripemd160","hash","update","arrayify","digest","sha256","sha512","computeHmac","algorithm","SupportedAlgorithm","throwError","operation","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","constructor","BN","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","window","require","e","parseHex4Bits","string","parseHexByte","lowerBound","parseBase","str","start","end","mul","b","len","Math","min","move","dest","src","num","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","regexBytes","RegExp","regexNumber","regexArray","_pack","type","zeroPad","toUtf8Bytes","match","throwArgumentError","BigNumber","substring","baseType","forEach","concat","pack","types","values","tight","hexlify","keccak256","hashKeccak256","hashSha256","ALPHABET","ALPHABET_MAP","charAt","TypeError","polymodStep","pre","prefixChk","prefix","chk","__decode","LIMIT","lowered","toLowerCase","uppered","toUpperCase","lastIndexOf","wordChars","convert","inBits","outBits","maxV","decodeUnsafe","apply","arguments","decode","encode","toWordsUnsafe","toWords","fromWordsUnsafe","fromWords","ForkEvent","_isForkEvent","Description","Provider","checkAbstract","defineReadOnly","resolveProperties","getBlock","gasPrice","getGasPrice","catch","error","lastBaseFeePerGas","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","eventName","listener","on","_isProvider","allowedTransactionKeys","forwardErrors","Signer","blockTag","_checkProvider","provider","getBalance","getAddress","getTransactionCount","transaction","checkTransaction","tx","estimateGas","populateTransaction","signTransaction","signedTx","sendTransaction","getNetwork","network","chainId","getFeeData","resolveName","indexOf","shallowCopy","from","Promise","all","resolve","then","to","__awaiter","address","hasEip1559","feeData","nonce","gasLimit","code","getChainId","results","_isSigner","VoidSigner","message","_fail","domain","equal","zero2","toHex","enc","arr","minAssert","minUtils","getNAF","naf","fill","getJSF","k1","k2","jsf","m8","d1","d2","u1","u2","m14","m24","cachedProperty","obj","computer","parseBytes","intFromLE","BaseCurve","conf","zero","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","step","nafW","repr","jpoint","mixedAdd","points","toP","_wnafMul","nafPoints","_getNAFPoints","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","ja","jb","decodePoint","pointFromX","encodeCompressed","_encode","compact","getX","getY","precompute","power","beta","_getBeta","_hasDoubles","dbl","create","enumerable","writable","configurable","ShortCurve","Base","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","Point","isRed","inf","JPoint","zOne","lambda","betas","_getEndoRoots","lambdas","basis","map","vec","_getEndoBasis","ntinv","prevR","aprxSqrt","floor","y1","y2","len1","_endoSplit","v1","v2","c1","c2","p1","p2","q1","q2","ax","rhs","_endoWnafMulAdd","npoints","ncoeffs","fromJSON","endoMul","JSON","parse","obj2point","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","d","f","c8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","xc","require$$0","short","require$$1","edwards","curves","PresetCurve","options","defineCurve","get","HmacDRBG","predResist","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonceEnc","pers","persEnc","seed","_update","_hmac","kmac","reseed","addEnc","generate","temp","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","reason","getPrivate","derive","sign","verify","signature","Signature","_importDER","recoveryParam","Position","place","getLength","buf","initial","octetLen","rmPadding","constructLength","octets","log","LN2","slen","toDER","backHalf","rand","EC","hasOwnProperty","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","canonical","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic","version","require$$2","require$$3","eddsa","_curve","getCurve","SigningKey","privateKey","hexDataLength","other","p0","publicKey","digestBytes","splitSignature","hexZeroPad","otherKey","otherKeyPair","computePublicKey","_isSigningKey","recoverPublicKey","sig","rs","compressed","signingKey","TransactionTypes","handleAddress","handleNumber","Zero","transactionFields","maxLength","numeric","computeAddress","hexDataSlice","recoverAddress","formatNumber","stripZeros","toHexString","accessSetify","addr","storageKeys","storageKey","accessListify","keys","reduce","accum","sort","localeCompare","formatAccessList","_serializeEip1559","fields","accessList","hexConcat","RLP","_serializeEip2930","serialize","checkProperties","raw","fieldInfo","hexPad","isBytesLike","pop","_serialize","transactionType","_parseEipSignature","recid","rawTransaction","payload","_parse","_parseEip2930","_parseEip1559","customData","ccipReadEnabled","resolver","nameOrPromise","resolveAddresses","paramType","components","reject","makeError","argument","arrayChildren","contract","fragment","args","overrides","inputs","checkArgumentCount","signer","override","check","resolvedAddress","resolved","interface","encodeFunctionData","gas","intrinsic","roValue","payable","leftovers","filter","stringify","addContractWait","wait","bind","confirmations","receipt","events","logs","event","deepCopy","parsed","parseLog","topics","decodeEventLog","eventFragment","eventSignature","removeListener","blockHash","getTransaction","transactionHash","getTransactionReceipt","buildCall","collapseSimple","signerOrProvider","deployTransaction","_deployed","decodeFunctionResult","outputs","buildDefault","constant","txRequest","buildSend","getEventTag","topic","RunningEvent","tag","_listeners","once","done","item","listenerCount","argsCopy","setTimeout","ErrorRunningEvent","FragmentRunningEvent","contractInterface","getEventTopic","format","decodeError","errors","checkResultErrors","WildcardRunningEvent","BaseContract","addressOrName","getStatic","isSigner","isProvider","uniqueFilters","filters","encodeFilterTopics","warn","uniqueNames","uniqueSignatures","functions","callStatic","buildPopulate","buildEstimate","signatures","_deployedPromise","getCode","contractAddress","deployed","runningEvent","_runningEvents","_normalizeRunningEvent","getEvent","emit","_wrappedEmits","_checkRunningEvents","prepareEvent","addListener","wrappedEmit","_wrapEvent","getEmit","fromBlockOrBlockhash","toBlock","_getRunningEvent","isHexString","fromBlock","getLogs","_addEventListener","run","listeners","removeAllListeners","getContractAddress","Interface","Indexed","Contract","ContractFactory","bytecode","bytecodeHex","isBytes","object","deploy","encodeDeploy","params","unsignedTx","getDeployTransaction","getContract","compilerOutput","abi","evm","getInterface","_constructorGuard","NegativeOne","throwFault","fault","getMultiplier","decimals","formatFixed","multiplier","fraction","whole","parseFixed","comps","wholeValue","fractionValue","wei","FixedFormat","constructorGuard","signed","_multiplier","freeze","defaultValue","FixedNumber","_hex","_value","_isFixedNumber","_checkFormat","fromValue","hasFraction","isNegative","subUnsafe","ONE","toFormat","addUnsafe","factor","bump","BUMP","mulUnsafe","divUnsafe","parseFloat","fromString","isBigNumberish","fixedFormat","decimal","hashMessage","One","MaxUint256","hexTrue","hexFalse","domainFieldTypes","verifyingContract","salt","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","padOffset","hexPadRight","id","encodeType","TypedDataEncoder","links","parents","subtypes","field","primaryTypes","checkCircular","found","child","subtype","primaryType","st","_types","encoder","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","unshift","encodeData","hashStruct","callback","_visit","domainFields","EIP712Domain","hashDomain","ensCache","visit","domainValues","domainTypes","typesWithDomain","BaseX","alphabet","_alphabetMap","source","digits","_leader","byte","reverse","Base58","pbkdf2","password","iterations","keylen","hashAlgorithm","hLen","T","DK","block1","U","destPos","Wordlist","locale","mnemonic","wordlist","getWord","getWordIndex","lang","loadWords","langEn","register","wordlists","en","MasterSecret","HardenedBit","getUpperMask","bytes32","base58check","getWordlist","defaultPath","HDNode","parentFingerprint","chainCode","depth","mnemonicOrPath","compressedPublicKey","path","IL","IR","ki","Ki","_addPoint","srcMnemonic","phrase","fingerprint","component","_derive","seedArray","entropyToMnemonic","mnemonicToEntropy","_fromSeed","mnemonicToSeed","extendedKey","UnicodeNormalizationForm","checkNormalize","offset","normalize","entropyBits","checksumMask","indices","remainingBits","checksumBits","checksum","isValidMnemonic","getAccountPath","anyGlobal","global","getGlobal","crypto","msCrypto","randomBytes","getRandomValues","looseArrayify","hexString","zpad","getPassword","searchPath","currentChild","matchingChild","uuidV4","hasMnemonic","KeystoreAccount","_isKeystoreAccount","_getAccount","aes","aesCtr","_decrypt","mnemonicKey","account","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","node","fromMnemonic","derivePath","pbkdf2Sync","passwordBytes","count","dkLen","prfFunc","_pbkdf2","_computeKdfKey","pbkdf2Func","scryptFunc","progressCallback","kdf","prf","CrowdsaleAccount","_isCrowdsaleAccount","json","ethaddr","encseed","encryptedSeed","aesCbc","seedHex","seedHexBytes","isCrowdsaleWallet","isKeystoreWallet","getJsonWalletAddress","decryptJsonWallet","decryptCrowdsale","scrypt","decryptKeystore","decryptJsonWalletSync","decryptKeystoreSync","Wallet","isSigningKey","_mnemonic","_signingKey","signDigest","joinSignature","_TypedDataEncoder","populated","client","uuidRandom","uuid","derivedKey","macPrefix","mac","cipher","cipherparams","kdfparams","dklen","now","Date","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","encryptKeystore","extraEntropy","verifyMessage","verifyTypedData","AddressZero","HashZero","EtherSymbol","ethDefaultProvider","func","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","pocket","CloudflareProvider","cloudflare","AnkrProvider","ankr","FallbackProvider","quorum","renetwork","etcDefaultProvider","url","JsonRpcProvider","homestead","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","kintsugi","sepolia","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","standard","defaultProvider","textData","atob","btoa","flat","array","flatDeep","read_compressed_payload","pos","read_payload","u16","symbol_count","skip","pos_payload","read_width","read_buffer","read_bit","FULL","HALF","QRTR","MASK","symbols","low","range","decode_arithmetic","read_ascending","read_deltas","read_member_array","lookup","vX","vN","read_counts","read_transposed","read_linear_table","dx","dy","read_zero_terminated_array","ys","j_dy","read_replacement_table","VALID","Set","IGNORED","MAPPED","fromEntries","read_mapped_map","EMOJI_ROOT","sorted","read","branches","valid","fe0f","save","read_emoji_trie","explode_cp","toUtf8CodePoints","filter_fe0f","cps","cp","ens_normalize_post_check","label","every","err","ens_normalize","emoji_filter","emoji","consume_emoji_reversed","has","fromCodePoint","eaten","saved","stack","find","splice","Zeros","checkComponent","comp","ensNameSplit","last","isValidName","namehash","dnsEncode","getUrl","href","request","method","headers","body","skipFetchSetup","cache","credentials","redirect","referrer","fetchOptions","opts","fetch","response","arrayBuffer","statusCode","status","statusMessage","statusText","staller","duration","bodyify","trim","toUtf8String","_fetchData","connection","processFunc","attemptLimit","throttleLimit","assertArgument","throttleCallback","throttleSlotInterval","errorPassThrough","allow304","timeout","allowGzip","user","allowInsecureAuthentication","authorization","base64Encode","reData","dataMatch","base64Decode","requestBody","requestMethod","flatHeaders","header","runningTimeout","timer","promise","cancel","clearTimeout","runningFetch","attempt","location","tryAgain","stall","retryAfter","random","serverError","throttleRetry","race","fetchJson","updated","poll","ceiling","interval","retryLimit","oncePoll","onceBlock","Formatter","formats","getDefaultFormats","bigNumber","allowNull","blockNumber","transactionIndex","uint256","creates","transactionRequest","receiptLog","arrayOf","logIndex","gasUsed","logsBloom","cumulativeGasUsed","effectiveGasPrice","parentHash","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","filterLog","removed","boolean","allowFalsish","strict","hexValue","author","_difficulty","_block","networkId","parseTransaction","byzantium","checkKey","checkValue","nullValue","replaceValue","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","console","checkTopic","serializeTopics","unique","isForkEvent","getTime","PollableEvents","Event","_lastBlockNumber","_inflight","coinInfos","symbol","p2pkh","p2sh","ilk","bytes32ify","base58Encode","matcherIpfs","matchers","_parseString","_parseBytes","getIpfsLink","link","numPad","padded","bytesPad","encodeBytes","datas","byteCount","Resolver","formatter","_supportsEip2544","selector","parameters","supportsWildcard","_fetch","coinType","hexBytes","coinInfo","bech32","callAddress","_fetchBytes","_getAddress","linkage","content","getText","avatar","scheme","_resolvedAddress","owner","tokenId","tokenOwner","balance","metadataUrl","metadata","imageUrl","image","ipfs","ipns","swarm","skynet","urlSafe","keyBytes","defaultFormatter","nextPollId","BaseProvider","_events","_emitted","disableCcipRead","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","_maxInternalBlockNumber","_maxFilterBlockRange","_pollingInterval","_fastQueryDate","_network","calldata","urls","sender","errorMessages","errorMessage","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","_getInternalBlockNumber","pollingInterval","previousBlockNumber","eventBlockNumber","runner","minFromBlock","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","getBlockNumber","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","lastBlockNumber","startBlock","scannedBlock","replaceHandler","mined","getBlockWithTransactions","ti","waitForTransaction","cancelled","replacement","_wrapTransaction","unref","_getBlockTag","expectedHash","returnedHash","confirms","signedTransaction","hexTx","redirects","txSender","urlsOffset","urlsLength","urlsData","callbackSelector","ccipReadFetch","ccipResult","_call","_getTransactionRequest","blockHashOrBlockTag","includeTransactions","blockWithTxs","_getBlock","_getFilter","currentName","_getResolver","addrData","getResolver","resolverAddr","nameOrAddress","resolverAddress","getAvatar","pollable","_startEvent","stopped","eventTag","_stopEvent","errorGas","spelunk","requireData","checkError","responseText","getResult","getLowerCase","JsonRpcSigner","addressOrIndex","UncheckedJsonRpcSigner","_address","_index","send","accounts","fromAddress","estimate","hexlifyTransaction","action","sendUncheckedTransaction","messageData","networkOrReady","_nextId","_eventLoopCache","_cache","_uncachedDetectNetwork","getSigner","connectUnchecked","jsonrpc","prepareRequest","_startPending","_pendingFilter","pendingFilter","filterId","hashes","seq","allowExtra","allowed","WS","WebSocket","NextId","WebSocketProvider","_wsReady","websocket","onopen","_requests","onmessage","messageEvent","_subs","subscription","fauxPoll","_websocket","_detectNetwork","rid","param","subIdPromise","_subIds","subId","_subscribe","emitReceipt","readyState","onerror","close","StaticJsonRpcProvider","_super","UrlJsonRpcProvider","apiKey","defaultApiKey","AlchemyWebSocketProvider","host","getHost","projectSecret","getTransactionPostData","maxFeePerGs","getJsonResult","checkLogTag","getBaseUrl","query","baseUrl","apikey","post","getPostUrl","getPostData","procFunc","payloadStr","txhash","postData","topic0","blocks","ethusd","endBlock","startblock","endblock","timeStamp","shuffled","checkNetworks","median","maxDelta","middle","nextRid","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","getProcessFunc","configs","_highestBlockNumber","tally","normalizedTally","waitForSync","getRunner","currentBlockNumber","getEtherPrice","getStorageAt","providerConfigs","configOrProvider","stallTimeout","priority","first","t0","inflightWeight","backend","waiting","errorCode","props","IpcProvider","defaultProjectId","InfuraWebSocketProvider","projectId","apiKeyObj","JsonRpcBatchProvider","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","NodesmithProvider","defaultApplicationId","applicationId","loadBalancer","applicationSecretKey","buildWeb3LegacyFetcher","sendFunc","fetcher","Web3Provider","jsonRpcFetchFunc","subprovider","isMetaMask","buildEip1193Fetcher","sendAsync","getDefaultProvider","createTable","pair","createRangeTable","matchMap","ranges","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","nameprep","codes","codesTableB2","codepoint","_nameprepTableB2","_toUtf8String","formatBytes32String","parseBytes32String","names","commify","suffix","formatted","formatUnits","unitName","parseUnits","formatEther","parseEther","ether","_ethers","ethers","MAX_VALUE","SHA256","Uint32Array","h0","h1","h4","h5","h6","h7","bytesLeft","bitLenHi","bitLenLo","numZeros","PBKDF2_HMAC_SHA256_OneIter","innerLen","inner","outerKey","dk","incrementCounter","blockmix_salsa8","BY","Yi","_X","arraycopy","blockxor","salsa20_8","R","srcPos","checkBufferish","ensureInteger","_scrypt","i1","Bi","XY","totalOps","currentOp","lastPercent10","stop","state","i0","limit","nextTick","setImmediate","incrementalSMix","steps","percent10","lib","lastProgress","progress","syncScrypt"],"sourceRoot":""}